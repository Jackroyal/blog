{"Asset":[{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":false},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":false},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":false},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":false},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":false},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":false},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":false},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":false},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":false},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":false},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":false},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":false},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":false},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":false},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":false},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":false},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":false},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":false},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":false},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":false},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":false},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":false},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":false},{"_id":"themes/light/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":false},{"_id":"themes/light/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":false},{"_id":"themes/light/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":false},{"_id":"themes/light/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":false},{"_id":"themes/light/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":false},{"_id":"themes/light/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":false},{"_id":"themes/light/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":false},{"_id":"themes/light/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":false},{"_id":"themes/light/source/js/gallery.js","path":"js/gallery.js","modified":false},{"_id":"themes/light/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":false},{"_id":"themes/light/source/css/style.styl","path":"css/style.styl","modified":false},{"_id":"themes/light/source/css/font/fontawesome-webfont.eot","path":"css/font/fontawesome-webfont.eot","modified":false},{"_id":"themes/light/source/css/font/fontawesome-webfont.svg","path":"css/font/fontawesome-webfont.svg","modified":false},{"_id":"themes/light/source/css/font/fontawesome-webfont.ttf","path":"css/font/fontawesome-webfont.ttf","modified":false},{"_id":"themes/light/source/css/font/fontawesome-webfont.woff","path":"css/font/fontawesome-webfont.woff","modified":false}],"Cache":[{"_id":"scaffolds/draft.md","mtime":1418744588000},{"_id":"scaffolds/page.md","mtime":1418744588000},{"_id":"scaffolds/photo.md","mtime":1418744588000},{"_id":"scaffolds/post.md","mtime":1418744588000},{"_id":"source/_posts/[js]replace替换.md","mtime":1419105911000},{"_id":"source/_posts/[js]前端试题.md","mtime":1419105911000},{"_id":"source/_posts/chrome扩展开发手记<1>-需求分析.md","mtime":1419105911000},{"_id":"source/_posts/chrome扩展开发手记<2>-登录原理分析.md","mtime":1419105911000},{"_id":"source/_posts/chrome扩展开发手记<3>-chrome扩展开始第一步manfest.json.md","mtime":1419105911000},{"_id":"source/_posts/cmcc520扩展使用说明.md","mtime":1419105911000},{"_id":"source/_posts/custom-hexo.md","mtime":1418744588000},{"_id":"source/_posts/how-to-build-a-blog-with-hexo.md","mtime":1418918570000},{"_id":"source/_posts/new-start.md","mtime":1418744588000},{"_id":"source/_posts/recent-task.md","mtime":1418744588000},{"_id":"source/_posts/sql中left_join和right_join混用.md","mtime":1419105911000},{"_id":"source/_posts/wamp与sql_server_因为端口80冲突,无法开启wamp.md","mtime":1419105911000},{"_id":"source/_posts/阿里云windows_server_2003_搭建邮件服务器.md","mtime":1419105911000},{"_id":"themes/landscape/Gruntfile.js","mtime":1420522794000},{"_id":"themes/landscape/LICENSE","mtime":1420522794000},{"_id":"themes/landscape/README.md","mtime":1420522794000},{"_id":"themes/landscape/_config.yml","mtime":1420522794000},{"_id":"themes/landscape/package.json","mtime":1420522794000},{"_id":"themes/landscape/scripts/fancybox.js","mtime":1420522794000},{"_id":"themes/landscape/layout/archive.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/category.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/index.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/layout.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/page.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/post.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/tag.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_widget/archive.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_widget/category.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_widget/tag.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/archive.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/article.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/footer.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/head.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/header.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","mtime":1420522794000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","mtime":1420522794000},{"_id":"themes/landscape/source/js/script.js","mtime":1420522794000},{"_id":"themes/landscape/source/css/_extend.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_variables.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/style.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/archive.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/article.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/comment.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/footer.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/header.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_util/grid.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/_util/mixin.styl","mtime":1420522794000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","mtime":1420522794000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","mtime":1420522794000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","mtime":1420522794000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","mtime":1420522794000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","mtime":1420522794000},{"_id":"themes/landscape/source/css/images/banner.jpg","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/blank.gif","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","mtime":1420522794000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","mtime":1420522794000},{"_id":"themes/light/LICENSE","mtime":1418744588000},{"_id":"themes/light/README.md","mtime":1418744588000},{"_id":"themes/light/_config.yml","mtime":1418744588000},{"_id":"themes/light/package.json","mtime":1418744588000},{"_id":"themes/light/languages/de.yml","mtime":1418744588000},{"_id":"themes/light/languages/default.yml","mtime":1418744588000},{"_id":"themes/light/languages/es.yml","mtime":1418744588000},{"_id":"themes/light/languages/ru.yml","mtime":1418744588000},{"_id":"themes/light/languages/zh-CN.yml","mtime":1418744588000},{"_id":"themes/light/languages/zh-TW.yml","mtime":1418744588000},{"_id":"themes/light/layout/archive.ejs","mtime":1418744588000},{"_id":"themes/light/layout/category.ejs","mtime":1418744588000},{"_id":"themes/light/layout/index.ejs","mtime":1418744588000},{"_id":"themes/light/layout/layout.ejs","mtime":1418744588000},{"_id":"themes/light/layout/page.ejs","mtime":1418744588000},{"_id":"themes/light/layout/post.ejs","mtime":1418744588000},{"_id":"themes/light/layout/tag.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_widget/blogroll.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_widget/category.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_widget/recent_posts.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_widget/search.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_widget/tag.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_widget/tagcloud.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/after_footer.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/archive.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/article.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/comment.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/facebook_comment.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/footer.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/google_analytics.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/head.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/header.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/pagination.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/sidebar.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/post/category.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/post/gallery.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/post/share.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/post/tag.ejs","mtime":1418744588000},{"_id":"themes/light/layout/_partial/post/title.ejs","mtime":1418744588000},{"_id":"themes/light/source/fancybox/blank.gif","mtime":1418744588000},{"_id":"themes/light/source/fancybox/fancybox_loading.gif","mtime":1418744588000},{"_id":"themes/light/source/fancybox/fancybox_loading@2x.gif","mtime":1418744588000},{"_id":"themes/light/source/fancybox/fancybox_overlay.png","mtime":1418744588000},{"_id":"themes/light/source/fancybox/fancybox_sprite.png","mtime":1418744588000},{"_id":"themes/light/source/fancybox/fancybox_sprite@2x.png","mtime":1418744588000},{"_id":"themes/light/source/fancybox/jquery.fancybox.css","mtime":1418744588000},{"_id":"themes/light/source/fancybox/jquery.fancybox.pack.js","mtime":1418744588000},{"_id":"themes/light/source/js/gallery.js","mtime":1418744588000},{"_id":"themes/light/source/js/jquery.imagesloaded.min.js","mtime":1418744588000},{"_id":"themes/light/source/css/style.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_base/layout.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_base/utils.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_base/variable.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/archive.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/article.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/comment.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/footer.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/header.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/index.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/sidebar.styl","mtime":1418744588000},{"_id":"themes/light/source/css/_partial/syntax.styl","mtime":1418744588000},{"_id":"themes/light/source/css/font/fontawesome-webfont.eot","mtime":1418744588000},{"_id":"themes/light/source/css/font/fontawesome-webfont.svg","mtime":1418744588000},{"_id":"themes/light/source/css/font/fontawesome-webfont.ttf","mtime":1418744588000},{"_id":"themes/light/source/css/font/fontawesome-webfont.woff","mtime":1418744588000},{"_id":"source/_posts/linux下使用github.md","mtime":1421602831000},{"_id":"source/_posts/kali-and-ubuntu.md","mtime":1425392508000}],"Category":[{"name":"javascript","_id":"571y40tmuawerk1l","posts":["q34dbp145k5my6dk","cj9cjiaxme4swblq"]},{"name":"chrome扩展","_id":"i3xndnmp5j8lp53r","posts":["3verq2la7drepqas","eupvfnbbpfyq4ojk","caoy2ebvdv84y6d3","5zmkqerow5p8f4cb"]},{"name":"hexo","_id":"mqoc80ny8n803h7b","posts":["h2eugui5ttlnj6hf","xj57yhdq2ovsdg72"]},{"name":"杂文","_id":"vz833dw6waonlnwl","posts":["dnb5o6ueg8bomvyc"]},{"name":"数据库","_id":"z605g8or6huhcuzh","posts":["tgz4lf36k75lnimv"]},{"name":"软件安装与技巧","_id":"272c167xdlvbhewl","posts":["7kzfhsp9unztrn7i"]},{"name":"服务器","_id":"p8zc39zan9a38ptp","posts":["15hm90x9nmvh1b3f"]},{"name":"Linux","_id":"unizg29pab010hvw","posts":["xlpc535fdktqjldc"]},{"name":"linux","_id":"3ich6gz4ovg2vc0z","posts":["b8ii19v4abn10wjo"]}],"Page":[],"Post":[{"title":"[js]replace替换","date":1416925920000,"tags":["5m9ajrps9v5ypsn6","7uyms81ecxxutwly","n87ha0xooxcysqwn","46i69al1w9z1ehkh"],"categories":["571y40tmuawerk1l"],"content":"<p>今天做前端试题,用到了replace函数,来记录一下.<br>(以下部分知识点来自<a href=\"http://www.w3cschool.cn/jsref_replace.html\" target=\"_blank\" rel=\"external\">http://www.w3cschool.cn/jsref_replace.html</a>)</p>\n<h2 id=\"定义和用法\">定义和用法</h2>\n<p>replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</p>\n<h3 id=\"语法\">语法</h3>\n<table class=\"dataintable \" style=\"margin-top:10px; border-collapse:collapse; border:1px solid rgb(136,136,136); width:606px; color:rgb(0,0,0); font-size:12px; background-color:rgb(249,249,249)\"><br><tbody><br><tr><br><th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\"><br>参数</th><br><th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\"><br>描述</th><br></tr><br><tr><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>regexp/substr</td><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br><p style=\"margin-top:0px; margin-bottom:0px; line-height:18px\">必需。规定子字符串或要替换的模式的 RegExp 对象。</p><br><p style=\"margin-top:0px; margin-bottom:2px; line-height:18px\">请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。</p><br></td><br></tr><br><tr><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>replacement</td><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>必需。一个字符串值。规定了替换文本或生成替换文本的函数。</td><br></tr><br></tbody><br></table>\n\n<h3 id=\"返回值\">返回值</h3>\n<p>一个新的字符串，是用 <em>replacement</em> 替换了 regexp 的第一次匹配或所有匹配之后得到的。</p>\n<h3 id=\"说明\">说明</h3>\n<p>字符串 stringObject 的 replace() 方法执行的是查找并替换的操作。它将在 stringObject 中查找与 regexp 相匹配的子字符串，然后用 <em>replacement</em> 来替换这些子串。如果 regexp 具有全局标志 g，那么 replace() 方法将替换所有匹配的子串。否则，它只替换第一个匹配子串。</p>\n<p><em>replacement</em> 可以是字符串，也可以是函数。如果它是字符串，那么每个匹配都将由字符串替换。但是 replacement 中的 $ 字符具有特定的含义。如下表所示，它说明从模式匹配得到的字符串将用于替换。</p>\n<table class=\"dataintable \" style=\"margin-top:10px; border-collapse:collapse; border:1px solid rgb(136,136,136); width:606px; color:rgb(0,0,0); font-size:12px; background-color:rgb(249,249,249)\"><br><tbody><br><tr><br><th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\"><br>字符</th><br><th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\"><br>替换文本</th><br></tr><br><tr><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>$1、$2、…、$99</td><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>与 regexp 中的第 1 到第 99 个子表达式相匹配的文本。</td><br></tr><br><tr><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>$&amp;</td><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>与 regexp 相匹配的子串。</td><br></tr><br><tr><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>$`</td><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>位于匹配子串左侧的文本。</td><br></tr><br><tr><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>$’</td><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>位于匹配子串右侧的文本。</td><br></tr><br><tr><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>$$</td><br><td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\"><br>直接量符号。</td><br></tr><br></tbody><br></table>\n\n<p><strong>注意：</strong>ECMAScript v3 规定，replace() 方法的参数 replacement 可以是函数而不是字符串。在这种情况下，每个匹配都调用该函数，它返回的字符串将作为替换文本使用。该函数的第一个参数是匹配模式的字符串。接下来的参数是与模式中的子表达式匹配的字符串，可以有 0 个或多个这样的参数。接下来的参数是一个整数，声明了匹配在 stringObject 中出现的位置。最后一个参数是<br> stringObject 本身。</p>\n<p>下面给几个简单的例子来说明一下</p>\n<p>ps:介绍一下正则的小知识,\\w表示匹配一个英文字符,+表示匹配数量必须大于一个,\\b就是分节符,单词中间分隔用的,连在一起就是取出前面字符串中所有的单词</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'my name is'</span>.replace(<span class=\"regexp\">/(\\w+)\\b/g</span>,<span class=\"string\">'haha  '</span>);<span class=\"comment\">//输出结果为   \"haha   haha   haha  \"</span></div></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'my name is'</span>.replace(<span class=\"regexp\">/(\\w+)\\b/g</span>,<span class=\"string\">'$1aa'</span>);<span class=\"comment\">//输出结果为\"myaa nameaa isaa\"</span></div></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'my name is'</span>.replace(<span class=\"regexp\">/((\\w)(\\w+?))\\b/g</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(m,a,b,c,d,e)</span></span>{<span class=\"keyword\">return</span> b.toUpperCase()+c;});<span class=\"comment\">//输出结果为\"My Name Is\"</span></div></pre></td></tr></table></figure>\n\n<p>重点讲解一下第三个,replace返回值为函数的例子(function必须要return)</p>\n<p>当replace返回值为函数的时候</p>\n<p>如果只有一个分组的话,他的参数是funciton(match,pos,originalText),分别表示模式的匹配项,模式匹配项在字符串中的位置和原始字符串</p>\n<p>如果有多个分组的话,他的参数是funciton(match,arr1,arr2,arr3,….arrn,pos,originalText),分别表示模式的匹配项,模式匹配项,还有n个匹配的分组,最后的两个参数是在字符串中的位置和原始字符串</p>\n<p>比如下面的例子,执行的结果就是</p>\n<p>‘my name is imweba ‘.replace(/((\\w)(\\w+?))\\b/g,function(m,a,b,c,d,e){</p>\n<p>console.log(m);</p>\n<p>console.log(a);</p>\n<p>console.log(b);</p>\n<p>console.log(c);</p>\n<p>console.log(d);</p>\n<p>console.log(e);</p>\n<p>});<br>执行结果</p>\n<p>my//模式匹配的值,因为上面匹配了整个单词,虽然分了多个组</p>\n<p>my//第一个分组的值</p>\n<p>m//第二个分组的值</p>\n<p>y//第三个分组的值</p>\n<p>0//模式匹配在字符串中的起始位置</p>\n<p>my name is imweba  //原始字符串</p>\n<p>name</p>\n<p>name</p>\n<p>n</p>\n<p>ame</p>\n<p>3</p>\n<p>my name is imweba </p>\n<p>is</p>\n<p>is</p>\n<p>i</p>\n<p>s</p>\n<p>8</p>\n<p>my name is imweba </p>\n<p>imweba</p>\n<p>imweba</p>\n<p>i</p>\n<p>mweba</p>\n<p>11</p>\n<p>my name is imweba </p>\n<p>“undefined undefined undefined undefined “//这一行是因为function必须要有return,我没写return,所以就都是undefined</p>\n<p>ok  打完收工</p>\n","source":"_posts/[js]replace替换.md","raw":"title: '[js]replace替换'\ndate: 2014-11-25 22:32\ntags:\n- javascript\n- 正则表达式\n- 前端\n- js\ncategories:\n- javascript\n---\n\n今天做前端试题,用到了replace函数,来记录一下.\n(以下部分知识点来自[http://www.w3cschool.cn/jsref_replace.html](http://www.w3cschool.cn/jsref_replace.html))\n\n\n##定义和用法\n\n\n\n\r\nreplace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。\n\n###语法\n\n\n\n<table class=\"dataintable \" style=\"margin-top:10px; border-collapse:collapse; border:1px solid rgb(136,136,136); width:606px; color:rgb(0,0,0); font-size:12px; background-color:rgb(249,249,249)\">\n<tbody>\n<tr>\n<th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\">\r\n参数</th>\n<th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\">\r\n描述</th>\n</tr>\n<tr>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\nregexp/substr</td>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\n<p style=\"margin-top:0px; margin-bottom:0px; line-height:18px\">必需。规定子字符串或要替换的模式的 RegExp 对象。</p>\n<p style=\"margin-top:0px; margin-bottom:2px; line-height:18px\">请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。</p>\n</td>\n</tr>\n<tr>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\nreplacement</td>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n必需。一个字符串值。规定了替换文本或生成替换文本的函数。</td>\n</tr>\n</tbody>\n</table>\n\n###返回值\n\n\r\n一个新的字符串，是用 _replacement_ 替换了 regexp 的第一次匹配或所有匹配之后得到的。\n\n###说明\n\n\r\n字符串 stringObject 的 replace() 方法执行的是查找并替换的操作。它将在 stringObject 中查找与 regexp 相匹配的子字符串，然后用 _replacement_ 来替换这些子串。如果 regexp 具有全局标志 g，那么 replace() 方法将替换所有匹配的子串。否则，它只替换第一个匹配子串。\n\n_replacement_ 可以是字符串，也可以是函数。如果它是字符串，那么每个匹配都将由字符串替换。但是 replacement 中的 $ 字符具有特定的含义。如下表所示，它说明从模式匹配得到的字符串将用于替换。\n<table class=\"dataintable \" style=\"margin-top:10px; border-collapse:collapse; border:1px solid rgb(136,136,136); width:606px; color:rgb(0,0,0); font-size:12px; background-color:rgb(249,249,249)\">\n<tbody>\n<tr>\n<th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\">\r\n字符</th>\n<th style=\"vertical-align:baseline; padding:5px 15px 5px 5px; border:1px solid rgb(136,136,136); background-color:rgb(204,204,204)\">\r\n替换文本</th>\n</tr>\n<tr>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n$1、$2、...、$99</td>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n与 regexp 中的第 1 到第 99 个子表达式相匹配的文本。</td>\n</tr>\n<tr>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n$&</td>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n与 regexp 相匹配的子串。</td>\n</tr>\n<tr>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n$`</td>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n位于匹配子串左侧的文本。</td>\n</tr>\n<tr>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n$'</td>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n位于匹配子串右侧的文本。</td>\n</tr>\n<tr>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n$$</td>\n<td style=\"vertical-align:text-top; padding:5px 15px 5px 5px; border:1px solid rgb(170,170,170); background-color:rgb(239,239,239)\">\r\n直接量符号。</td>\n</tr>\n</tbody>\n</table>\n\n__注意：__ECMAScript v3 规定，replace() 方法的参数 replacement 可以是函数而不是字符串。在这种情况下，每个匹配都调用该函数，它返回的字符串将作为替换文本使用。该函数的第一个参数是匹配模式的字符串。接下来的参数是与模式中的子表达式匹配的字符串，可以有 0 个或多个这样的参数。接下来的参数是一个整数，声明了匹配在 stringObject 中出现的位置。最后一个参数是\r\n stringObject 本身。\n\n\n\n下面给几个简单的例子来说明一下\n\nps:介绍一下正则的小知识,\\w表示匹配一个英文字符,+表示匹配数量必须大于一个,\\b就是分节符,单词中间分隔用的,连在一起就是取出前面字符串中所有的单词\n\n\n```javascript\n'my name is'.replace(/(\\w+)\\b/g,'haha  ');//输出结果为   \"haha   haha   haha  \"\n```\n\n```javascript\n'my name is'.replace(/(\\w+)\\b/g,'$1aa');//输出结果为\"myaa nameaa isaa\"\n```\n\n```javascript\n'my name is'.replace(/((\\w)(\\w+?))\\b/g,function(m,a,b,c,d,e){return b.toUpperCase()+c;});//输出结果为\"My Name Is\"\n```\n\n重点讲解一下第三个,replace返回值为函数的例子(function必须要return)\n\n当replace返回值为函数的时候\n\n如果只有一个分组的话,他的参数是funciton(match,pos,originalText),分别表示模式的匹配项,模式匹配项在字符串中的位置和原始字符串\n\n如果有多个分组的话,他的参数是funciton(match,arr1,arr2,arr3,....arrn,pos,originalText),分别表示模式的匹配项,模式匹配项,还有n个匹配的分组,最后的两个参数是在字符串中的位置和原始字符串\n\n比如下面的例子,执行的结果就是\n\n'my name is imweba '.replace(/((\\w)(\\w+?))\\b/g,function(m,a,b,c,d,e){\n\nconsole.log(m);\n\nconsole.log(a);\n\nconsole.log(b);\n\nconsole.log(c);\n\nconsole.log(d);\n\nconsole.log(e);\n\n});\n执行结果\n\n\n\r\nmy//模式匹配的值,因为上面匹配了整个单词,虽然分了多个组\n\r\nmy//第一个分组的值\n\r\nm//第二个分组的值\n\r\ny//第三个分组的值\n\r\n0//模式匹配在字符串中的起始位置\n\r\nmy name is imweba  //原始字符串\n\r\nname\n\r\nname\n\r\nn\n\r\name\n\r\n3\n\r\nmy name is imweba \n\r\nis\n\r\nis\n\r\ni\n\r\ns\n\r\n8\n\r\nmy name is imweba \n\r\nimweba\n\r\nimweba\n\r\ni\n\r\nmweba\n\r\n11\n\r\nmy name is imweba \n\r\n\"undefined undefined undefined undefined \"//这一行是因为function必须要有return,我没写return,所以就都是undefined\n\n\n\n\n\n\n\n\n\nok  打完收工\n\n\n\n\n\n\n","slug":"[js]replace替换","updated":1419105911000,"excerpt":"","_id":"q34dbp145k5my6dk","comments":true,"layout":"post","photos":[],"link":""},{"title":"[js]前端试题","date":1416925560000,"tags":["5m9ajrps9v5ypsn6","n87ha0xooxcysqwn","ha4ie8mnfgryqmio"],"categories":["571y40tmuawerk1l"],"content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 1、获取页面id为 hello 的节点</span></div><div class=\"line\"><span class=\"keyword\">var</span> he=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hello'</span>);</div><div class=\"line\"><span class=\"comment\">// 2、获取页面所有 div 标签</span></div><div class=\"line\"><span class=\"keyword\">var</span> di=<span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'div'</span>);</div><div class=\"line\"><span class=\"comment\">// 3、给 id 为hello的节点绑定click 事件，点击的时候弹出 \"hello\"</span></div><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hello'</span>).onclick=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>{alert(<span class=\"string\">'helo'</span>)};</div><div class=\"line\"><span class=\"comment\">// 4、将页面上 id为hello的节点隐藏</span></div><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hello'</span>).style.visibility=none;</div><div class=\"line\"><span class=\"comment\">// 5、将 \"hello world\" 用正则替换成 \"hello javascript”</span></div><div class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'hello world'</span>;</div><div class=\"line\">str.replace(<span class=\"regexp\">/hello[\\s]+world/g</span>,<span class=\"string\">'hello javascript'</span>);</div><div class=\"line\"><span class=\"comment\">// 6、给节点（假设为element）绑定click事件，当被点击时候，alert 弹出事件的类型（通过jquery）</span></div><div class=\"line\">$(element).click(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(event)</span> </span>{</div><div class=\"line\">    alert(event.type);</div><div class=\"line\">});</div><div class=\"line\"><span class=\"comment\">// 7、给一个节点添加一个类 \"hello\"</span></div><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'kw'</span>).className=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'kw'</span>).className+<span class=\"string\">\" hello\"</span>;</div><div class=\"line\"><span class=\"comment\">// 8、给节点（假设为element）绑定click事件，当被点击时候，alert 弹出事件的类型（要求兼容IE、标准浏览器）</span></div><div class=\"line\">element.onclick=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(event)</span></span>{<span class=\"keyword\">var</span> e=event||<span class=\"built_in\">window</span>.event};</div><div class=\"line\"><span class=\"comment\">// 9、假设页面有这么两个节点将 id为world的节点的 内容设置成 跟 id 为 hello 的节点一样。</span></div><div class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'world'</span>).innerHTML=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hello'</span>).innerHTML;</div><div class=\"line\"><span class=\"comment\">// 10、通过 js 将element的margin-left 设置为 20px</span></div><div class=\"line\">element.style.marginLeft=<span class=\"string\">\"20px\"</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 1.[{a:3},{a:4},{a:1},{a:2}] sort排序</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortnum</span><span class=\"params\">(a,b)</span></span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> a.a-b.a;</div><div class=\"line\">}</div><div class=\"line\"><span class=\"comment\">//   [{a:3,b:5},{a:4,b:6},{a:1},{a:2,b:8}]按a的正向排序</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortab</span><span class=\"params\">(a,b)</span></span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> a.a-b.a!=<span class=\"number\">0</span>?a.a-b.a:a.b-b.b;</div><div class=\"line\">}</div><div class=\"line\"><span class=\"comment\">//   sort 排序原理  使用的算法</span></div><div class=\"line\"><span class=\"comment\">// 2.my name is imweba ... =&gt; my6 name7 is8 imweba9 ...</span></div><div class=\"line\"><span class=\"comment\">//   用正则实现</span></div><div class=\"line\"><span class=\"string\">'my name is imweba '</span>.replace(<span class=\"regexp\">/([\\w]+)\\b/g</span>,<span class=\"string\">'$1'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> attr=<span class=\"string\">'my name is imweba '</span>.match(<span class=\"regexp\">/([\\w]+)\\b/g</span>);</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i &lt; attr.length; i++) {</div><div class=\"line\">    attr[i]=attr[i]+(<span class=\"number\">6</span>+i);</div><div class=\"line\">};</div><div class=\"line\">attr.join(<span class=\"string\">' '</span>);<span class=\"comment\">//感觉不对,只能做到这个程度</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 3.实现function test(str)(){},将str的每个单词的首字母大写（str为英文字符串）</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">(str)</span></span>{</div><div class=\"line\">    <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/((\\w)(\\w+?))\\b/g</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(m,a,b,c,d,e)</span></span>{<span class=\"keyword\">return</span> b.toUpperCase()+c;});</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 4.写一个二分查找的算法   （假设这个数组不是有序的呢）</span></div><div class=\"line\">\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*</div><div class=\"line\"><span class=\"comment\">// 5.123+”+34  直接说结果   12334</span></div><div class=\"line\"><span class=\"number\">12334</span></div><div class=\"line\"><span class=\"comment\">// 加法会将数字转化为字符串，减法和乘法等会将字符串转化为数字</span></div><div class=\"line\"><span class=\"comment\">// \"4\"\\*\"5\"=20</span></div><div class=\"line\"><span class=\"comment\">// 6.实现function find(attr,val){},找到当前页面里具备属性为attr且值为val的节点，输出其父元素名称</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find</span><span class=\"params\">(attr,val)</span></span>{</div><div class=\"line\">    <span class=\"keyword\">var</span> dom=<span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'\\*'</span>);</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;dom.length; i++) {</div><div class=\"line\">        <span class=\"keyword\">if</span>(dom[i].getAttribute(attr)==val){</div><div class=\"line\">            <span class=\"keyword\">return</span> dom[i].parentNode.tagName;</div><div class=\"line\">        }</div><div class=\"line\">   }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n","source":"_posts/[js]前端试题.md","raw":"title: '[js]前端试题'\ndate: 2014-11-25 22:26\ntags:\n- javascript\n- 前端\n- 正则\ncategories:\n- javascript\n---\n\n```javascript\n// 1、获取页面id为 hello 的节点\nvar he=document.getElementById('hello');\n// 2、获取页面所有 div 标签\nvar di=document.getElementsByTagName('div');\n// 3、给 id 为hello的节点绑定click 事件，点击的时候弹出 \"hello\"\ndocument.getElementById('hello').onclick=function(){alert('helo')};\n// 4、将页面上 id为hello的节点隐藏\ndocument.getElementById('hello').style.visibility=none;\n// 5、将 \"hello world\" 用正则替换成 \"hello javascript”\nvar str='hello world';\nstr.replace(/hello[\\s]+world/g,'hello javascript');\n// 6、给节点（假设为element）绑定click事件，当被点击时候，alert 弹出事件的类型（通过jquery）\n$(element).click(function(event) {\n    alert(event.type);\n});\n// 7、给一个节点添加一个类 \"hello\"\ndocument.getElementById('kw').className=document.getElementById('kw').className+\" hello\";\n// 8、给节点（假设为element）绑定click事件，当被点击时候，alert 弹出事件的类型（要求兼容IE、标准浏览器）\nelement.onclick=function(event){var e=event||window.event};\n// 9、假设页面有这么两个节点将 id为world的节点的 内容设置成 跟 id 为 hello 的节点一样。\ndocument.getElementById('world').innerHTML=document.getElementById('hello').innerHTML;\n// 10、通过 js 将element的margin-left 设置为 20px\nelement.style.marginLeft=\"20px\";\n\n\n\n// 1.[{a:3},{a:4},{a:1},{a:2}] sort排序\nfunction sortnum(a,b){\n    return a.a-b.a;\n}\n//   [{a:3,b:5},{a:4,b:6},{a:1},{a:2,b:8}]按a的正向排序\nfunction sortab(a,b){\n    return a.a-b.a!=0?a.a-b.a:a.b-b.b;\n}\n//   sort 排序原理  使用的算法\n// 2.my name is imweba ... => my6 name7 is8 imweba9 ...\n//   用正则实现\n'my name is imweba '.replace(/([\\w]+)\\b/g,'$1')\nvar attr='my name is imweba '.match(/([\\w]+)\\b/g);\nfor (var i = 0;i < attr.length; i++) {\n    attr[i]=attr[i]+(6+i);\n};\nattr.join(' ');//感觉不对,只能做到这个程度\n\n// 3.实现function test(str)(){},将str的每个单词的首字母大写（str为英文字符串）\nfunction test(str){\n    return str.replace(/((\\w)(\\w+?))\\b/g,function(m,a,b,c,d,e){return b.toUpperCase()+c;});\n}\n\n// 4.写一个二分查找的算法   （假设这个数组不是有序的呢）\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\n// 5.123+”+34  直接说结果   12334\n12334\n// 加法会将数字转化为字符串，减法和乘法等会将字符串转化为数字\n// \"4\"\\*\"5\"=20\n// 6.实现function find(attr,val){},找到当前页面里具备属性为attr且值为val的节点，输出其父元素名称\nfunction find(attr,val){\n    var dom=document.getElementsByTagName('\\*');\n    for (var i = 0; i<dom.length; i++) {\n        if(dom[i].getAttribute(attr)==val){\n            return dom[i].parentNode.tagName;\n        }\n   }\n}\n\n```\n\n\n","slug":"[js]前端试题","updated":1419105911000,"excerpt":"","_id":"cj9cjiaxme4swblq","comments":true,"layout":"post","photos":[],"link":""},{"title":"chrome扩展开发手记<2>-登录原理分析","date":1416799080000,"tags":["3x41krbl4stuqof9","lq8yspm94k084re6","gve97yzmmnamj9ca"],"categories":["i3xndnmp5j8lp53r"],"content":"<p>上一篇,我们 介绍了一下登录的流程,但是用程序进行登录的话,我们肯定不能那样一步一步,太过复杂,所以我们接下来分下一下登录的具体过程,看看能不能作一些简化</p>\n<p>我们接下来,给几个页面编个号,下面好分析一点<br>A   最原始的跳转 <a href=\"http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC-EDU\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC-EDU</a><br>B  第一次改ssid  <a href=\"http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC-EDU\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free</a></p>\n<p>C 第一次点击 请点击登录  以后的地址<br><a href=\"http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free</a></p>\n<p>D 第二次改ssid<br><a href=\"http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC520</a></p>\n<ol>\n<li>从www.baidu.com跳转到A地址,这个步骤没什么特别的,服务器那边做了一个302跳转,然后我们这边就自动跳转到A地址了</li>\n<li><p>第一次改ssid,也就是从A到B,这个过程也没什么,只是一个单纯的地址跳转,B地址中有一个表单<br><br><img src=\"http://img.blog.csdn.net/20141124134725891?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br><br>这个表单里面 主要包含四个字段,<br><br>wlanacname:1022.0027.270.00<br><br>wlanuserip:10.80.97.209<br>ssid:iWuhan-Free<br><br>userAgent_1:Mozilla/5.0 (Windows NT 6.2)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36</p>\n</li>\n<li><p>我们第一次点击 请提交登录,所做的操作就是把上面的表单提交到  <a href=\"http://120.202.164.10:8080/portal/servlets/SingleLoginServlet\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/servlets/SingleLoginServlet</a><br><br>服务器返回的地址是C,这一步的表单提交主要是为了获取C的地址,就是因为多了的那个loginFree.jsp,这样下一步才能改ssid为CMCC520,否则,如果你越过这一步直接改ssid为CMCC520,就会跳转到其他的页面,比如下面这个<img src=\"http://img.blog.csdn.net/20141124133708801?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br><br>这个地址如果点击提交,是没有办法正常登陆的,我们必须要到武汉的那个页面才行.</p>\n</li>\n<li>在我们到达C那个页面以后,我们再次修改ssid,就到了D页面,然后在D页面点击  请点击登录,流程和上面的一样,页面效果也是一样,不过表单的值变了一个,具体表单post内容如下<br><br>wlanacname:1022.0027.270.00<br><br>wlanuserip:10.80.97.209<br>ssid:CMCC520<br>userAgent_1:Mozilla/5.0 (Windows NT 6.2)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36<br><br>提交以后,我们就可以登录成功了,成功以后服务器会做一个302跳转,页面跳转到一个登录计时的页面.</li>\n</ol>\n<p>************************************************************************************************************************************************************<br><em><br>\n</em><br>从整体来看,最核心的一个操作就是向<a href=\"http://120.202.164.10:8080/portal/servlets/SingleLoginServlet\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/servlets/SingleLoginServlet</a>提交一个表单,表单内容是<br>wlanacname:1022.0027.270.00<br>wlanuserip:10.80.97.209<br>ssid:CMCC520<br>userAgent<em>1:Mozilla/5.0 (Windows NT 6.2)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36<br>然后,然后就没有然后了,那个最后计时页面的跳转没有多大的实际作用,我们只需要post这一个请求就好了<br>下一步我们开始制作chrome扩展,核心也是要实现这个post的请求\n</em>************************************************************************************************************************************************************<em>\n</em>退出登录也是如此,发一个get请求过去,然后从获得的内容中进行判断,判断成功与否<em><br>_</em></p>\n<p>下线请求<br><a href=\"http://120.202.164.10:8080/portal/servlets/LogoutServlet?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC520&amp;ATTRIBUTE_USERNAME=iWuhanFree4300&amp;ATTRIBUTE_UUID=26FBE9A694B6221958CF6DE2704F0ECA&amp;ATTRIBUTE_IPADDRESS=10.80.97.209&amp;cancelAutomatismLogin=false\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/servlets/LogoutServlet?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC520&amp;ATTRIBUTE_USERNAME=iWuhanFree4300&amp;ATTRIBUTE_UUID=26FBE9A694B6221958CF6DE2704F0ECA&amp;ATTRIBUTE_IPADDRESS=10.80.97.209&amp;cancelAutomatismLogin=false</a></p>\n<p>表单实际内容</p>\n<p>wlanacname:1022.0027.270.00</p>\n<p>wlanuserip:10.80.97.209</p>\n<p>ssid:CMCC520</p>\n<p>ATTRIBUTE_USERNAME:iWuhanFree4300</p>\n<p>ATTRIBUTE_UUID:26FBE9A694B6221958CF6DE2704F0ECA</p>\n<p>ATTRIBUTE_IPADDRESS:10.80.97.209</p>\n<p>cancelAutomatismLogin:false</p>\n","source":"_posts/chrome扩展开发手记<2>-登录原理分析.md","raw":"title: 'chrome扩展开发手记<2>-登录原理分析'\ndate: 2014-11-24 11:18\ntags:\n- chrome\n- cmcc-edu\n- 表单\ncategories:\n- chrome扩展\n---\n\n上一篇,我们 介绍了一下登录的流程,但是用程序进行登录的话,我们肯定不能那样一步一步,太过复杂,所以我们接下来分下一下登录的具体过程,看看能不能作一些简化\n\n我们接下来,给几个页面编个号,下面好分析一点\nA   最原始的跳转 [http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC-EDU](http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC-EDU)\nB  第一次改ssid  [http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free](http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC-EDU)\n\nC 第一次点击 请点击登录  以后的地址\n[http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free](http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free)\n\nD 第二次改ssid  \n[http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC520](http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free)\n\n\n\n\n\n1. 从www.baidu.com跳转到A地址,这个步骤没什么特别的,服务器那边做了一个302跳转,然后我们这边就自动跳转到A地址了\n1. 第一次改ssid,也就是从A到B,这个过程也没什么,只是一个单纯的地址跳转,B地址中有一个表单<br/>\n![](http://img.blog.csdn.net/20141124134725891?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)<br/>\r\n这个表单里面 主要包含四个字段,\r\n<br/>wlanacname:1022.0027.270.00\n<br/>wlanuserip:10.80.97.209\nssid:iWuhan-Free\n<br/>userAgent_1:Mozilla/5.0 (Windows NT 6.2)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36\n\n1. 我们第一次点击 请提交登录,所做的操作就是把上面的表单提交到  [http://120.202.164.10:8080/portal/servlets/SingleLoginServlet](http://120.202.164.10:8080/portal/servlets/SingleLoginServlet)<br/>\r\n服务器返回的地址是C,这一步的表单提交主要是为了获取C的地址,就是因为多了的那个loginFree.jsp,这样下一步才能改ssid为CMCC520,否则,如果你越过这一步直接改ssid为CMCC520,就会跳转到其他的页面,比如下面这个![](http://img.blog.csdn.net/20141124133708801?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)<br/>\r\n这个地址如果点击提交,是没有办法正常登陆的,我们必须要到武汉的那个页面才行.\n1. 在我们到达C那个页面以后,我们再次修改ssid,就到了D页面,然后在D页面点击  请点击登录,流程和上面的一样,页面效果也是一样,不过表单的值变了一个,具体表单post内容如下\r\n<br/>wlanacname:1022.0027.270.00\n<br/>wlanuserip:10.80.97.209\nssid:CMCC520\nuserAgent_1:Mozilla/5.0 (Windows NT 6.2)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36<br/>\r\n提交以后,我们就可以登录成功了,成功以后服务器会做一个302跳转,页面跳转到一个登录计时的页面.\n\n\n\n\n\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\n_<br/>\n_\n从整体来看,最核心的一个操作就是向[http://120.202.164.10:8080/portal/servlets/SingleLoginServlet](http://120.202.164.10:8080/portal/servlets/SingleLoginServlet)提交一个表单,表单内容是\nwlanacname:1022.0027.270.00\nwlanuserip:10.80.97.209\nssid:CMCC520\nuserAgent_1:Mozilla/5.0 (Windows NT 6.2)AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36\n然后,然后就没有然后了,那个最后计时页面的跳转没有多大的实际作用,我们只需要post这一个请求就好了\n下一步我们开始制作chrome扩展,核心也是要实现这个post的请求\n_\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*\\*_\n_退出登录也是如此,发一个get请求过去,然后从获得的内容中进行判断,判断成功与否_\n__\n\n下线请求\n[http://120.202.164.10:8080/portal/servlets/LogoutServlet?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC520&ATTRIBUTE_USERNAME=iWuhanFree4300&ATTRIBUTE_UUID=26FBE9A694B6221958CF6DE2704F0ECA&ATTRIBUTE_IPADDRESS=10.80.97.209&cancelAutomatismLogin=false](http://120.202.164.10:8080/portal/servlets/LogoutServlet?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC520&ATTRIBUTE_USERNAME=iWuhanFree4300&ATTRIBUTE_UUID=26FBE9A694B6221958CF6DE2704F0ECA&ATTRIBUTE_IPADDRESS=10.80.97.209&cancelAutomatismLogin=false)\n\n表单实际内容\n\nwlanacname:1022.0027.270.00\n\nwlanuserip:10.80.97.209\n\nssid:CMCC520\n\nATTRIBUTE_USERNAME:iWuhanFree4300\n\nATTRIBUTE_UUID:26FBE9A694B6221958CF6DE2704F0ECA\n\nATTRIBUTE_IPADDRESS:10.80.97.209\n\ncancelAutomatismLogin:false\n\n\n\n\n\n\n\n\n","slug":"chrome扩展开发手记<2>-登录原理分析","updated":1419105911000,"excerpt":"","_id":"3verq2la7drepqas","comments":true,"layout":"post","photos":[],"link":""},{"title":"chrome扩展开发手记<1>-需求分析","date":1416565020000,"tags":["3x41krbl4stuqof9","lq8yspm94k084re6","yj9b6cth1f4lxjps"],"categories":["i3xndnmp5j8lp53r"],"content":"<p>本人的学校在武汉,有CMCC-EDU的网络覆盖,中国移动和武汉市政府搞了一个活动,可以免费公益上网,说白了,就是可以免费使用EDU的网络,如图.<br><img src=\"http://img.blog.csdn.net/20141121181910580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>以上是前提.</p>\n<p>这个网络的使用流程是这样子的.</p>\n<ol>\n<li>你打开任何一个网址,比如<a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"external\">http://www.baidu.com</a>  <br><br>都会跳转到 <a href=\"http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC-EDU\" target=\"_blank\" rel=\"external\"></a><a href=\"http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC-EDU\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC-EDU</a>  界面如图所示<br><br><img src=\"http://img.blog.csdn.net/20141124103645611?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></li>\n<li>接下来我们手动更改最上面的网址栏,把ssid改为iWuhan-Free,(注意大小写)<br><br>修改后的网址如下<a href=\"http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC-EDU\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free</a>界面如下<br><br><img src=\"http://img.blog.csdn.net/20141124104120281?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></li>\n<li>接下来我们点击,请点击登录按钮,系统反馈如下<br><br><img src=\"http://img.blog.csdn.net/20141124104623968?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><br><br>我们忽略这个警告,可以注意到,上面的地址栏已经变掉了,多了个loginFree.jsp完整的地址<a href=\"http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free</a></li>\n<li>接下来,我们再改一次ssid,改为CMCC520,完整地址如下<a href=\"http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=iWuhan-Free\" target=\"_blank\" rel=\"external\">http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&amp;wlanuserip=10.80.97.209&amp;ssid=CMCC520</a> 界面还是和上图一样,就不贴图了,我们再点击一次,请点击登录,然后就会跳到一个计时页面,这样就表示你登录成功,可以上网了</li>\n</ol>\n<p>登录的流程走完了,下一篇,接下来我们分析一下登录的原理,简化一下登录的流程</p>\n","source":"_posts/chrome扩展开发手记<1>-需求分析.md","raw":"title: 'chrome扩展开发手记<1>-需求分析'\ndate: 2014-11-21 18:17\ntags:\n- chrome\n- cmcc-edu\n- 中国移动\ncategories:\n- chrome扩展\n---\n\n本人的学校在武汉,有CMCC-EDU的网络覆盖,中国移动和武汉市政府搞了一个活动,可以免费公益上网,说白了,就是可以免费使用EDU的网络,如图.\n![](http://img.blog.csdn.net/20141121181910580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n\n以上是前提.\n\n这个网络的使用流程是这样子的.\n\n\n\n\n\n\n1. 你打开任何一个网址,比如http://www.baidu.com  <br/>\r\n都会跳转到 [](http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC-EDU)[http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC-EDU](http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC-EDU)  界面如图所示<br/>\n![](http://img.blog.csdn.net/20141124103645611?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n1. 接下来我们手动更改最上面的网址栏,把ssid改为iWuhan-Free,(注意大小写)<br/>\r\n修改后的网址如下[http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free](http://120.202.164.10:8080/portal/?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC-EDU)界面如下<br/>\n![](http://img.blog.csdn.net/20141124104120281?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n1. 接下来我们点击,请点击登录按钮,系统反馈如下<br/>\n![](http://img.blog.csdn.net/20141124104623968?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)<br/>\r\n我们忽略这个警告,可以注意到,上面的地址栏已经变掉了,多了个loginFree.jsp完整的地址[http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free](http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free)\n1. 接下来,我们再改一次ssid,改为CMCC520,完整地址如下[http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=CMCC520](http://120.202.164.10:8080/portal/loginFree.jsp?wlanacname=1022.0027.270.00&wlanuserip=10.80.97.209&ssid=iWuhan-Free) 界面还是和上图一样,就不贴图了,我们再点击一次,请点击登录,然后就会跳到一个计时页面,这样就表示你登录成功,可以上网了\n\n\n\n\n\n\n登录的流程走完了,下一篇,接下来我们分析一下登录的原理,简化一下登录的流程\n\n","slug":"chrome扩展开发手记<1>-需求分析","updated":1419105911000,"excerpt":"","_id":"eupvfnbbpfyq4ojk","comments":true,"layout":"post","photos":[],"link":""},{"title":"chrome扩展开发手记<3>-chrome扩展开始第一步manfest.json","date":1416813360000,"tags":["3x41krbl4stuqof9","lq8yspm94k084re6","4b7uoz4asbrl0284","dm1y66x8wdel9f4i","yj9b6cth1f4lxjps"],"categories":["i3xndnmp5j8lp53r"],"content":"<p>参考文档   <a href=\"https://lmk123.duapp.com/\" target=\"_blank\" rel=\"external\">https://lmk123.duapp.com/</a></p>\n<p>下面开始写chrome扩展了,第一步就是看文档,官方文档有入门指导,先要过一遍</p>\n<p>我们首先来编写第一个文件manfest.json,这是一个清单文件,告诉系统,我有哪些文件,需要申请哪些权限都在里面,下卖弄给出我的manfest.json</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">{</div><div class=\"line\">    <span class=\"string\">\"name\"</span>:<span class=\"string\">\"cmcc520\"</span>,<span class=\"comment\">//扩展的名称</span></div><div class=\"line\">    <span class=\"string\">\"version\"</span>:<span class=\"string\">\"2.0\"</span>,<span class=\"comment\">//扩展的版本号,随便写</span></div><div class=\"line\">    <span class=\"string\">\"description\"</span>:<span class=\"string\">\"powered by 搁浅St\"</span>,<span class=\"comment\">//扩展的描述,就是在chrome://extension页面中,扩展名称下面的几个字</span></div><div class=\"line\">    <span class=\"string\">\"background\"</span>: {<span class=\"comment\">//background.js,整个扩展的运行,有个页面在后台运行</span></div><div class=\"line\">        <span class=\"string\">\"scripts\"</span>: [<span class=\"string\">\"js/function.js\"</span>,<span class=\"string\">\"bg.js\"</span>],</div><div class=\"line\">        <span class=\"string\">\"persistent\"</span>: <span class=\"literal\">false</span></div><div class=\"line\">    },</div><div class=\"line\">    <span class=\"string\">\"page_action\"</span>:{<span class=\"comment\">//比较常见有page_action和browser_action有,page会出现在地址栏末端,browser会在浏览器上显示一个图标</span></div><div class=\"line\">        <span class=\"string\">\"default_icon\"</span>:<span class=\"string\">\"icon-48.png\"</span>,</div><div class=\"line\">        <span class=\"string\">\"default_popup\"</span>: <span class=\"string\">\"popup.html\"</span>,<span class=\"comment\">//popup.html点击弹出的页面</span></div><div class=\"line\">        <span class=\"string\">\"default_title\"</span>:<span class=\"string\">\"cmcc520\"</span></div><div class=\"line\">    },</div><div class=\"line\">    <span class=\"string\">\"permissions\"</span> : [<span class=\"comment\">//申请内容脚本的权限,在插入内容到页面时,需要用哪些权限,此处必须声明</span></div><div class=\"line\">        <span class=\"string\">\"tabs\"</span>, <span class=\"string\">\"http://\\*/\\*\"</span></div><div class=\"line\">    ],</div><div class=\"line\">    <span class=\"string\">\"icons\"</span> : {<span class=\"comment\">//图标设置</span></div><div class=\"line\">        <span class=\"string\">\"48\"</span> : <span class=\"string\">\"icon-48.png\"</span>,</div><div class=\"line\">        <span class=\"string\">\"128\"</span> : <span class=\"string\">\"icon-128.png\"</span></div><div class=\"line\">    },</div><div class=\"line\">    <span class=\"string\">\"commands\"</span>: {<span class=\"comment\">//快捷键设置</span></div><div class=\"line\">        <span class=\"string\">\"logout_cmcc\"</span>: {</div><div class=\"line\">            <span class=\"string\">\"description\"</span>: <span class=\"string\">\"退出CMCC登录\"</span>,</div><div class=\"line\">            <span class=\"string\">\"suggested_key\"</span>: {</div><div class=\"line\">                <span class=\"string\">\"default\"</span>: <span class=\"string\">\"Alt+X\"</span></div><div class=\"line\">            }</div><div class=\"line\">        }</div><div class=\"line\">    },</div><div class=\"line\">    <span class=\"string\">\"manifest_version\"</span>:<span class=\"number\">2</span><span class=\"comment\">//manifest_version,现在版本1已经不支持,统一都写成2</span></div><div class=\"line\"></div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>简单的属性,这里不再赘述,我重点说一下background,page_action,permissions和commands.</p>\n<p>background  它是一个包含扩展程序主要逻辑的不可见页面。扩展程序也可以包含其他页面，展现扩展程序的用户界面。如果扩展程序需要与用户加载的网页交互（相对于包含在扩展程序中的页面），扩展程序必须使用内容脚本。后台网页分两种：持续运行的后台网页与事件页面(设置persistent属性)。正如它们的名称所述，持续运行的后台网页保持打开状态，事件页面根据需要打开与关闭。除非您绝对需要您的后台网页一直运行，请首选事件页面。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"background\"</span>: {<span class=\"comment\">//background.js,整个扩展的运行,有个页面在后台运行</span></div><div class=\"line\">    <span class=\"string\">\"scripts\"</span>: [<span class=\"string\">\"js/function.js\"</span>,<span class=\"string\">\"bg.js\"</span>],</div><div class=\"line\">    <span class=\"string\">\"persistent\"</span>: <span class=\"literal\">false</span></div><div class=\"line\">},</div></pre></td></tr></table></figure>\n\n<p>比如我的这个 后台执行就是这样的</p>\n<p><img src=\"http://img.blog.csdn.net/20141124194616706?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>采用pageaction还是browseraction取决于你是否想让图标一直可见.`<img src=\"http://img.blog.csdn.net/20141124193151343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>如图,绿色的是广告终结者,他的图标是pageAction,后面的印象笔记还有switchproxy是browserAction.一般来说,适用于少数页面的扩展建议使用pageaction,适用于大多数页面的建议使用browseraction</p>\n<p>permissions属性,用来设置和conten_script相关的选项,举个例子,如果你想插入一段代码到页面中去执行,操作页面上的dom,那就写个content_script就行了,使用 content_scripts 字段，扩展程序可以向一个页面中插入多个内容脚本，每个内容脚本可以有多个<br> JavaScript 和 CSS 文件,详细情况请看这里<a href=\"https://lmk123.duapp.com/extensions/content_scripts\" target=\"_blank\" rel=\"external\">https://lmk123.duapp.com/extensions/content_scripts</a></p>\n<p>我现在在做的一个扩展就是做这样的事,百度的搜索结果会先跳到一个百度的网址,然后才是目标网址,我可以使用cotent_scripts来插入脚本,修改百度搜索结果的链接,让他直接跳转到目标页面,而不是百度的搜索结果页面.</p>\n<p>commands选项是设置快捷键,然后给快捷键设置事件 监听,这样我们按快捷键就会执行相应操作.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">\"logout_cmcc\"</span>: {<span class=\"comment\">//某个快捷操作的名称</span></div><div class=\"line\">    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"退出CMCC登录\"</span>,<span class=\"comment\">//快捷操作的描述</span></div><div class=\"line\">    <span class=\"string\">\"suggested_key\"</span>: {<span class=\"comment\">//默认推荐的快捷键,不能与系统默认的快捷键冲突,否则就会失灵,需要用户手动去设置</span></div><div class=\"line\">        <span class=\"string\">\"default\"</span>: <span class=\"string\">\"Alt+X\"</span></div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n","source":"_posts/chrome扩展开发手记<3>-chrome扩展开始第一步manfest.json.md","raw":"title: 'chrome扩展开发手记<3>-chrome扩展开始第一步manfest.json'\ndate: 2014-11-24 15:16\ntags:\n- chrome\n- cmcc-edu\n- 扩展\n- 脚本\n- 中国移动\ncategories:\n- chrome扩展\n---\n参考文档   [https://lmk123.duapp.com/](https://lmk123.duapp.com/)\n\n下面开始写chrome扩展了,第一步就是看文档,官方文档有入门指导,先要过一遍\n\n我们首先来编写第一个文件manfest.json,这是一个清单文件,告诉系统,我有哪些文件,需要申请哪些权限都在里面,下卖弄给出我的manfest.json\n\n\n\n\n\n```javascript\n{\n    \"name\":\"cmcc520\",//扩展的名称\n    \"version\":\"2.0\",//扩展的版本号,随便写\n    \"description\":\"powered by 搁浅St\",//扩展的描述,就是在chrome://extension页面中,扩展名称下面的几个字\n    \"background\": {//background.js,整个扩展的运行,有个页面在后台运行\n        \"scripts\": [\"js/function.js\",\"bg.js\"],\n        \"persistent\": false\n    },\n    \"page_action\":{//比较常见有page_action和browser_action有,page会出现在地址栏末端,browser会在浏览器上显示一个图标\n        \"default_icon\":\"icon-48.png\",\n        \"default_popup\": \"popup.html\",//popup.html点击弹出的页面\n        \"default_title\":\"cmcc520\"\n    },\n    \"permissions\" : [//申请内容脚本的权限,在插入内容到页面时,需要用哪些权限,此处必须声明\n        \"tabs\", \"http://\\*/\\*\"\n    ],\n    \"icons\" : {//图标设置\n        \"48\" : \"icon-48.png\",\n        \"128\" : \"icon-128.png\"\n    },\n    \"commands\": {//快捷键设置\n        \"logout_cmcc\": {\n            \"description\": \"退出CMCC登录\",\n            \"suggested_key\": {\n                \"default\": \"Alt+X\"\n            }\n        }\n    },\n    \"manifest_version\":2//manifest_version,现在版本1已经不支持,统一都写成2\n\n}\n\n```\n\n\r\n简单的属性,这里不再赘述,我重点说一下background,page_action,permissions和commands.\r\n\nbackground  它是一个包含扩展程序主要逻辑的不可见页面。扩展程序也可以包含其他页面，展现扩展程序的用户界面。如果扩展程序需要与用户加载的网页交互（相对于包含在扩展程序中的页面），扩展程序必须使用内容脚本。后台网页分两种：持续运行的后台网页与事件页面(设置persistent属性)。正如它们的名称所述，持续运行的后台网页保持打开状态，事件页面根据需要打开与关闭。除非您绝对需要您的后台网页一直运行，请首选事件页面。\n\n\n```javascript\n    \"background\": {//background.js,整个扩展的运行,有个页面在后台运行\n        \"scripts\": [\"js/function.js\",\"bg.js\"],\n        \"persistent\": false\n    },\n```\n比如我的这个 后台执行就是这样的\r\n\n![](http://img.blog.csdn.net/20141124194616706?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n采用pageaction还是browseraction取决于你是否想让图标一直可见.`![](http://img.blog.csdn.net/20141124193151343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n如图,绿色的是广告终结者,他的图标是pageAction,后面的印象笔记还有switchproxy是browserAction.一般来说,适用于少数页面的扩展建议使用pageaction,适用于大多数页面的建议使用browseraction\n\n\n\n\n\n\npermissions属性,用来设置和conten_script相关的选项,举个例子,如果你想插入一段代码到页面中去执行,操作页面上的dom,那就写个content_script就行了,使用 content_scripts 字段，扩展程序可以向一个页面中插入多个内容脚本，每个内容脚本可以有多个\r\n JavaScript 和 CSS 文件,详细情况请看这里[https://lmk123.duapp.com/extensions/content_scripts](https://lmk123.duapp.com/extensions/content_scripts)\n\n我现在在做的一个扩展就是做这样的事,百度的搜索结果会先跳到一个百度的网址,然后才是目标网址,我可以使用cotent_scripts来插入脚本,修改百度搜索结果的链接,让他直接跳转到目标页面,而不是百度的搜索结果页面.\n\n\n\n\n\n\n\ncommands选项是设置快捷键,然后给快捷键设置事件 监听,这样我们按快捷键就会执行相应操作.\n\n\n```javascript\n        \"logout_cmcc\": {//某个快捷操作的名称\n            \"description\": \"退出CMCC登录\",//快捷操作的描述\n            \"suggested_key\": {//默认推荐的快捷键,不能与系统默认的快捷键冲突,否则就会失灵,需要用户手动去设置\n                \"default\": \"Alt+X\"\n            }\n        }\n```\n\n\n\n","slug":"chrome扩展开发手记<3>-chrome扩展开始第一步manfest.json","updated":1419105911000,"excerpt":"","_id":"caoy2ebvdv84y6d3","comments":true,"layout":"post","photos":[],"link":""},{"title":"配置hexo","date":1417180047000,"tags":["54uvuinfeo6xlt3o"],"categories":["mqoc80ny8n803h7b"],"content":"<p>经过<a href=\"/how-to-build-a-blog-with-hexo.html\">上篇博客</a>,我们搭建起了自己的博客,接下来我们对它做些个性化的定制.<br>在hexo中,配置文件一共两个(我的hexo安装在F:/blog/),分别是<code>F:/blog/_config.yml</code>和<code>F:/blog/themes/light/_config.yml</code>.第一个是全局的配置文件,第二个是主题的配置文件,在继续说之前,我们先来说一下主题安装.<a id=\"more\"></a></p>\n<h1 id=\"主题安装\">主题安装</h1>\n<p>这个很简单,在hexo的Github的主页上有个主题栏目,<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"external\">https://github.com/hexojs/hexo/wiki/Themes</a>,里面列出了很多主题.<br>安装方法很简单</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"input\"><span class=\"prompt\">$ git clone &lt;repository&gt;</span> themes/&lt;theme-name&gt;</span></div></pre></td></tr></table></figure>\n\n<p>举个简单例子,我安装的主题名为<code>light</code>,请在<code>F:/blog/</code>目录下执行以下代码</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">$ </span>git clone <span class=\"symbol\">https:</span>/<span class=\"regexp\">/github.com/hexojs</span><span class=\"regexp\">/hexo-theme-light themes/light</span></div></pre></td></tr></table></figure>\n\n<p>如果你不是在<code>F:/blog/</code>中执行,请修改后面的路径themes/light为你的路径.基本原理就是把主题下下来,放在themes目录下就OK了,主题安装完毕.</p>\n<h1 id=\"修改全局配置文件_F:/blog/_config-yml\">修改全局配置文件 <code>F:/blog/_config.yml</code></h1>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\"># Hexo Configuration</span></div><div class=\"line\"><span class=\"preprocessor\">## Docs: http://hexo.io/docs/configuration.html</span></div><div class=\"line\"><span class=\"preprocessor\">## Source: https://github.com/hexojs/hexo/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Site</span></div><div class=\"line\"><span class=\"label\">title:</span> 搁浅<span class=\"keyword\">St</span>的blog  <span class=\"preprocessor\">#站点的名称</span></div><div class=\"line\"><span class=\"label\">subtitle:</span> 我最喜欢笨笨   <span class=\"preprocessor\">#站点的副标题</span></div><div class=\"line\"><span class=\"label\">description:</span>             <span class=\"preprocessor\">#站点的描述,有利于搜索引擎的抓取</span></div><div class=\"line\"><span class=\"label\">author:</span> 搁浅<span class=\"keyword\">St</span>       <span class=\"preprocessor\">#作者</span></div><div class=\"line\"><span class=\"label\">email:</span> geqianst@qq.com          <span class=\"preprocessor\">#你的邮箱</span></div><div class=\"line\"><span class=\"label\">language:</span> <span class=\"built_in\">zh</span>-CN           <span class=\"preprocessor\">#语言,一般应该都是这个吧</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># URL</span></div><div class=\"line\"><span class=\"preprocessor\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class=\"line\"><span class=\"label\">url:</span> http://jackroyal.github.io       <span class=\"preprocessor\">#网站的url,在页面上,可以调用配置中的url参数,就是这个,比如google自定义搜索,需要制定搜索范围,就是通过这个设置的</span></div><div class=\"line\"><span class=\"label\">root:</span> /</div><div class=\"line\"><span class=\"label\">permalink:</span> :year/:month/:day/:title/</div><div class=\"line\"><span class=\"label\">tag_dir:</span> tags</div><div class=\"line\"><span class=\"label\">archive_dir:</span> archives</div><div class=\"line\"><span class=\"label\">category_dir:</span> categories</div><div class=\"line\"><span class=\"label\">code_dir:</span> downloads/code</div><div class=\"line\"><span class=\"label\">permalink_defaults:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Directory</span></div><div class=\"line\"><span class=\"label\">source_dir:</span> source</div><div class=\"line\"><span class=\"label\">public_dir:</span> public</div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Writing</span></div><div class=\"line\"><span class=\"label\">new_post_name:</span> :title.md <span class=\"preprocessor\"># File name of new posts</span></div><div class=\"line\"><span class=\"label\">default_layout:</span> post  </div><div class=\"line\"><span class=\"label\">titlecase:</span> false <span class=\"preprocessor\"># Transform title into titlecase</span></div><div class=\"line\"><span class=\"label\">external_link:</span> true <span class=\"preprocessor\"># Open external links in new tab</span></div><div class=\"line\"><span class=\"label\">filename_case:</span> <span class=\"number\">0</span></div><div class=\"line\"><span class=\"label\">render_drafts:</span> false</div><div class=\"line\"><span class=\"label\">post_asset_folder:</span> false</div><div class=\"line\"><span class=\"label\">relative_link:</span> false</div><div class=\"line\"><span class=\"label\">highlight:</span></div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Category & Tag</span></div><div class=\"line\"><span class=\"label\">default_category:</span> uncategorized  </div><div class=\"line\"><span class=\"label\">category_map:</span></div><div class=\"line\"><span class=\"label\">tag_map:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Archives 默认值为2，这里都修改为1，相应页面就只会列出标题，而非全文</span></div><div class=\"line\"><span class=\"preprocessor\">## 2: Enable pagination</span></div><div class=\"line\"><span class=\"preprocessor\">## 1: Disable pagination</span></div><div class=\"line\"><span class=\"preprocessor\">## 0: Fully Disable</span></div><div class=\"line\"><span class=\"label\">archive:</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"label\">category:</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"label\">tag:</span> <span class=\"number\">1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Server</span></div><div class=\"line\"><span class=\"preprocessor\">## Hexo uses Connect as a server</span></div><div class=\"line\"><span class=\"preprocessor\">## You can customize the logger format as defined in</span></div><div class=\"line\"><span class=\"preprocessor\">## http://www.senchalabs.org/connect/logger.html</span></div><div class=\"line\"><span class=\"label\">port:</span> <span class=\"number\">4000</span></div><div class=\"line\"><span class=\"label\">server_ip:</span> localhost</div><div class=\"line\"><span class=\"label\">logger:</span> false</div><div class=\"line\"><span class=\"label\">logger_format:</span> dev</div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Date / Time format</span></div><div class=\"line\"><span class=\"preprocessor\">## Hexo uses Moment.js to parse and display date</span></div><div class=\"line\"><span class=\"preprocessor\">## You can customize the date format as defined in</span></div><div class=\"line\"><span class=\"preprocessor\">## http://momentjs.com/docs/#/displaying/format/</span></div><div class=\"line\"><span class=\"label\">date_format:</span> MMM D YYYY</div><div class=\"line\"><span class=\"label\">time_format:</span> H:mm:ss</div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Pagination</span></div><div class=\"line\"><span class=\"preprocessor\">## Set per_page to 0 to disable pagination</span></div><div class=\"line\"><span class=\"label\">per_page:</span> <span class=\"number\">5</span></div><div class=\"line\"><span class=\"label\">pagination_dir:</span> page</div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Disqus</span></div><div class=\"line\"><span class=\"label\">disqus_shortname:</span></div><div class=\"line\"><span class=\"preprocessor\">#这一行是我添加的duoshuo_shortname,因为天朝disqus不好用,用多说</span></div><div class=\"line\"><span class=\"label\">duoshuo_shortname:</span> jackroyal</div><div class=\"line\"><span class=\"preprocessor\"># Extensions</span></div><div class=\"line\"><span class=\"preprocessor\">## Plugins: https://github.com/hexojs/hexo/wiki/Plugins</span></div><div class=\"line\"><span class=\"preprocessor\">## Themes: https://github.com/hexojs/hexo/wiki/Themes</span></div><div class=\"line\"><span class=\"label\">theme:</span> light</div><div class=\"line\"><span class=\"label\">exclude_generator:</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\"># Deployment  发布相关设置</span></div><div class=\"line\"><span class=\"preprocessor\">## Docs: http://hexo.io/docs/deployment.html</span></div><div class=\"line\"><span class=\"label\">deploy:</span></div><div class=\"line\">  type: github</div><div class=\"line\">  repo: https://github.com/Jackroyal/Jackroyal.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n\n<p>至此,全局配置文件修改完毕,你可以<code>hexo g</code>和<code>hexo s</code>进行查看.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"label\">menu:</span><span class=\"preprocessor\">#导航栏的设置默认只有这两个,还可以添加更多的导航</span></div><div class=\"line\">  Home: /</div><div class=\"line\">  Archives: /archives</div><div class=\"line\"><span class=\"preprocessor\">#它就是你页面右边的侧边项目,比如搜索之类,你可以根据自己的需求进行修改,你能用几个widgets可以在F:\\blog\\themes\\light\\layout\\_widget中进行查看</span></div><div class=\"line\"><span class=\"label\">widgets:</span><span class=\"preprocessor\">#我这里使用了所有的widgets</span></div><div class=\"line\">- search</div><div class=\"line\">- category</div><div class=\"line\">- tag</div><div class=\"line\">- recent_posts</div><div class=\"line\">- tagcloud</div><div class=\"line\"></div><div class=\"line\"><span class=\"label\">excerpt_link:</span> Read More  <span class=\"preprocessor\">#可以换成中文的  阅读全文</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"label\">twitter:</span></div><div class=\"line\">  username:</div><div class=\"line\">  show_replies: false</div><div class=\"line\">  tweet_count: <span class=\"number\">5</span></div><div class=\"line\">//默认的一个分享组件,因为主要针对国外,不适合国内我们不使用它</div><div class=\"line\"><span class=\"label\">addthis:</span></div><div class=\"line\">  enable: false  <span class=\"preprocessor\">#把true改为false</span></div><div class=\"line\">  pubid:</div><div class=\"line\">  facebook: true</div><div class=\"line\">  twitter: true</div><div class=\"line\">  google: true</div><div class=\"line\">  pinterest: true</div><div class=\"line\"></div><div class=\"line\"><span class=\"label\">fancybox:</span> true</div><div class=\"line\"></div><div class=\"line\"><span class=\"label\">google_analytics:</span></div><div class=\"line\"><span class=\"label\">rss:</span></div><div class=\"line\"><span class=\"label\">duoshuo_shortname:</span> jackroyal  <span class=\"preprocessor\">#多说的用户名</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"label\">comment_provider:</span></div><div class=\"line\"><span class=\"preprocessor\"># Facebook comment</span></div><div class=\"line\"><span class=\"label\">facebook:</span></div><div class=\"line\">  appid: <span class=\"number\">123456789012345</span></div><div class=\"line\">  comment_count: <span class=\"number\">5</span></div><div class=\"line\">  comment_width: <span class=\"number\">840</span></div><div class=\"line\">  comment_colorscheme: light</div></pre></td></tr></table></figure>\n\n<p>至此,配置文件修改完毕,上面提到了我们不适用disqus的评论组件,使用多说,下面教大家来配置多说</p>\n<h1 id=\"创建多说\">创建多说</h1>\n<p>首先我们去多说注册一个账号,<a href=\"http://duoshuo.com/\" title=\"多说官网\" target=\"_blank\" rel=\"external\">点击这里</a><br>我们点击<a href=\"http://duoshuo.com/create-site/\" title=\"我要安装\" target=\"_blank\" rel=\"external\">我要安装</a>,界面如下<img src=\"http://ww4.sinaimg.cn/large/692869a3gw1emtdlnpsqaj20wo0lp783.jpg\" alt=\"duoshuo 创建界面\" title=\"创建多说账号\"><br>shortname就是jackroyal,创建完成后,跳转到如下界面<br><img src=\"http://ww1.sinaimg.cn/large/692869a3gw1emtdp96x54j20us0jxn18.jpg\" alt=\"获取多说代码\" title=\"获取多说代码\"><br>我们选择<code>通用代码</code>,点击复制,就行了</p>\n<h1 id=\"配置多说\">配置多说</h1>\n<p>这里说一个前提,我使用的是light主题,如果你用的是其他主题,接下来的设置可能给我有点区别,但是原理差不多,参考看看</p>\n<ol>\n<li>我们打开<code>F:\\blog\\themes\\light\\layout\\_partial\\comment.ejs</code>这个文件,然后修改后代码如下(如果你不是light主题,可能跟这个不一样,你去找下包含comment的section在哪里,改法还是这样.例如系统默认的landscape主题,下面这段代码就是在article.ejs,它没有comment.ejs)</li>\n</ol>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"vbscript\">&lt;% <span class=\"keyword\">if</span> (page.comments){ %&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 这里添加了一个导航,页面的下面会有一个上一篇,下一篇 --&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;<span class=\"title\">nav</span> <span class=\"attribute\">id</span>=<span class=\"value\">\"pagination\"</span> &gt;</span></div><div class=\"line\">    <span class=\"vbscript\">&lt;% <span class=\"keyword\">if</span> (page.prev) { %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"title\">a</span> <span class=\"attribute\">href</span>=<span class=\"value\">\"&lt;%- config.root %&gt;&lt;%- page.prev.path %&gt;\"</span> <span class=\"attribute\">class</span>=<span class=\"value\">\"alignleft prev\"</span> &gt;</span> <span class=\"vbscript\">&lt;%=page.prev.title %&gt;</span> <span class=\"tag\">&lt;/<span class=\"title\">a</span>&gt;</span></div><div class=\"line\">    <span class=\"vbscript\">&lt;% } %&gt;</span></div><div class=\"line\">    <span class=\"vbscript\">&lt;% <span class=\"keyword\">if</span> (page.<span class=\"keyword\">next</span>) { %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"title\">a</span> <span class=\"attribute\">href</span>=<span class=\"value\">\"&lt;%- config.root %&gt;&lt;%- page.next.path %&gt;\"</span> <span class=\"attribute\">class</span>=<span class=\"value\">\"alignright next\"</span> &gt;</span> <span class=\"vbscript\">&lt;%=page.<span class=\"keyword\">next</span>.title %&gt;</span> <span class=\"tag\">&lt;/<span class=\"title\">a</span>&gt;</span></div><div class=\"line\">    <span class=\"vbscript\">&lt;% } %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"title\">div</span> <span class=\"attribute\">class</span>=<span class=\"value\">\"clearfix\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"title\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"title\">nav</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 导航结束 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"title\">section</span> <span class=\"attribute\">id</span>=<span class=\"value\">\"comments\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 这里是多说的代码,直接把你的代码粘贴到这里就行 --&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 多说评论框 start --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"title\">div</span> <span class=\"attribute\">class</span>=<span class=\"value\">\"ds-thread\"</span> <span class=\"attribute\">data-thread-key</span>=<span class=\"value\">\"&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;\"</span> <span class=\"attribute\">data-title</span>=<span class=\"value\">\"&lt;%= page.title %&gt;\"</span> <span class=\"attribute\">data-url</span>=<span class=\"value\">\"&lt;%= page.permalink %&gt;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"title\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 多说评论框 end --&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"title\">script</span> <span class=\"attribute\">type</span>=<span class=\"value\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> duoshuoQuery = {short_name:<span class=\"string\">'&lt;%= config.duoshuo_shortname %&gt;'</span>};</div><div class=\"line\">      (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span> </span>{</div><div class=\"line\">        <span class=\"keyword\">var</span> ds = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</div><div class=\"line\">        ds.type = <span class=\"string\">'text/javascript'</span>;ds.async = <span class=\"literal\">true</span>;</div><div class=\"line\">        ds.src = (<span class=\"built_in\">document</span>.location.protocol == <span class=\"string\">'https:'</span> ? <span class=\"string\">'https:'</span> : <span class=\"string\">'http:'</span>) + <span class=\"string\">'//static.duoshuo.com/embed.js'</span>;</div><div class=\"line\">        ds.charset = <span class=\"string\">'UTF-8'</span>;</div><div class=\"line\">        (<span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'head'</span>)[<span class=\"number\">0</span>]</div><div class=\"line\">         || <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'body'</span>)[<span class=\"number\">0</span>]).appendChild(ds);</div><div class=\"line\">      })();</div><div class=\"line\">      <span class=\"tag\">&lt;/<span class=\"title\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 多说公共JS代码 end --&gt;</span></div><div class=\"line\">  <span class=\"comment\">&lt;!-- 多说结束 --&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"title\">section</span>&gt;</span></div><div class=\"line\"><span class=\"vbscript\">&lt;% } %&gt;</span></div></pre></td></tr></table></figure>\n\n<p>眼尖的同学可能已经看到我的上面第16行代码与你们的不同,这行代码包括了页面的标题和url,它会根据hexo的配置,由hexo动态生成,所以你把你的代码替换成我的这行代码.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div <span class=\"variable\">class=</span><span class=\"string\">\"ds-thread\"</span> <span class=\"variable\">data-thread-key=</span><span class=\"string\">\"&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;\"</span> <span class=\"variable\">data-title=</span><span class=\"string\">\"&lt;%= page.title %&gt;\"</span> <span class=\"variable\">data-url=</span><span class=\"string\">\"&lt;%= page.permalink %&gt;\"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n\n<p>至此,多说添加完毕</p>\n<h1 id=\"修复bug\">修复bug</h1>\n<p>我发现light的主题貌似有个小bug,在<code>F:\\blog\\themes\\light\\layout\\_partial\\article.ejs</code>中间第27行有这样一行代码</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"vbscript\">&lt;% <span class=\"keyword\">if</span> (item.comment && config.disqus_shortname){ %&gt;</span></div></pre></td></tr></table></figure>\n\n<p>首先我们,替换config.disqus_shortname为config.duoshuo_shortname.<br>然后修改<code>item.comment</code>为<code>item.comments</code>,因为系统中没有comment这个变量,只有comments这个变量,如果不修改comments,那么<code>item.comment</code>一直为假,所以一直不成立,就不会显示comments字段了.修改后代码如下</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"vbscript\">&lt;% <span class=\"keyword\">if</span> (item.comments && config.duoshuo_shortname){ %&gt;</span></div></pre></td></tr></table></figure>\n\n<p>产生的效果如图<img src=\"http://ww3.sinaimg.cn/large/692869a3gw1emteitia5uj20tl0fn412.jpg\" alt=\"开启和关闭comment的区别\" title=\"开启和关闭comment的区别\">.<br>至此,配置hexo,打完收工<br>enjoy it</p>\n<hr>\n<h1 id=\"参考文献\">参考文献</h1>\n<p>1 <a href=\"http://zipperary.com/2013/05/29/hexo-guide-3/\" target=\"_blank\" rel=\"external\">http://zipperary.com/2013/05/29/hexo-guide-3/</a><br>2 <a href=\"http://dev.duoshuo.com/threads/541d3b2b40b5abcd2e4df0e9\" target=\"_blank\" rel=\"external\">duoshuo官方Hexo使用教程</a></p>\n","source":"_posts/custom-hexo.md","raw":"title: 配置hexo\ndate: 2014-11-28 21:07:27\ntags:\n- hexo\ncategories: hexo\n---\n经过[上篇博客](/how-to-build-a-blog-with-hexo.html),我们搭建起了自己的博客,接下来我们对它做些个性化的定制.\n在hexo中,配置文件一共两个(我的hexo安装在F:/blog/),分别是`F:/blog/_config.yml`和`F:/blog/themes/light/_config.yml`.第一个是全局的配置文件,第二个是主题的配置文件,在继续说之前,我们先来说一下主题安装.<!-- more -->\n#主题安装\n这个很简单,在hexo的Github的主页上有个主题栏目,<https://github.com/hexojs/hexo/wiki/Themes>,里面列出了很多主题.\n安装方法很简单\n```\n$ git clone <repository> themes/<theme-name>\n```\n举个简单例子,我安装的主题名为`light`,请在`F:/blog/`目录下执行以下代码\n```\n$ git clone https://github.com/hexojs/hexo-theme-light themes/light\n```\n如果你不是在`F:/blog/`中执行,请修改后面的路径themes/light为你的路径.基本原理就是把主题下下来,放在themes目录下就OK了,主题安装完毕.\n#修改全局配置文件 `F:/blog/_config.yml`\n```\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: 搁浅St的blog  #站点的名称\nsubtitle: 我最喜欢笨笨   #站点的副标题\ndescription:             #站点的描述,有利于搜索引擎的抓取\nauthor: 搁浅St       #作者\nemail: geqianst@qq.com          #你的邮箱\nlanguage: zh-CN           #语言,一般应该都是这个吧\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://jackroyal.github.io       #网站的url,在页面上,可以调用配置中的url参数,就是这个,比如google自定义搜索,需要制定搜索范围,就是通过这个设置的\nroot: /\npermalink: :year/:month/:day/:title/\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post  \ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nhighlight:\n  enable: true\n  line_number: true\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized  \ncategory_map:\ntag_map:\n\n# Archives 默认值为2，这里都修改为1，相应页面就只会列出标题，而非全文\n## 2: Enable pagination\n## 1: Disable pagination\n## 0: Fully Disable\narchive: 1\ncategory: 1\ntag: 1\n\n# Server\n## Hexo uses Connect as a server\n## You can customize the logger format as defined in\n## http://www.senchalabs.org/connect/logger.html\nport: 4000\nserver_ip: localhost\nlogger: false\nlogger_format: dev\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: MMM D YYYY\ntime_format: H:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 5\npagination_dir: page\n\n# Disqus\ndisqus_shortname:\n#这一行是我添加的duoshuo_shortname,因为天朝disqus不好用,用多说\nduoshuo_shortname: jackroyal\n# Extensions\n## Plugins: https://github.com/hexojs/hexo/wiki/Plugins\n## Themes: https://github.com/hexojs/hexo/wiki/Themes\ntheme: light\nexclude_generator:\n\n# Deployment  发布相关设置\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: github\n  repo: https://github.com/Jackroyal/Jackroyal.github.io.git\n  branch: master\n```\n至此,全局配置文件修改完毕,你可以`hexo g`和`hexo s`进行查看.\n```\nmenu:#导航栏的设置默认只有这两个,还可以添加更多的导航\n  Home: /\n  Archives: /archives\n#它就是你页面右边的侧边项目,比如搜索之类,你可以根据自己的需求进行修改,你能用几个widgets可以在F:\\blog\\themes\\light\\layout\\_widget中进行查看\nwidgets:#我这里使用了所有的widgets\n- search\n- category\n- tag\n- recent_posts\n- tagcloud\n\nexcerpt_link: Read More  #可以换成中文的  阅读全文\n\ntwitter:\n  username:\n  show_replies: false\n  tweet_count: 5\n//默认的一个分享组件,因为主要针对国外,不适合国内我们不使用它\naddthis:\n  enable: false  #把true改为false\n  pubid:\n  facebook: true\n  twitter: true\n  google: true\n  pinterest: true\n\nfancybox: true\n\ngoogle_analytics:\nrss:\nduoshuo_shortname: jackroyal  #多说的用户名\n\ncomment_provider:\n# Facebook comment\nfacebook:\n  appid: 123456789012345\n  comment_count: 5\n  comment_width: 840\n  comment_colorscheme: light\n```\n至此,配置文件修改完毕,上面提到了我们不适用disqus的评论组件,使用多说,下面教大家来配置多说\n\n#创建多说\n首先我们去多说注册一个账号,[点击这里](http://duoshuo.com/ \"多说官网\")\n我们点击[我要安装](http://duoshuo.com/create-site/ \"我要安装\"),界面如下![duoshuo 创建界面](http://ww4.sinaimg.cn/large/692869a3gw1emtdlnpsqaj20wo0lp783.jpg \"创建多说账号\")\nshortname就是jackroyal,创建完成后,跳转到如下界面\n![获取多说代码](http://ww1.sinaimg.cn/large/692869a3gw1emtdp96x54j20us0jxn18.jpg \"获取多说代码\")\n我们选择`通用代码`,点击复制,就行了\n#配置多说\n这里说一个前提,我使用的是light主题,如果你用的是其他主题,接下来的设置可能给我有点区别,但是原理差不多,参考看看\n1. 我们打开`F:\\blog\\themes\\light\\layout\\_partial\\comment.ejs`这个文件,然后修改后代码如下(如果你不是light主题,可能跟这个不一样,你去找下包含comment的section在哪里,改法还是这样.例如系统默认的landscape主题,下面这段代码就是在article.ejs,它没有comment.ejs)\n```\n<% if (page.comments){ %>\n<!-- 这里添加了一个导航,页面的下面会有一个上一篇,下一篇 -->\n <nav id=\"pagination\" >\n    <% if (page.prev) { %>\n    <a href=\"<%- config.root %><%- page.prev.path %>\" class=\"alignleft prev\" > <%=page.prev.title %> </a>\n    <% } %>\n    <% if (page.next) { %>\n    <a href=\"<%- config.root %><%- page.next.path %>\" class=\"alignright next\" > <%=page.next.title %> </a>\n    <% } %>\n    <div class=\"clearfix\"></div>\n</nav>\n<!-- 导航结束 -->\n<section id=\"comments\">\n<!-- 这里是多说的代码,直接把你的代码粘贴到这里就行 -->\n    <!-- 多说评论框 start -->\n    <div class=\"ds-thread\" data-thread-key=\"<%= page.layout %>-<%= page.slug %>\" data-title=\"<%= page.title %>\" data-url=\"<%= page.permalink %>\"></div>\n    <!-- 多说评论框 end -->\n    <!-- 多说公共JS代码 start (一个网页只需插入一次) -->\n    <script type=\"text/javascript\">\n    var duoshuoQuery = {short_name:'<%= config.duoshuo_shortname %>'};\n      (function() {\n        var ds = document.createElement('script');\n        ds.type = 'text/javascript';ds.async = true;\n        ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';\n        ds.charset = 'UTF-8';\n        (document.getElementsByTagName('head')[0]\n         || document.getElementsByTagName('body')[0]).appendChild(ds);\n      })();\n      </script>\n    <!-- 多说公共JS代码 end -->\n  <!-- 多说结束 -->\n  </section>\n<% } %>\n```\n眼尖的同学可能已经看到我的上面第16行代码与你们的不同,这行代码包括了页面的标题和url,它会根据hexo的配置,由hexo动态生成,所以你把你的代码替换成我的这行代码.\n```\n<div class=\"ds-thread\" data-thread-key=\"<%= page.layout %>-<%= page.slug %>\" data-title=\"<%= page.title %>\" data-url=\"<%= page.permalink %>\"></div>\n```\n至此,多说添加完毕\n#修复bug\n我发现light的主题貌似有个小bug,在`F:\\blog\\themes\\light\\layout\\_partial\\article.ejs`中间第27行有这样一行代码\n```\n        <% if (item.comment && config.disqus_shortname){ %>\n```\n首先我们,替换config.disqus_shortname为config.duoshuo_shortname.\n然后修改`item.comment`为`item.comments`,因为系统中没有comment这个变量,只有comments这个变量,如果不修改comments,那么`item.comment`一直为假,所以一直不成立,就不会显示comments字段了.修改后代码如下\n```\n <% if (item.comments && config.duoshuo_shortname){ %>\n```\n\n产生的效果如图![开启和关闭comment的区别](http://ww3.sinaimg.cn/large/692869a3gw1emteitia5uj20tl0fn412.jpg \"开启和关闭comment的区别\").\n至此,配置hexo,打完收工\nenjoy it\n\n---\n#参考文献\n1 <http://zipperary.com/2013/05/29/hexo-guide-3/>\n2 [duoshuo官方Hexo使用教程](http://dev.duoshuo.com/threads/541d3b2b40b5abcd2e4df0e9)\n\n","slug":"custom-hexo","updated":1418744588000,"excerpt":"<p>经过<a href=\"/how-to-build-a-blog-with-hexo.html\">上篇博客</a>,我们搭建起了自己的博客,接下来我们对它做些个性化的定制.<br>在hexo中,配置文件一共两个(我的hexo安装在F:/blog/),分别是<code>F:/blog/_config.yml</code>和<code>F:/blog/themes/light/_config.yml</code>.第一个是全局的配置文件,第二个是主题的配置文件,在继续说之前,我们先来说一下主题安装.","_id":"h2eugui5ttlnj6hf","comments":true,"layout":"post","photos":[],"link":""},{"title":"cmcc520扩展使用说明","date":1416837360000,"tags":["3x41krbl4stuqof9","lq8yspm94k084re6","yj9b6cth1f4lxjps","4b7uoz4asbrl0284","dm1y66x8wdel9f4i"],"categories":["i3xndnmp5j8lp53r"],"content":"<p>我的cmcc520 2.0版本终于完成了,写个使用说明</p>\n<p>学校部分范围有CMCC-EDU可用,通过手动修改ssid,可以免费使用.</p>\n<p>写了个扩展来简化这个过程.</p>\n<p>1 安装扩展<br>将保存下来的 *.crx 文件或*.js 文件直接拖拽到浏览器的“扩展程序”（<a href=\"&quot;Chrome 扩展程序页面&quot;\">chrome://chrome/extensions</a>/）页面。<br><img src=\"http://img.blog.csdn.net/20141124215558921?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>( 注：只有拖动到此页面才能安装，其它页面无效)</p>\n<p>　　2. 按照提示安装<br><img src=\"http://img.blog.csdn.net/20141124215611765?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>详细安装过程见<a href=\"http://www.williamlong.info/archives/3160.html\" target=\"_blank\" rel=\"external\">http://www.williamlong.info/archives/3160.html</a></p>\n<p>3,配置软件功能</p>\n<p>左键点击图标,可以选择开关扩展功能(默认为开启)<br> <img src=\"http://img.blog.csdn.net/20141124215702865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>4.使用软件</p>\n<p>如果软件的功能打开,那么如果当你使用cmcc-edu的时候会自动跳转完成登录,不再需要手动操作,登录成功页面如下,你可以关闭这个页面了<br><img src=\"http://img.blog.csdn.net/20141124215651437?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>5.下线</p>\n<p>在任何页面按ALT+X   可以下线</p>\n<p>Ps,如果按Alt+x无任何提示,可能是快捷键设置有问题<br> <img src=\"http://img.blog.csdn.net/20141124215717575?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p><img src=\"http://img.blog.csdn.net/20141124215740968?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>那就需要你按照上图手动设置快捷键</p>\n<p>6 反馈<br>如果发现任何bug,可以和我联系</p>\n<p>新浪微博<a href=\"http://weibo.com/517123263\" target=\"_blank\" rel=\"external\">http://weibo.com/517123263</a><br>Github项目地址 <a href=\"https://github.com/Jackroyal/cmcc520\" target=\"_blank\" rel=\"external\">https://github.com/Jackroyal/cmcc520</a><br>我的csdn博客<a href=\"file:///C:/Users/chenhao/Desktop/%20http:/blog.csdn.net/jackroyal\" target=\"_blank\" rel=\"external\"> http://blog.csdn.net/jackroyal</a></p>\n<p>2014/11/24</p>\n","source":"_posts/cmcc520扩展使用说明.md","raw":"title: 'cmcc520扩展使用说明'\ndate: 2014-11-24 21:56\ntags:\n- chrome\n- cmcc-edu\n- 中国移动\n- 扩展\n- 脚本\ncategories:\n- chrome扩展\n---\n\n我的cmcc520 2.0版本终于完成了,写个使用说明\n\n\n\n\n学校部分范围有CMCC-EDU可用,通过手动修改ssid,可以免费使用.\n\n写了个扩展来简化这个过程.\n\n1 安装扩展\n将保存下来的 \\*.crx 文件或\\*.js 文件直接拖拽到浏览器的“扩展程序”（[chrome://chrome/extensions](\"Chrome 扩展程序页面\")/）页面。\n![](http://img.blog.csdn.net/20141124215558921?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n\n( 注：只有拖动到此页面才能安装，其它页面无效)\n\n　　2. 按照提示安装\n![](http://img.blog.csdn.net/20141124215611765?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n\n\n \n详细安装过程见[http://www.williamlong.info/archives/3160.html](http://www.williamlong.info/archives/3160.html)\n\n \n\n \n\n3,配置软件功能\n\n左键点击图标,可以选择开关扩展功能(默认为开启)\n ![](http://img.blog.csdn.net/20141124215702865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n \n\n4.使用软件\n\n如果软件的功能打开,那么如果当你使用cmcc-edu的时候会自动跳转完成登录,不再需要手动操作,登录成功页面如下,你可以关闭这个页面了\n![](http://img.blog.csdn.net/20141124215651437?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n\n\n5.下线\n\n在任何页面按ALT+X   可以下线\n\nPs,如果按Alt+x无任何提示,可能是快捷键设置有问题\n ![](http://img.blog.csdn.net/20141124215717575?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n![](http://img.blog.csdn.net/20141124215740968?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n\n那就需要你按照上图手动设置快捷键\n\n \n\n \n\n6 反馈\n如果发现任何bug,可以和我联系\n\n\n\n新浪微博[http://weibo.com/517123263](http://weibo.com/517123263)\nGithub项目地址 [https://github.com/Jackroyal/cmcc520](https://github.com/Jackroyal/cmcc520)\n我的csdn博客[ http://blog.csdn.net/jackroyal](file:///C:/Users/chenhao/Desktop/%20http:/blog.csdn.net/jackroyal)\n\n \n\n \n\n \n\n2014/11/24\n","slug":"cmcc520扩展使用说明","updated":1419105911000,"excerpt":"","_id":"5zmkqerow5p8f4cb","comments":true,"layout":"post","photos":[],"link":""},{"title":"新的开始","date":1417008555000,"tags":["54uvuinfeo6xlt3o"],"content":"<p>今天<strong>折腾</strong>了一天,终于弄好了,<a href=\"http://jackroyal.github.io\" title=\"搁浅St的博客\" target=\"_blank\" rel=\"external\">我的博客</a>,正式落户Github.<a id=\"more\"></a><br><img src=\"http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub Mark\" title=\"GitHub Mark\"></p>\n","source":"_posts/new-start.md","raw":"title: 新的开始\ndate: 2014-11-26 21:29:15\ntags:\n- hexo\n---\n\n今天**折腾**了一天,终于弄好了,[我的博客](http://jackroyal.github.io \"搁浅St的博客\"),正式落户Github.<!-- more -->\n![GitHub Mark](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png \"GitHub Mark\")\n","slug":"new-start","updated":1418744588000,"excerpt":"<p>今天<strong>折腾</strong>了一天,终于弄好了,<a href=\"http://jackroyal.github.io\" title=\"搁浅St的博客\" target=\"_blank\" rel=\"external\">我的博客</a>,正式落户Github.","_id":"pfzxibdtgd3eucku","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"近期任务","date":1417532191000,"tags":[],"categories":["vz833dw6waonlnwl"],"content":"<p>2014-12-02 22:56:31  接下来的一个星期，我的任务是学习python爬虫的编写，至少要实现csdn博客转markdown的任务</p>\n","source":"_posts/recent-task.md","raw":"title: 近期任务\ndate: 2014-12-02 22:56:31\ntags:\ncategories:\n- 杂文\n---\n2014-12-02 22:56:31  接下来的一个星期，我的任务是学习python爬虫的编写，至少要实现csdn博客转markdown的任务\n","slug":"recent-task","updated":1418744588000,"excerpt":"","_id":"dnb5o6ueg8bomvyc","comments":true,"layout":"post","photos":[],"link":""},{"title":"使用hexo建立自己的Github pages","date":1417070909000,"tags":["54uvuinfeo6xlt3o","ap7bhhk4h5poe0t0"],"categories":["mqoc80ny8n803h7b"],"content":"<p>昨天经过一天的<a href=\"http://jackroyal.github.io/2014/11/26/new-start/\" title=\"生命在于折腾\" target=\"_blank\" rel=\"external\">折腾</a>,总算把博客搭建起来了,今天就来写个博客总结一下.<br>网上的资料很多,我主要参考的是这篇博客,一路很顺利.</p>\n<blockquote>\n<p><a href=\"http://zipperary.com/2013/05/28/hexo-guide-2/\" target=\"_blank\" rel=\"external\">http://zipperary.com/2013/05/28/hexo-guide-2/</a></p>\n</blockquote>\n<p>一个很重要的原因就是他是针对windows的,刚好我也在用windows.</p>\n<h1 id=\"安装过程\">安装过程</h1>\n<h2 id=\"1-_安装Github_for_windows\">1. 安装Github for windows</h2>\n<p>因为我之前就在用Github,所以早就安装了这个.已经装过的同学请忽略这一段.<br>下载 <a href=\"https://windows.github.com/\" title=\"Github for windows\" target=\"_blank\" rel=\"external\">Github for windows</a> 并执行即可完成安装(<em>在线安装,会有点慢</em>)。这个软件的的好处是有一个带GUI的界面,还有一个终端界面.如图所示<a id=\"more\"></a><br><img src=\"http://ww2.sinaimg.cn/large/692869a3jw1emplp1lz31j204w033mx0.jpg\" alt=\"Github for windows\"><br><img src=\"http://ww2.sinaimg.cn/large/692869a3gw1empluh6hvej210b0j741r.jpg\" alt=\"GUI and Bash\"><br>如果你不喜欢用这个,也可以用上面的博客推荐的<a href=\"http://code.google.com/p/msysgit/\" target=\"_blank\" rel=\"external\">msysgit</a>.</p>\n<h2 id=\"2-_安装Node-js\">2. 安装Node.js</h2>\n<p>在 Windows 环境下安装 <a href=\"http://nodejs.org/\" title=\"Node.js 官网\" target=\"_blank\" rel=\"external\">Node.js</a> 非常简单，仅须下载安装文件并执行即可完成安装。</p>\n<h2 id=\"3-_测试node-js是否安装\">3. 测试node.js是否安装</h2>\n<p>在任何控制台输入(可以按windows键+R,输入cmd,然后输入npm,一般来说不会有问题)</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">npm</span></div></pre></td></tr></table></figure>\n\n<p>返回值如下</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">Usage</span>: <span class=\"string\">npm &lt;command&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"applescript\"><span class=\"keyword\">where</span> &lt;command&gt; <span class=\"keyword\">is</span> one <span class=\"keyword\">of</span>:</span></div><div class=\"line\">    add-user, adduser, apihelp, author, bin, bugs, c, cache,</div><div class=\"line\">    completion, config, ddp, dedupe, deprecate, docs, edit,</div><div class=\"line\">    explore, faq, find, find-dupes, <span class=\"keyword\">get</span>, help, help-search,</div><div class=\"line\">    home, i, info, init, install, isntall, issues, la, link,</div><div class=\"line\">    <span class=\"type\">list</span>, ll, ln, login, ls, outdated, owner, pack, prefix,</div><div class=\"line\">    prune, publish, r, rb, rebuild, remove, repo, restart, rm,</div><div class=\"line\">    root, <span class=\"command\">run</span>-<span class=\"keyword\">script</span>, s, se, search, <span class=\"keyword\">set</span>, show, shrinkwrap,</div><div class=\"line\">    star, stars, start, stop, submodule, t, tag, test, tst, un,</div><div class=\"line\">    uninstall, unlink, unpublish, unstar, up, update, v,</div><div class=\"line\">    <span class=\"property\">version</span>, view, whoami</div><div class=\"line\"></div><div class=\"line\">npm &lt;cmd&gt; -h     quick help <span class=\"function_start\"><span class=\"keyword\">on</span></span> &lt;cmd&gt;</div><div class=\"line\">npm -l           display full usage info</div><div class=\"line\">npm faq          commonly asked questions</div><div class=\"line\">npm help &lt;term&gt;  search <span class=\"keyword\">for</span> help <span class=\"function_start\"><span class=\"keyword\">on</span></span> &lt;term&gt;</div><div class=\"line\">npm help npm     involved overview</div><div class=\"line\"></div><div class=\"line\">Specify configs <span class=\"keyword\">in</span> <span class=\"keyword\">the</span> ini-formatted <span class=\"type\">file</span>:</div><div class=\"line\">    C:\\Users\\chenhao\\.npmrc</div><div class=\"line\"><span class=\"keyword\">or</span> <span class=\"function_start\"><span class=\"keyword\">on</span></span> <span class=\"keyword\">the</span> command line via: npm &lt;command&gt; <span class=\"comment\">--key value</span></div><div class=\"line\">Config info can be viewed via: npm help config</div><div class=\"line\"></div><div class=\"line\">npm@<span class=\"number\">1.4</span><span class=\"number\">.28</span> D:\\Program Files (x86)\\nodejs\\node_modules\\npm</div></pre></td></tr></table></figure>\n\n<p>看到这个结果,就表示你的node.js已经安装上去了</p>\n<h2 id=\"4-_安装hexo\">4. 安装hexo</h2>\n<p>接下来的操作我都是用<strong>Github for windows</strong>自带的Bash来完成的,因为后面会涉及到SSH,用<strong>Github for windows</strong>,就可以避免这个问题.</p>\n<ul>\n<li>在Bash中输入以下命令</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm <span class=\"operator\"><span class=\"keyword\">install</span> -g hexo</span></div></pre></td></tr></table></figure>\n\n<ul>\n<li>创建hexo文件夹<br>创建你hexo放置的文件夹,先用Bash进入到目标文件夹,比如我的是F:/blog/,接下来初始化hexo,自动生成相关的文件,在F:/blog/环境下,输入</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo <span class=\"keyword\">init</span></div></pre></td></tr></table></figure>\n\n<ul>\n<li>安装依赖包</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm <span class=\"operator\"><span class=\"keyword\">install</span></span></div></pre></td></tr></table></figure>\n\n<ul>\n<li>本地预览,做完以上操作,可以本地预览一下</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">hexo</span> g</div><div class=\"line\">hexo s</div></pre></td></tr></table></figure>\n\n<p>以上两条命令的意思是:<br>生成相关文件(就是生成目标html,静态博客嘛,就是很多html组成)<br>打开本地服务器预览(node.js就是干这事的,点击访问<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a>,就可以看到了)</p>\n<h2 id=\"ok,到这里,博客搭建基本完成,现在要做的就是把它发布到你的Github上去\"><strong>ok</strong>,到这里,博客搭建基本完成,现在要做的就是把它发布到你的Github上去</h2>\n<p>接下来,教你怎么发布到Github上去</p>\n<h1 id=\"注册Github\">注册Github</h1>\n<p>这一步没什么说的,如果你连简单的注册都不会,我也不会教你╮(╯▽╰)╭</p>\n<h1 id=\"创建公共库\">创建公共库</h1>\n<p>在自己Github主页右下角，创建一个新的repository(<a href=\"https://github.com/new\" title=\"点我新建\" target=\"_blank\" rel=\"external\">点这里</a>)。比如我的Github账号是Jackroyal，那么我应该创建的repository名字应该是Jackroyal.github.io(注意你的repository名字就是Jackroyal.github.io,我之前用的是Jackroyal怎么尝试都不行)。</p>\n<blockquote>\n<p>PS:有个大小写的问题其实我注册的是Jackroyal,大写的J,但是我访问的时候特别是带https的链接,他会自动转为小写访问.怎么说呢?简单点,你就按照你的用户名来,该大写大写,该小写小写</p>\n</blockquote>\n<h1 id=\"部署\">部署</h1>\n<p>现在万事俱备,只差部署了,我们来配置下<code>_config.yml</code>.<br>这个文件在路径是F:/blog/_config.yml.<br>用编辑器把它打开,修改最后一段</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">type</span>: <span class=\"title\">github</span></span></div><div class=\"line\">  repo: https:<span class=\"comment\">//github.com/Jackroyal/Jackroyal.github.io.git</span></div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n\n<p>照着我的这个格式修改就好了,把我里面的用户名替换成你的.<br>至此基本完成所有搭建步骤.</p>\n<h1 id=\"上传\">上传</h1>\n<p>我们开始上传项目的代码,再重复一次,我一直以来用的工具都是<em>Github for windows</em>自带的Bash,所以我没有配置SSH,如果你用的windows自带的终端或者其他比如msysgit,可能需要配置SSH,不然无法使用Github(点击<a href=\"https://help.github.com/articles/generating-ssh-keys/\" title=\"https://help.github.com/articles/generating-ssh-keys/\" target=\"_blank\" rel=\"external\"><code>这里</code></a>查看官方教程).<br>我们输入以下命令</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">hexo</span> g</div><div class=\"line\">hexo d</div></pre></td></tr></table></figure>\n\n<p>或者偷个懒</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"title\">hexo</span> d -g</div></pre></td></tr></table></figure>\n\n<p>ok,现在就可以去看看你的个人主页了,逼格满满有木有.</p>\n<h1 id=\"问题\">问题</h1>\n<p>我的中间出过一些问题:</p>\n<ol>\n<li>我的<code>hexo d</code>的时候出错,可以尝试手动删除<code>.deploy</code>文件夹,然后执行<code>hexo clean</code>还有可能出现的情况是,<code>deploy</code>没错但是一直没有提示<code>deploy done</code>,那就是骚年,你访问Github网速太慢</li>\n<li>我<code>deploy d</code>成功以后,在Github里面已经看到生成的页面了,访问<a href=\"http://jackroyal.github.io\" target=\"_blank\" rel=\"external\">http://jackroyal.github.io</a>或者<a href=\"https://jackroyal.github.io\" target=\"_blank\" rel=\"external\">https://jackroyal.github.io</a>一直报404的错误,这种时候等一等就好了,一般等几分钟.如果一直不好那就给官方发个邮件,他们很快会回复你的,有什么问题说清楚就行.</li>\n</ol>\n","source":"_posts/how-to-build-a-blog-with-hexo.md","raw":"title: 使用hexo建立自己的Github pages \ndate: 2014-11-27 14:48:29\ntags:\n- hexo\n- github\ncategories: hexo\n---\n昨天经过一天的[折腾](http://jackroyal.github.io/2014/11/26/new-start/ '生命在于折腾'),总算把博客搭建起来了,今天就来写个博客总结一下.\n网上的资料很多,我主要参考的是这篇博客,一路很顺利.\n>http://zipperary.com/2013/05/28/hexo-guide-2/\n\n一个很重要的原因就是他是针对windows的,刚好我也在用windows.\n#安装过程\n## 1. 安装Github for windows\n因为我之前就在用Github,所以早就安装了这个.已经装过的同学请忽略这一段.\n下载 [Github for windows](https://windows.github.com/ \"Github for windows\") 并执行即可完成安装(*在线安装,会有点慢*)。这个软件的的好处是有一个带GUI的界面,还有一个终端界面.如图所示<!-- more -->\n![Github for windows](http://ww2.sinaimg.cn/large/692869a3jw1emplp1lz31j204w033mx0.jpg)\n![GUI and Bash](http://ww2.sinaimg.cn/large/692869a3gw1empluh6hvej210b0j741r.jpg)\n如果你不喜欢用这个,也可以用上面的博客推荐的[msysgit](http://code.google.com/p/msysgit/).\n\n## 2. 安装Node.js\n在 Windows 环境下安装 [Node.js](http://nodejs.org/ \"Node.js 官网\") 非常简单，仅须下载安装文件并执行即可完成安装。\n\n## 3. 测试node.js是否安装\n在任何控制台输入(可以按windows键+R,输入cmd,然后输入npm,一般来说不会有问题)\n```\nnpm\n```\n返回值如下\n```\nUsage: npm <command>\n\nwhere <command> is one of:\n    add-user, adduser, apihelp, author, bin, bugs, c, cache,\n    completion, config, ddp, dedupe, deprecate, docs, edit,\n    explore, faq, find, find-dupes, get, help, help-search,\n    home, i, info, init, install, isntall, issues, la, link,\n    list, ll, ln, login, ls, outdated, owner, pack, prefix,\n    prune, publish, r, rb, rebuild, remove, repo, restart, rm,\n    root, run-script, s, se, search, set, show, shrinkwrap,\n    star, stars, start, stop, submodule, t, tag, test, tst, un,\n    uninstall, unlink, unpublish, unstar, up, update, v,\n    version, view, whoami\n\nnpm <cmd> -h     quick help on <cmd>\nnpm -l           display full usage info\nnpm faq          commonly asked questions\nnpm help <term>  search for help on <term>\nnpm help npm     involved overview\n\nSpecify configs in the ini-formatted file:\n    C:\\Users\\chenhao\\.npmrc\nor on the command line via: npm <command> --key value\nConfig info can be viewed via: npm help config\n\nnpm@1.4.28 D:\\Program Files (x86)\\nodejs\\node_modules\\npm\n```\n看到这个结果,就表示你的node.js已经安装上去了\n## 4. 安装hexo\n接下来的操作我都是用**Github for windows**自带的Bash来完成的,因为后面会涉及到SSH,用**Github for windows**,就可以避免这个问题.\n- 在Bash中输入以下命令\n```\nnpm install -g hexo\n```\n- 创建hexo文件夹\n创建你hexo放置的文件夹,先用Bash进入到目标文件夹,比如我的是F:/blog/,接下来初始化hexo,自动生成相关的文件,在F:/blog/环境下,输入\n```\nhexo init\n```\n- 安装依赖包\n```\nnpm install\n```\n- 本地预览,做完以上操作,可以本地预览一下\n```\nhexo g\nhexo s\n```\n以上两条命令的意思是:\n生成相关文件(就是生成目标html,静态博客嘛,就是很多html组成)\n打开本地服务器预览(node.js就是干这事的,点击访问<http://localhost:4000>,就可以看到了)\n**ok**,到这里,博客搭建基本完成,现在要做的就是把它发布到你的Github上去\n---\n接下来,教你怎么发布到Github上去\n#注册Github\n这一步没什么说的,如果你连简单的注册都不会,我也不会教你╮(╯▽╰)╭\n#创建公共库\n在自己Github主页右下角，创建一个新的repository([点这里](https://github.com/new '点我新建'))。比如我的Github账号是Jackroyal，那么我应该创建的repository名字应该是Jackroyal.github.io(注意你的repository名字就是Jackroyal.github.io,我之前用的是Jackroyal怎么尝试都不行)。\n> PS:有个大小写的问题其实我注册的是Jackroyal,大写的J,但是我访问的时候特别是带https的链接,他会自动转为小写访问.怎么说呢?简单点,你就按照你的用户名来,该大写大写,该小写小写\n\n#部署\n现在万事俱备,只差部署了,我们来配置下`_config.yml`.\n这个文件在路径是F:/blog/_config.yml.\n用编辑器把它打开,修改最后一段\n```\ndeploy:\n  type: github\n  repo: https://github.com/Jackroyal/Jackroyal.github.io.git\n  branch: master\n```\n照着我的这个格式修改就好了,把我里面的用户名替换成你的.\n至此基本完成所有搭建步骤.\n#上传\n我们开始上传项目的代码,再重复一次,我一直以来用的工具都是_Github for windows_自带的Bash,所以我没有配置SSH,如果你用的windows自带的终端或者其他比如msysgit,可能需要配置SSH,不然无法使用Github(点击[`这里`](https://help.github.com/articles/generating-ssh-keys/ \"https://help.github.com/articles/generating-ssh-keys/\")查看官方教程).\n我们输入以下命令\n```\nhexo g\nhexo d\n```\n或者偷个懒\n```\nhexo d -g\n```\nok,现在就可以去看看你的个人主页了,逼格满满有木有.\n#问题\n我的中间出过一些问题:\n1. 我的`hexo d`的时候出错,可以尝试手动删除`.deploy`文件夹,然后执行`hexo clean`还有可能出现的情况是,`deploy`没错但是一直没有提示`deploy done`,那就是骚年,你访问Github网速太慢\n1. 我`deploy d`成功以后,在Github里面已经看到生成的页面了,访问<http://jackroyal.github.io>或者<https://jackroyal.github.io>一直报404的错误,这种时候等一等就好了,一般等几分钟.如果一直不好那就给官方发个邮件,他们很快会回复你的,有什么问题说清楚就行.\n\n","slug":"how-to-build-a-blog-with-hexo","updated":1418918570000,"excerpt":"<p>昨天经过一天的<a href=\"http://jackroyal.github.io/2014/11/26/new-start/\" title=\"生命在于折腾\" target=\"_blank\" rel=\"external\">折腾</a>,总算把博客搭建起来了,今天就来写个博客总结一下.<br>网上的资料很多,我主要参考的是这篇博客,一路很顺利.</p>\n<blockquote>\n<p><a href=\"http://zipperary.com/2013/05/28/hexo-guide-2/\" target=\"_blank\" rel=\"external\">http://zipperary.com/2013/05/28/hexo-guide-2/</a></p>\n</blockquote>\n<p>一个很重要的原因就是他是针对windows的,刚好我也在用windows.</p>\n<h1 id=\"安装过程\">安装过程</h1>\n<h2 id=\"1-_安装Github_for_windows\">1. 安装Github for windows</h2>\n<p>因为我之前就在用Github,所以早就安装了这个.已经装过的同学请忽略这一段.<br>下载 <a href=\"https://windows.github.com/\" title=\"Github for windows\" target=\"_blank\" rel=\"external\">Github for windows</a> 并执行即可完成安装(<em>在线安装,会有点慢</em>)。这个软件的的好处是有一个带GUI的界面,还有一个终端界面.如图所示","_id":"xj57yhdq2ovsdg72","comments":true,"layout":"post","photos":[],"link":""},{"title":"sql中left_join和right_join混用","date":1407463320000,"tags":["th95k3mor3h3d9t4","1l68baer935zy8bs"],"categories":["z605g8or6huhcuzh"],"content":"<p>left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录 </p>\n<p>right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录</p>\n<p>inner join(等值连接) 只返回两个表中联结字段相等的行</p>\n<p>如上所言,我们只做一下left join的实验,right join和left join 类似</p>\n<p>测试一共三张表,a  b   c<br><img src=\"\" alt=\"\"></p>\n<p>表结构和数据分别如下</p>\n<p>a表                                                                  b表                                                              c表<br><img src=\"\" alt=\"\">         <img src=\"\" alt=\"\">          <img src=\"\" alt=\"\"></p>\n<p>然后我们来试一下左连接</p>\n<p>1,  我们来查询a b两张表,连接他们aid=bid的选项<br>sql&gt;&gt;SELECT *  FROM a   LEFT JOIN b on aid=bid</p>\n<p><img src=\"\" alt=\"\"></p>\n<p>看图很好理解,因为是a左连接b,所以b中为空的元素 ,在查询结果中以NULL的形式补全</p>\n<p>同理可得</p>\n<p>sql&gt;&gt;SELECT * FROM a LEFT JOIN c on aid=cid<br><img src=\"\" alt=\"\"></p>\n<p>sql&gt;&gt;SELECT * FROM c LEFT JOIN b on bid=cid<br>sql&gt;&gt;SELECT * FROM c LEFT JOIN b on cid=bid</p>\n<p><img src=\"\" alt=\"\"></p>\n<p>也就是on后面的顺序无所谓,无论是bid=cid还是cid=bid,重点是前面的left join还是right join</p>\n<p>2,我们来试一下如果三张表左连接呢,会有什么情况?</p>\n<p>sql&gt;&gt;SELECT * FROM a</p>\n<pre><code>       <span class=\"built_in\">LEFT</span> <span class=\"built_in\">JOIN</span> b <span class=\"keyword\">on</span> bid=aid \n\n       <span class=\"built_in\">LEFT</span> <span class=\"built_in\">JOIN</span> c <span class=\"keyword\">on</span> aid=cid\n</code></pre><p><img src=\"\" alt=\"\"></p>\n<p>sql&gt;&gt;SELECT * FROM a LEFT JOIN b on bid=aid LEFT JOIN c on bid=cid<br><img src=\"\" alt=\"\"></p>\n<p>3,如果我用了一个right join呢?</p>\n<p>sql&gt;&gt;SELECT * FROM a LEFT JOIN b on bid=aid RIGHT JOIN c on bid=cid<br><img src=\"\" alt=\"\"></p>\n<p>这里该怎么理解呢?<br>感谢<a href=\"http://blog.csdn.net/sqlserverdiscovery/article/details/6893288\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/sqlserverdiscovery/article/details/6893288</a></p>\n<p>我们理解的时候可以把它拆成两部分去理解</p>\n<p>比如第一部分<br>sql&gt;&gt;SELECT * FROM a LEFT JOIN b on bid=aid</p>\n<p><img src=\"\" alt=\"\"></p>\n<p>然后再思考第二部分,假如上图是一张表  我们叫它a_b</p>\n<p>你可以新建一个视图,就可以真成为一张虚表了</p>\n<p>sql&gt;&gt;create  VIEW a_b  as (SELECT * FROM a LEFT JOIN b on bid=aid)<br><img src=\"\" alt=\"\"></p>\n<p>然后我们继续做下面一部分</p>\n<p>sql&gt;&gt;select * from a_b right join c on bid=cid<br><img src=\"\" alt=\"\"></p>\n<p>可见,与上面的结果是一样的,当然这是我们理解的过程,实际数据库服务器执行的时候可能不是这样的,它会做一些优化,提高效率</p>\n","source":"_posts/sql中left_join和right_join混用.md","raw":"title: 'sql中left_join和right_join混用'\ndate: 2014-08-08 10:02\ntags:\n- sql\n- select\ncategories:\n- 数据库\n---\nleft join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录 \n\r\nright join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录\n\r\ninner join(等值连接) 只返回两个表中联结字段相等的行\n\n\n\n如上所言,我们只做一下left join的实验,right join和left join 类似\n\n测试一共三张表,a  b   c\n![]()\n\n表结构和数据分别如下\n\na表                                                                  b表                                                              c表\n![]()         ![]()          ![]()\n\n然后我们来试一下左连接\n\n1,  我们来查询a b两张表,连接他们aid=bid的选项\nsql>>SELECT \\*  FROM a   LEFT JOIN b on aid=bid\n\n\n![]()\n\n\n\n看图很好理解,因为是a左连接b,所以b中为空的元素 ,在查询结果中以NULL的形式补全\n\n同理可得\n\nsql>>SELECT \\* FROM a LEFT JOIN c on aid=cid\n![]()\n\n\nsql>>SELECT \\* FROM c LEFT JOIN b on bid=cid\nsql>>SELECT \\* FROM c LEFT JOIN b on cid=bid\n\n\n![]()\n\n\n\n也就是on后面的顺序无所谓,无论是bid=cid还是cid=bid,重点是前面的left join还是right join\n\n\n\n\n\n\n\n2,我们来试一下如果三张表左连接呢,会有什么情况?\n\nsql>>SELECT \\* FROM a\n\n           LEFT JOIN b on bid=aid \n\n           LEFT JOIN c on aid=cid\n![]()\n\n\n\nsql>>SELECT \\* FROM a LEFT JOIN b on bid=aid LEFT JOIN c on bid=cid\n![]()\n\n\n\n3,如果我用了一个right join呢?\n\nsql>>SELECT \\* FROM a LEFT JOIN b on bid=aid RIGHT JOIN c on bid=cid\n![]()\n\n\n\n这里该怎么理解呢?\n感谢[http://blog.csdn.net/sqlserverdiscovery/article/details/6893288](http://blog.csdn.net/sqlserverdiscovery/article/details/6893288)\n\n我们理解的时候可以把它拆成两部分去理解\n\n比如第一部分\nsql>>SELECT \\* FROM a LEFT JOIN b on bid=aid\n\n\n![]()\n\n\n\n然后再思考第二部分,假如上图是一张表  我们叫它a_b\n\n你可以新建一个视图,就可以真成为一张虚表了\n\nsql>>create  VIEW a_b  as (SELECT \\* FROM a LEFT JOIN b on bid=aid)\n![]()\n\n\n\n然后我们继续做下面一部分\n\nsql>>select \\* from a_b right join c on bid=cid\n![]()\n\n\n\n可见,与上面的结果是一样的,当然这是我们理解的过程,实际数据库服务器执行的时候可能不是这样的,它会做一些优化,提高效率\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"sql中left_join和right_join混用","updated":1419105911000,"excerpt":"","_id":"tgz4lf36k75lnimv","comments":true,"layout":"post","photos":[],"link":""},{"title":"wamp与sql_server_因为端口80冲突,无法开启wamp","date":1415959740000,"tags":["23tzzzs0mfnfr0s9","p8rlrx6sg0kvve3p"],"categories":["272c167xdlvbhewl"],"content":"<p>因为80端口占用,导致无法启动,其实不必关闭sql server太多的东西,只需要关闭SQL Server Reporting Services 就行了,这样也不会影响sql server的使用</p>\n<p>如图<br><img src=\"http://img.blog.csdn.net/20141114175909339?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<p>打开sqlserver 配置管理器,关闭以上服务</p>\n<p>或者打开控制面板-&gt;管理-&gt;服务工具-&gt;SQL Server Reporting Services</p>\n<p>然后就可以打开wamp了</p>\n","source":"_posts/wamp与sql_server_因为端口80冲突,无法开启wamp.md","raw":"title: 'wamp与sql_server_因为端口80冲突,无法开启wamp'\ndate: 2014-11-14 18:09\ntags:\n- sql server\n- wamp\ncategories:\n- 软件安装与技巧\n---\n\n因为80端口占用,导致无法启动,其实不必关闭sql server太多的东西,只需要关闭SQL Server Reporting Services 就行了,这样也不会影响sql server的使用\n\n如图\n![](http://img.blog.csdn.net/20141114175909339?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSmFja3JveWFs/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n\n\n打开sqlserver 配置管理器,关闭以上服务\n\n或者打开控制面板->管理->服务工具->SQL Server Reporting Services\n\n然后就可以打开wamp了\n","slug":"wamp与sql_server_因为端口80冲突,无法开启wamp","updated":1419105911000,"excerpt":"","_id":"7kzfhsp9unztrn7i","comments":true,"layout":"post","photos":[],"link":""},{"title":"阿里云windows_server_2003_搭建邮件服务器","date":1403965800000,"categories":["p8zc39zan9a38ptp"],"content":"<pre><code>笔者最近遇到一个在阿里云上搭建邮件服务器的问题，总算搞定，记录一下。\n\n 整个搭建过程，包括pop3服务的安装和开启，smtp服务的安装和开启，dns服务的安装和设置。\n参考文章[<span class=\"link_label\">http://hi.baidu.com/senya/item/63bd6588b6817056e63d1996</span>](<span class=\"link_url\">http://hi.baidu.com/senya/item/63bd6588b6817056e63d1996</span>)\n</code></pre><p>   <a href=\"http://firefish.blog.51cto.com/298258/57983\" target=\"_blank\" rel=\"external\">http://firefish.blog.51cto.com/298258/57983</a></p>\n<p>不在赘述，直接粘贴原文</p>\n<p><strong>　　一、安装Windows Server 2003邮件服务器组件</strong></p>\n<p>(因为盗图的缘故,图片都挂了,这里大家都去看上面的参考文章连接吧,设置dns的时候再回来)</p>\n<p>图一　“管理您的服务器”控制台</p>\n<p>　　依次单击“开始”——“管理工具”——“管理您的服务器”，打开“管理您的服务器”控制台。在这个管理控制台中我们可以看到服务器已经成为的角色。单击“添加或删除角色”命令，开始管理服务器的角色。</p>\n<p>图二　配置服务器向导</p>\n<p>　　当我们单击“添加或删除角色”命令，就会运行配置服务器向导。</p>\n<p>图三　服务器管理程序检测网络连接</p>\n<p>图四　管理服务器角色</p>\n<p>　　在图四中，可以查看已经安装的服务和支持而没有安装的服务。此时的服务器还不是邮件服务器，选择“邮件服务器(POP3,SMTP)”，单击“下一步”：</p>\n<p>图五　配置“身份验证方法”及“电子邮件域名”</p>\n<p>图六　单击“下一步”</p>\n<p>图七　安装邮件服务:POP3和SMTP</p>\n<p>图八　安装成功</p>\n<p><strong>　　二、管理邮件服务器</strong></p>\n<p>　　Windows Server 2003的电子邮件服务器的功能很简单，管理界面也很简洁。单击“管理工具”下的“POP3服务”：</p>\n<p>图九 POP3服务</p>\n<p>图十　为用户添加邮箱</p>\n<p>　　在“POP3服务”中单击“添加邮箱”命令，在弹出的对话框内输入邮箱名（用户名）及密码。</p>\n<p>图十一</p>\n<p><strong>　　三、配置smtp</strong></p>\n<p>　　方法和上面类似，在图二的画面中我们选择应用程序服务器</p>\n<p><img src=\"\" alt=\"\"></p>\n<p>如图，我的已经开启了。</p>\n<p>下一步，依次打开“开始-程序-管理工具-internet信息服务”，在窗口左面，鼠标右键点击“smtp虚拟服务器”属性。切换到常规选项卡”IP地址“选择服务器的ip地址，点击确定就行了。</p>\n<p><strong>四、配置DNS</strong></p>\n<p>服务器已经配置好了，我们接下来设置下dns，这样才能解析到，不然还是无法使用的</p>\n<p>依次打开，“开始-程序-管理工具-配置您的服务器向导”</p>\n<p><img src=\"\" alt=\"\"></p>\n<p>选择自定义配置</p>\n<p><img src=\"\" alt=\"\"></p>\n<p>选择dns服务器，下一步</p>\n<p><img src=\"\" alt=\"\"></p>\n<p><img src=\"\" alt=\"\"></p>\n<p><img src=\"\" alt=\"\"></p>\n<p><img src=\"\" alt=\"\"></p>\n<p><img src=\"\" alt=\"\"></p>\n<p><img src=\"\" alt=\"\"></p>\n<p><img src=\"\" alt=\"\"></p>\n<p>点击正向查找域里面的区域名称，在右边的空白处点击右键，新建主机，分别新建POP3，smtp等主机</p>\n<p><img src=\"\" alt=\"\"></p>\n<p>还是空白处，右键，新建邮件交换器，分别新建smtp和pop3的邮件交换器</p>\n<p><img src=\"\" alt=\"\"></p>\n<p><img src=\"\" alt=\"\"></p>\n<p>注意：完全合格的域名后面没有点号，邮件服务器的完全合格的域名后面有点号，例如是smtp.ip-tcp.com.</p>\n<p>到此，邮件服务器搭建完成，可以去测试了</p>\n<p>此处参考原文<a href=\"http://www.docin.com/p-156566941.html\" target=\"_blank\" rel=\"external\">http://www.docin.com/p-156566941.html</a></p>\n<p>经过我的测试，可以收邮件，但是不能发邮件（可以自己给自己发，但是不能给qq，网易等邮箱发），一直报错550 5.7.1 Unable to relay for <a href=\"mailto:xxx@xxx.com\" target=\"_blank\" rel=\"external\"></a><a href=\"mailto:xxx@xxx.com\" target=\"_blank\" rel=\"external\">xxx@xxx.com</a></p>\n<p>最后找到答案</p>\n<p>在IIS管理器里打开“默认SMTP虚拟服务器”的属性设置对话框，在“访问”选项卡中，点击“中继”按钮，弹出“中继限制”对话框，默认为选中了“仅以下列表”，修改为选中“仅以下列表除外”即可。</p>\n<p>另外下面的“允许所有通过身份验证的计算机进行中继，而忽略上表”一项要保持选中状态（默认是选中的）。</p>\n","source":"_posts/阿里云windows_server_2003_搭建邮件服务器.md","raw":"title: '阿里云windows_server_2003_搭建邮件服务器'\ndate: 2014-06-28 22:30\ncategories:\n- 服务器\n---\n\n    笔者最近遇到一个在阿里云上搭建邮件服务器的问题，总算搞定，记录一下。\n\n     整个搭建过程，包括pop3服务的安装和开启，smtp服务的安装和开启，dns服务的安装和设置。\n    参考文章[http://hi.baidu.com/senya/item/63bd6588b6817056e63d1996](http://hi.baidu.com/senya/item/63bd6588b6817056e63d1996)\n   [http://firefish.blog.51cto.com/298258/57983](http://firefish.blog.51cto.com/298258/57983)\n\n不在赘述，直接粘贴原文\n\n\n__　　一、安装Windows Server 2003邮件服务器组件__\n\n\n\n(因为盗图的缘故,图片都挂了,这里大家都去看上面的参考文章连接吧,设置dns的时候再回来)\n\n图一　“管理您的服务器”控制台\n\n\r\n　　依次单击“开始”——“管理工具”——“管理您的服务器”，打开“管理您的服务器”控制台。在这个管理控制台中我们可以看到服务器已经成为的角色。单击“添加或删除角色”命令，开始管理服务器的角色。\n\n\n\n\n\r\n图二　配置服务器向导\n\n\r\n　　当我们单击“添加或删除角色”命令，就会运行配置服务器向导。\n\n\n\n\n\r\n图三　服务器管理程序检测网络连接\n\n\n\n\n\r\n图四　管理服务器角色\n\n\r\n　　在图四中，可以查看已经安装的服务和支持而没有安装的服务。此时的服务器还不是邮件服务器，选择“邮件服务器(POP3,SMTP)”，单击“下一步”：\n\n\n\n\n\r\n图五　配置“身份验证方法”及“电子邮件域名”\n\n\n\n\n\n\n\r\n图六　单击“下一步”\n\n\n\n\n\r\n图七　安装邮件服务:POP3和SMTP\n\n\n\n\n\r\n图八　安装成功\n\n__　　二、管理邮件服务器__\n\n\r\n　　Windows Server 2003的电子邮件服务器的功能很简单，管理界面也很简洁。单击“管理工具”下的“POP3服务”：\n\n\n\n\n\r\n图九 POP3服务\n\n\n\r\n图十　为用户添加邮箱\n\n\r\n　　在“POP3服务”中单击“添加邮箱”命令，在弹出的对话框内输入邮箱名（用户名）及密码。\n\n\n\n\n\r\n图十一\n\n__　　三、配置smtp__\n\n\r\n　　方法和上面类似，在图二的画面中我们选择应用程序服务器\n\n![]()\n\n\n\n\r\n如图，我的已经开启了。\n\n\r\n下一步，依次打开“开始-程序-管理工具-internet信息服务”，在窗口左面，鼠标右键点击“smtp虚拟服务器”属性。切换到常规选项卡”IP地址“选择服务器的ip地址，点击确定就行了。\n\n__四、配置DNS__\n\n\n\n服务器已经配置好了，我们接下来设置下dns，这样才能解析到，不然还是无法使用的\n\n\n\n依次打开，“开始-程序-管理工具-配置您的服务器向导”\n\n\n\n![]()\n\n\n\n\r\n选择自定义配置\n\n![]()\n\n\n\n\r\n选择dns服务器，下一步\n\n![]()\n\n\n\n\n\n\n\n![]()\n\n\n\n![]()\n\n\n\n![]()\n\n\n\n![]()\n\n\n\n![]()\n\n\n\n![]()\n\n\n\n\r\n点击正向查找域里面的区域名称，在右边的空白处点击右键，新建主机，分别新建POP3，smtp等主机\n\n![]()\n\n\n\n\r\n还是空白处，右键，新建邮件交换器，分别新建smtp和pop3的邮件交换器\n\n![]()\n\n\n\n![]()\n\n\n\n注意：完全合格的域名后面没有点号，邮件服务器的完全合格的域名后面有点号，例如是smtp.ip-tcp.com.\n\n到此，邮件服务器搭建完成，可以去测试了\n\n此处参考原文[http://www.docin.com/p-156566941.html](http://www.docin.com/p-156566941.html)\n\n\n\n\n\n经过我的测试，可以收邮件，但是不能发邮件（可以自己给自己发，但是不能给qq，网易等邮箱发），一直报错550 5.7.1 Unable to relay for [](mailto:xxx@xxx.com)[xxx@xxx.com](mailto:xxx@xxx.com)\n\n最后找到答案\n\n\n\n\n\n\n\n\n\n\n\r\n在IIS管理器里打开“默认SMTP虚拟服务器”的属性设置对话框，在“访问”选项卡中，点击“中继”按钮，弹出“中继限制”对话框，默认为选中了“仅以下列表”，修改为选中“仅以下列表除外”即可。\n\r\n另外下面的“允许所有通过身份验证的计算机进行中继，而忽略上表”一项要保持选中状态（默认是选中的）。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"阿里云windows_server_2003_搭建邮件服务器","updated":1419105911000,"excerpt":"","_id":"15hm90x9nmvh1b3f","tags":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"Linux下使用github","date":1421600028000,"tags":["33wricgl36guy9s1","ap7bhhk4h5poe0t0"],"categories":["unizg29pab010hvw"],"content":"<blockquote>\n<p>我的惰性真是病入膏肓了，已经整整3周没有在github上提交东西了，今天看了《模拟游戏》，索性又捡起来了。下面来总结一下linux下github的使用，也算是给自己一个备份，因为我自己也是老忘记。</p>\n</blockquote>\n<p>使用环境：Ubuntu 14.04</p>\n<h2 id=\"1_安装git相关软件\">1 安装git相关软件</h2>\n<p>我的Ubuntu里面没有自带git相关软件，所以我们首先需要安装它，很简单。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">sudo</span> apt-get install git</div></pre></td></tr></table></figure>\n\n<h2 id=\"2_初始化git的设置\">2 初始化git的设置</h2>\n<p>接下来，进行初始化设置，也就是设置你的github账号和密码</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global <span class=\"literal\">user</span>.name <span class=\"string\">\"zhangsan\"</span><span class=\"comment\">#其中的“zhangsan”输入的就是你注册时候的用户名，这步是设置你提交时候默认的用户名</span></div><div class=\"line\"><span class=\"comment\">#之后设置提交时候默认的邮箱，在命令行输入：</span></div><div class=\"line\">git config --global <span class=\"literal\">user</span>.email <span class=\"string\">\"haha@qq.com\"</span></div><div class=\"line\"><span class=\"comment\">#其中的“haha@qq.com”就是你注册时候用的邮箱，当然也可以用别的邮箱，用别的邮箱的时候你必须在github的主页上设置里面把用的邮箱添加进去</span></div></pre></td></tr></table></figure>\n\n<h2 id=\"3_开始使用github\">3 开始使用github</h2>\n<p>1 首先你的github上应该有一个库，如果没有的话，就去github网站上新建一个库，或者fork一个别人的项目，以下的操作都是建立在这个基础上，<code>假设存在一个库https://github.com/Jackroyal/test.git</code>.<br>如果你的github上已经有库了，可以忽略第1步直接进入第2步<br>2 我们在本地新建一个文件夹(命名随你便，我取名叫做test_git)</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">mkdir</span> test_git</div></pre></td></tr></table></figure>\n\n<p>3 将远程的库复制下来，我们使用git clone命令来完成</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\">#如果你的环境不在test_git目录</span></div><div class=\"line\"><span class=\"preprocessor\">#cd test_git</span></div><div class=\"line\"><span class=\"preprocessor\">#如果在test_git中</span></div><div class=\"line\">git clone https:<span class=\"comment\">//github.com/Jackroyal/test.git#他会在你的本地新建一个test文件夹</span></div><div class=\"line\">cd test</div><div class=\"line\"><span class=\"preprocessor\">#接下来新建一个测试文件</span></div><div class=\"line\">touch test.md</div><div class=\"line\"><span class=\"preprocessor\">#修改测试文件的内容</span></div><div class=\"line\">vi test.md</div><div class=\"line\"><span class=\"preprocessor\">#提交刚才所做的更改</span></div><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"首次提交\"</span></div></pre></td></tr></table></figure>\n\n<p>3 push提交到github</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote <span class=\"built_in\">add</span> origin http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/Jackroyal/test.git</div><div class=\"line\">git push</div></pre></td></tr></table></figure>\n\n<p>之后会提示你输入用户名密码，你输入你github账号和密码就行了<br>打完收工，睡觉<br>后面会陆续介绍hexo在Linux下的使用</p>\n<h1 id=\"参考文献\">参考文献</h1>\n<p>1 <a href=\"http://blog.chinaunix.net/uid-29040159-id-3799719.html\" target=\"_blank\" rel=\"external\">ubuntu 下 github 简单的使用教程</a><br>2 <a href=\"http://blog.csdn.net/pony_maggie/article/details/23207847\" target=\"_blank\" rel=\"external\">Github入门级使用攻略</a></p>\n","source":"_posts/linux下使用github.md","raw":"title: Linux下使用github\ndate: 2015-01-19 00:53:48\ntags:\n- Linux\n- github\ncategories:\n- Linux\n---\n>我的惰性真是病入膏肓了，已经整整3周没有在github上提交东西了，今天看了《模拟游戏》，索性又捡起来了。下面来总结一下linux下github的使用，也算是给自己一个备份，因为我自己也是老忘记。\n\n使用环境：Ubuntu 14.04\n##1 安装git相关软件\n我的Ubuntu里面没有自带git相关软件，所以我们首先需要安装它，很简单。\n```\nsudo apt-get install git \n```\n##2 初始化git的设置\n接下来，进行初始化设置，也就是设置你的github账号和密码\n```\ngit config --global user.name \"zhangsan\"#其中的“zhangsan”输入的就是你注册时候的用户名，这步是设置你提交时候默认的用户名\n#之后设置提交时候默认的邮箱，在命令行输入：\ngit config --global user.email \"haha@qq.com\"\n#其中的“haha@qq.com”就是你注册时候用的邮箱，当然也可以用别的邮箱，用别的邮箱的时候你必须在github的主页上设置里面把用的邮箱添加进去\n```\n##3 开始使用github\n1 首先你的github上应该有一个库，如果没有的话，就去github网站上新建一个库，或者fork一个别人的项目，以下的操作都是建立在这个基础上，`假设存在一个库https://github.com/Jackroyal/test.git`.\n如果你的github上已经有库了，可以忽略第1步直接进入第2步\n2 我们在本地新建一个文件夹(命名随你便，我取名叫做test_git)\n```\nmkdir test_git\n```\n3 将远程的库复制下来，我们使用git clone命令来完成\n```\n#如果你的环境不在test_git目录\n#cd test_git\n#如果在test_git中\ngit clone https://github.com/Jackroyal/test.git#他会在你的本地新建一个test文件夹\ncd test\n#接下来新建一个测试文件\ntouch test.md\n#修改测试文件的内容\nvi test.md\n#提交刚才所做的更改\ngit add .\ngit commit -m \"首次提交\"\n```\n3 push提交到github\n```\ngit remote add origin https://github.com/Jackroyal/test.git\ngit push\n```\n之后会提示你输入用户名密码，你输入你github账号和密码就行了\n打完收工，睡觉\n后面会陆续介绍hexo在Linux下的使用\n#参考文献\n1 [ubuntu 下 github 简单的使用教程](http://blog.chinaunix.net/uid-29040159-id-3799719.html)\n2 [Github入门级使用攻略](http://blog.csdn.net/pony_maggie/article/details/23207847)\n","slug":"linux下使用github","updated":1421602831000,"excerpt":"","_id":"xlpc535fdktqjldc","comments":true,"layout":"post","photos":[],"link":""},{"title":"kali和ubuntu双系统安装","date":1425388661000,"tags":["e1n8mxci2did7omr","3a1kvf094ufqkbaz"],"categories":["3ich6gz4ovg2vc0z"],"content":"<p>时间忽快忽慢，一转眼，年过完了，又回来学校了，又一个多月没有push了，重新回到github。今天我们家笨笨给我找了点kali的资料，索性就把kali捡起来，第一步安装kali的系统。<br>此处背景不再介绍，直奔主题。kali的安装过程和ubuntu的安装过程类似，应该说原理上是一模一样的，只是界面有些不同。我的电脑当前已经安装了win8和ubuntu，现在需要再加一个kali的系统，三系统共存。<br>大体分为如下几个步骤：<br>1 下载kali镜像<br>2 刻录u盘<br>3 安装kali</p>\n<h1 id=\"1_下载kali镜像\">1 下载kali镜像</h1>\n<p>这步很简单，我们去kali的官网下载<a href=\"https://www.kali.org/downloads/\" target=\"_blank\" rel=\"external\">https://www.kali.org/downloads/</a>,下载对应的版本。我这里下载的是第一个64位版本（<a href=\"http://cdimage.kali.org/kali-1.1.0/kali-linux-1.1.0-amd64.iso\" target=\"_blank\" rel=\"external\">http://cdimage.kali.org/kali-1.1.0/kali-linux-1.1.0-amd64.iso</a>）,因为是在ubuntu下，我们可以顺手校验一下文件的hash值，防止文件损坏。<br>使用<code>sha1sum /home/chen/kali-linux-1.1.0-amd64.iso</code><br>查看输出是否是<code>40a1fd1d4864e7fac70438a1bf2095c8c1a4e764</code>，若正确，则第一步完成。</p>\n<h1 id=\"2_刻录u盘\">2 刻录u盘</h1>\n<p>如果采用硬盘安装的话，我们需要在win下面操作，使用easybcd来编辑grub引导，还需要解压文件，相对比较麻烦，我这里采用u盘安装，相对比较简单。<br>和安装ubuntu不同，我之前在win下用UltraISO来刻录,<img src=\"http://ww3.sinaimg.cn/large/692869a3gw1epsvwgs1rqj20fa0c676e.jpg\" alt=\"刻录ubuntu\">如图所示，便捷启动是可以不修改的，直接默认，点击写入就行。我今天在刻录kali的时候，发现这样写的u盘无法启动，开机的时候会提示<code>failed to boot from USB disk with error: gfxboot.c32: not a COM32R Image boot:</code>的错误。<br>解决方法有两个<br>1 linux的用mkusb，windows的用Win32DiskImager 来制作U盘启动<br>具体用法：<br><a href=\"https://wiki.ubuntu.com/Win32DiskImager/iso2usb\" target=\"_blank\" rel=\"external\">https://wiki.ubuntu.com/Win32DiskImager/iso2usb</a><br><a href=\"https://help.ubuntu.com/community/mkusb\" target=\"_blank\" rel=\"external\">https://help.ubuntu.com/community/mkusb</a><br>2 在win下用UltraISO来刻录，记得更改便捷启动的设置，如图所示<br><img src=\"http://ww4.sinaimg.cn/large/692869a3gw1epsw409qr3j20go09rjtp.jpg\" alt=\"更改便捷启动\">，点击便捷启动-&gt;选择写入新的启动器引导扇区——&gt;syslinus——&gt;写入</p>\n<p><em>我采用的是法一，我在ubuntu中用mkusb来刻录</em></p>\n<h1 id=\"3_安装kali\">3 安装kali</h1>\n","source":"_posts/kali-and-ubuntu.md","raw":"title: kali和ubuntu双系统安装\ndate: 2015-03-03 21:17:41\ntags:\n- kali\n- linux\ncategories: linux\n---\n\n时间忽快忽慢，一转眼，年过完了，又回来学校了，又一个多月没有push了，重新回到github。今天我们家笨笨给我找了点kali的资料，索性就把kali捡起来，第一步安装kali的系统。\n此处背景不再介绍，直奔主题。kali的安装过程和ubuntu的安装过程类似，应该说原理上是一模一样的，只是界面有些不同。我的电脑当前已经安装了win8和ubuntu，现在需要再加一个kali的系统，三系统共存。\n大体分为如下几个步骤：\n1 下载kali镜像\n2 刻录u盘\n3 安装kali\n\n#1 下载kali镜像\n这步很简单，我们去kali的官网下载<https://www.kali.org/downloads/>,下载对应的版本。我这里下载的是第一个64位版本（<http://cdimage.kali.org/kali-1.1.0/kali-linux-1.1.0-amd64.iso>）,因为是在ubuntu下，我们可以顺手校验一下文件的hash值，防止文件损坏。\n使用``` sha1sum /home/chen/kali-linux-1.1.0-amd64.iso```\n查看输出是否是`40a1fd1d4864e7fac70438a1bf2095c8c1a4e764`，若正确，则第一步完成。\n#2 刻录u盘\n如果采用硬盘安装的话，我们需要在win下面操作，使用easybcd来编辑grub引导，还需要解压文件，相对比较麻烦，我这里采用u盘安装，相对比较简单。\n和安装ubuntu不同，我之前在win下用UltraISO来刻录,![刻录ubuntu](http://ww3.sinaimg.cn/large/692869a3gw1epsvwgs1rqj20fa0c676e.jpg)如图所示，便捷启动是可以不修改的，直接默认，点击写入就行。我今天在刻录kali的时候，发现这样写的u盘无法启动，开机的时候会提示`failed to boot from USB disk with error: gfxboot.c32: not a COM32R Image boot:`的错误。\n解决方法有两个\n1 linux的用mkusb，windows的用Win32DiskImager 来制作U盘启动\n具体用法：\nhttps://wiki.ubuntu.com/Win32DiskImager/iso2usb\nhttps://help.ubuntu.com/community/mkusb\n2 在win下用UltraISO来刻录，记得更改便捷启动的设置，如图所示\n![更改便捷启动](http://ww4.sinaimg.cn/large/692869a3gw1epsw409qr3j20go09rjtp.jpg)，点击便捷启动->选择写入新的启动器引导扇区——>syslinus——>写入\n\n*我采用的是法一，我在ubuntu中用mkusb来刻录*\n#3 安装kali\n\n","slug":"kali-and-ubuntu","updated":1425392508000,"excerpt":"","_id":"b8ii19v4abn10wjo","comments":true,"layout":"post","photos":[],"link":""}],"Tag":[{"name":"javascript","_id":"5m9ajrps9v5ypsn6","posts":["q34dbp145k5my6dk","cj9cjiaxme4swblq"]},{"name":"正则表达式","_id":"7uyms81ecxxutwly","posts":["q34dbp145k5my6dk"]},{"name":"前端","_id":"n87ha0xooxcysqwn","posts":["q34dbp145k5my6dk","cj9cjiaxme4swblq"]},{"name":"js","_id":"46i69al1w9z1ehkh","posts":["q34dbp145k5my6dk"]},{"name":"正则","_id":"ha4ie8mnfgryqmio","posts":["cj9cjiaxme4swblq"]},{"name":"chrome","_id":"3x41krbl4stuqof9","posts":["3verq2la7drepqas","eupvfnbbpfyq4ojk","caoy2ebvdv84y6d3","5zmkqerow5p8f4cb"]},{"name":"cmcc-edu","_id":"lq8yspm94k084re6","posts":["3verq2la7drepqas","eupvfnbbpfyq4ojk","caoy2ebvdv84y6d3","5zmkqerow5p8f4cb"]},{"name":"表单","_id":"gve97yzmmnamj9ca","posts":["3verq2la7drepqas"]},{"name":"中国移动","_id":"yj9b6cth1f4lxjps","posts":["eupvfnbbpfyq4ojk","caoy2ebvdv84y6d3","5zmkqerow5p8f4cb"]},{"name":"扩展","_id":"4b7uoz4asbrl0284","posts":["caoy2ebvdv84y6d3","5zmkqerow5p8f4cb"]},{"name":"脚本","_id":"dm1y66x8wdel9f4i","posts":["caoy2ebvdv84y6d3","5zmkqerow5p8f4cb"]},{"name":"hexo","_id":"54uvuinfeo6xlt3o","posts":["h2eugui5ttlnj6hf","pfzxibdtgd3eucku","xj57yhdq2ovsdg72"]},{"name":"github","_id":"ap7bhhk4h5poe0t0","posts":["xj57yhdq2ovsdg72","xlpc535fdktqjldc"]},{"name":"sql","_id":"th95k3mor3h3d9t4","posts":["tgz4lf36k75lnimv"]},{"name":"select","_id":"1l68baer935zy8bs","posts":["tgz4lf36k75lnimv"]},{"name":"sql server","_id":"23tzzzs0mfnfr0s9","posts":["7kzfhsp9unztrn7i"]},{"name":"wamp","_id":"p8rlrx6sg0kvve3p","posts":["7kzfhsp9unztrn7i"]},{"name":"Linux","_id":"33wricgl36guy9s1","posts":["xlpc535fdktqjldc"]},{"name":"kali","_id":"e1n8mxci2did7omr","posts":["b8ii19v4abn10wjo"]},{"name":"linux","_id":"3a1kvf094ufqkbaz","posts":["b8ii19v4abn10wjo"]}]}