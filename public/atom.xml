<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[搁浅St的blog]]></title>
  <subtitle><![CDATA[我最喜欢笨笨]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jackroyal.github.io//"/>
  <updated>2015-06-16T14:24:18.326Z</updated>
  <id>http://jackroyal.github.io//</id>
  
  <author>
    <name><![CDATA[John Doe]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[digitalocean support google scholar by ipv6]]></title>
    <link href="http://jackroyal.github.io/2015/06/16/digitalocean-support-google-scholar-by-ipv6/"/>
    <id>http://jackroyal.github.io/2015/06/16/digitalocean-support-google-scholar-by-ipv6/</id>
    <published>2015-06-16T14:24:18.000Z</published>
    <updated>2015-06-16T14:24:18.326Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo 3.0 update]]></title>
    <link href="http://jackroyal.github.io/2015/06/16/hexo-3-0-update/"/>
    <id>http://jackroyal.github.io/2015/06/16/hexo-3-0-update/</id>
    <published>2015-06-16T14:22:43.000Z</published>
    <updated>2015-06-16T14:48:20.565Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[给hexo配置上评论和访问量]]></title>
    <link href="http://jackroyal.github.io/2015/05/30/hexo-setting-with-comments-and-visitors/"/>
    <id>http://jackroyal.github.io/2015/05/30/hexo-setting-with-comments-and-visitors/</id>
    <published>2015-05-30T06:08:49.000Z</published>
    <updated>2015-06-16T14:36:24.517Z</updated>
    <content type="html"><![CDATA[<p>哈哈,我们家笨笨,绝对是我学习技术的很大很大很大大的动力.更开始用github pages的时候,就觉得没法看访问量和评论数量这事,很蛋疼,不过也没折腾.<br>今天上午,我们家笨笨说没有评论和访问量不好,都不知道多少人看了.妹子都发话了,果断要搞定.<br><a id="more"></a><br>google一番找到解决方法:</p>
<h4 id="1_关于评论数量的显示,我们可以直接使用多说官网提供的方法,很简单">1 关于评论数量的显示,我们可以直接使用多说官网提供的方法,很简单</h4><h4 id="2_关于访问量统计这事儿,不太好搞,我找到了这个不蒜子,这位非著名码农自己做的访问统计,哈哈,点个赞">2 关于访问量统计这事儿,不太好搞,我找到了这个<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a>,这位非著名码农自己做的访问统计,哈哈,点个赞</h4><h4 id="3_今天还看到了font-awesome,可以显示一些小图标,为了显示效果更好,一并加上去">3 今天还看到了font-awesome,可以显示一些小图标,为了显示效果更好,一并加上去</h4><p>先展示一下最终的效果:<br><br><img src="http://ww1.sinaimg.cn/large/692869a3gw1esm9snxfcuj20su0ad74x.jpg" alt="页底关于整站访问量的显示"><br><img src="http://ww4.sinaimg.cn/large/692869a3gw1esm9tcczdij20r00doq4t.jpg" alt="文章页面关于访问量和评论数量的显示"></p>
<p>下面,开始动手</p>
<h1 id="1_配置评论数量的显示">1 配置评论数量的显示</h1><p>首先,确认你的评论系统用的是多说,如果不是,那就不用继续往下看了(参考<a href="http://localhost:4000/2014/11/28/custom-hexo/" target="_blank" rel="external">这里</a>配置多说).<br>我使用的主题是<code>light</code>,其他主题原理类似.我们打开<code>themes/light/layout/_partial/article.ejs</code>,我们在<code>header</code>标签的尾部添加上下面的代码:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (<span class="attribute">item.excerpt</span> &amp;&amp; <span class="attribute">index</span>)&#123; %&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">%</span> &#125; <span class="attribute">else</span> &#123; %&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"busuanzi_container_page_pv"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"head-plus"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-user"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>次访问</span><br><span class="line">   <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"head-plus"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-comments"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"ds-thread-count"</span> <span class="attribute">data-thread-key</span>=<span class="value">"&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>条评论</span><br><span class="line">   <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>最终效果如图<br><br><img src="http://ww2.sinaimg.cn/large/692869a3gw1esmas5d58oj20x50jc46f.jpg" alt="修改后的article.ejs"><br>以上代码,是最终成型的代码,我加入了一些美化的东西,最核心的就是<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"ds-thread-count"</span> <span class="attribute">data-thread-key</span>=<span class="value">"&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>尤其注意<code>data-thread-key</code>的设置,他和你之前配置多说的时候是一致的,每篇文章有一个独一无二的key,你可以去你的<code>themes/light/layout/_partial/comment.ejs</code>里找到关于data-thread-key的内容,直接复制过来即可.</p>
<p>Ps:这里我们可能还需要配置下数据显示的格式,在你的多说后台管理里面,进入设置界面如图<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1esmayan2utj20w50mx0ya.jpg" alt="多说后台设置"><br>我们找到<code>暂无评论</code>,<code>1条评论</code>,<code>{num}条评论</code>,这几个设置,修改成自己要的格式,也可以参照我的修改,<code>0</code>,<code>1</code>,<code>{num}</code></p>
<h1 id="2_配置文章访问量的显示">2 配置文章访问量的显示</h1><p>这个更简单了,按照作者的说法,只需要引入一个js,再添加一个span就完成了.由于js一般放置在页面的最底部,所以我们找到<code>themes/light/layout/_partial/after_footer.ejs</code>,我们在最后添加上下面的代码:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>上面就完成了js文件的引入,我们再在要显示访问量的地方添加一个span就行了.比如我想显示在标题的下面,那就打开<code>themes/light/layout/_partial/article.ejs</code>,添加的代码,就是<code>第一步</code>里面添加的那个.如果你想简洁一点,也可以只添加下面核心代码就行:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">本站总访问量<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>次</span><br><span class="line">本站访客数<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>人次</span><br><span class="line">本文总阅读量<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>次</span><br></pre></td></tr></table></figure></p>
<h1 id="3_经过美化后最终的代码">3  经过美化后最终的代码</h1><p>如果只用官方提供的代码,没有优化,很丑,我优化了下,分享一下.</p>
<p>1.修改<code>themes/light/layout/_partial/article.ejs</code>,在header标签的末尾添加以下代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (<span class="attribute">item.excerpt</span> &amp;&amp; <span class="attribute">index</span>)&#123; %&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">%</span> &#125; <span class="attribute">else</span> &#123; %&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"busuanzi_container_page_pv"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"head-plus"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-user"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>次访问</span><br><span class="line">   <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"head-plus"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-comments"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"ds-thread-count"</span> <span class="attribute">data-thread-key</span>=<span class="value">"&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>条评论</span><br><span class="line">   <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="http://ww2.sinaimg.cn/large/692869a3gw1esmas5d58oj20x50jc46f.jpg" alt="修改后的article.ejs"><br>2.修改<code>themes/light/layout/_partial/footer.ejs</code>,下面是footer.ejs的<strong>全部代码</strong>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"alignleft"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (<span class="attribute">config.author</span>)&#123; %&gt;</span></span><br><span class="line">  &amp;copy; <span class="tag">&lt;<span class="title">%=</span> <span class="attribute">new</span> <span class="attribute">Date</span>()<span class="attribute">.getFullYear</span>() %&gt;</span> <span class="tag">&lt;<span class="title">%=</span> <span class="attribute">config.author</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">%</span> &#125; <span class="attribute">else</span> &#123; %&gt;</span></span><br><span class="line">  &amp;copy; <span class="tag">&lt;<span class="title">%=</span> <span class="attribute">new</span> <span class="attribute">Date</span>()<span class="attribute">.getFullYear</span>() %&gt;</span> <span class="tag">&lt;<span class="title">%=</span> <span class="attribute">config.title</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-flag"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span>    你是第<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"fa fa-spinner fa-spin"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span>个到访的小伙伴</span><br><span class="line"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"clearfix"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><br>3.修改<code>themes/light/layout/_partial/after_footer.ejs</code>,我们在<strong>最后</strong>添加上下面的代码:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>4.修改<code>themes\light\source\css\_partial\article.styl</code>,我们在第124行,在<code>.entry</code>之前添加上以下代码,尤其注意与左右的间距,因为它是一个树形结构,它与左侧的距离,影响着它的层级.我们这里应该和entry平级,下面代码应该与<code>.entry</code>对齐<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.busuanzi_container_page_pv</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">20px</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="hexcolor">#817C7C</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span></span><br><span class="line"><span class="id">#busuanzi_value_page_pv</span></span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">4px</span></span><br><span class="line"><span class="class">.head-plus</span></span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">4px</span></span><br><span class="line"><span class="class">.ds-thread-count</span></span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">4px</span></span><br></pre></td></tr></table></figure></p>
<p>最终效果如图:<br><img src="http://ww4.sinaimg.cn/large/692869a3gw1esmajbsx38j20k30gwadu.jpg" alt="添加css,注意左对齐"><br>5.修改<code>themes\light\source\css\_partial\footer.styl</code>,在最后添加上以下代码<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#busuanzi_value_site_pv</span></span><br><span class="line">  <span class="attribute">color</span>:black</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">4px</span></span><br><span class="line"><span class="id">#busuanzi_container_site_pv</span></span><br><span class="line">  <span class="attribute">padding-left</span>:<span class="number">2em</span></span><br></pre></td></tr></table></figure></p>
<p>6.修改<code>themes\light\source\css\_partial\variable.styl</code>,在最后添加以下代码<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@import</span> <span class="function"><span class="title">url</span><span class="params">(<span class="string">"http://libs.useso.com/js/font-awesome/4.2.0/css/font-awesome.min.css"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>ok  打完收工</p>
<h1 id="参考文献">参考文献</h1><p>1 博客访问技术工具—不蒜子 <a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">http://ibruce.info/2015/04/04/busuanzi/</a><br>2 <a href="http://dev.duoshuo.com/docs/5016427f77cf5fa30500000e" target="_blank" rel="external">多说-代码显示【文章评论数】方法</a></p>
<h1 id="致谢">致谢</h1><p>这里，要感谢我最亲爱的笨笨<a href="http://huirong.github.io" target="_blank" rel="external">http://huirong.github.io</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>哈哈,我们家笨笨,绝对是我学习技术的很大很大很大大的动力.更开始用github pages的时候,就觉得没法看访问量和评论数量这事,很蛋疼,不过也没折腾.<br>今天上午,我们家笨笨说没有评论和访问量不好,都不知道多少人看了.妹子都发话了,果断要搞定.<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://jackroyal.github.io/tags/hexo/"/>
    
      <category term="hexo" scheme="http://jackroyal.github.io/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于python的requests库，模拟登录csdn博客]]></title>
    <link href="http://jackroyal.github.io/2015/05/23/python-requests-login-csdn-blog/"/>
    <id>http://jackroyal.github.io/2015/05/23/python-requests-login-csdn-blog/</id>
    <published>2015-05-23T11:06:04.000Z</published>
    <updated>2015-05-30T06:09:44.828Z</updated>
    <content type="html"><![CDATA[<p>还是继续我的python学习。以前写的爬虫用的urllib2来实现，也用过scrapy的爬虫框架，这次试试requests，刚开始用，用起来确实比urllib2好，封装的更好一些，使用起来简单方便很多。<br><a id="more"></a></p>
<h1 id="安装requests库">安装requests库</h1><p>在ubuntu下面安装很简单<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure></p>
<p>就搞定了</p>
<h1 id="快速上手的小例子">快速上手的小例子</h1><p>下面给个快速入门，最简单的例子<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="keyword">print</span> r.text</span><br></pre></td></tr></table></figure></p>
<p>这段代码，很简单。<br>第一行，引入requests库，这是必然的。<br>第二行，通过get方式获取baidu首页的内容。<br>第三行，把返回的response内容，输出出来</p>
<p>果然很简单，这样就可以发送一个get请求，同理，你还可以使用<br><code>requests.post</code>,<code>requests.put</code>,<code>requests.options</code>,<code>requests.head</code>，发送请求，没错就是这么简单，果然比urllib2好用。</p>
<h1 id="模拟登录csdn">模拟登录csdn</h1><p>我们需要其他的辅助工具</p>
<h3 id="浏览器：Firefox">浏览器：Firefox</h3><h3 id="浏览器插件：tamper_data，firebug">浏览器插件：tamper data，firebug</h3><p>我们需要tamper data来拦截请求，因为chrome没有这个功能的插件，所以这个只能使用firefox来做（除了拦截请求chrome没有，其他的工作都可以用chrome，看个人喜好吧）。</p>
<h1 id="分析登录过程">分析登录过程</h1><h2 id="1_打开登录页面">1 打开登录页面</h2><p>我们首先打开csdn的登录页面<code>https://passport.csdn.net/account/login?ref=toolbar</code><br>这个链接，前面部分是登录的网址，问号后面的参数，顾名思义，referer，就是你从哪里跳过来的，也许是一个页面跳转到登录的，toolbar就是我自己点击顶部导航栏，然后跳转到登录页面的。</p>
<h2 id="2_清除相关的cookie">2 清除相关的cookie</h2><p>为了排除不必要的干扰，我们先清除掉所有的相关的cookie，这样方便我们分析哪些参数是必须的。<br><img src="http://ww1.sinaimg.cn/large/692869a3gw1esegc1itw2j20qu075779.jpg" alt="firefox中，清除cookie"></p>
<h2 id="3_登录过程分析">3 登录过程分析</h2><p>清除了cookie后，我们刷新一下页面<code>https://passport.csdn.net/account/login?ref=toolbar</code>，重新获取对应的cookie。<br>然后我们就开始用tamper data来拦截请求。<br><img src="http://ww2.sinaimg.cn/large/692869a3gw1esegfztiz7j20s40ftdjw.jpg" alt="使用tamper data"><br>我们点击<code>start tamper</code>，在网页中填写用户名和密码。点击<code>登录</code>，会发出一个请求，然后tamper data会拦截下这个请求，询问我们是否拦截，点击tamper，我们可以在这个请求提交之前，查看请求的内容，还可以做删改。<br><img src="http://ww1.sinaimg.cn/large/692869a3gw1esegkslypyj20y20gntdt.jpg" alt="发出第一个登录请求前拦截下来，查看表单内容"><br>csdn的登录过程比较简单，发送一个登录表单过去，就登录成功了，不过记得修改headers，这是后话。</p>
<h2 id="4_开始模拟登录">4 开始模拟登录</h2><p>知道登录过程了，我们就开始写登录的代码。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#使用beautifulsoup来处理获取的html内容，这个库需要安装，还是使用pip install beautifulsoup4来安装</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="comment">#这个函数使用来提取流水号的</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toJson</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="string">'''</span><br><span class="line">    提取lt流水号，将数据化为一个字典</span><br><span class="line">    '''</span></span><br><span class="line">    soup = bs(str)</span><br><span class="line">    tt = &#123;&#125;</span><br><span class="line">    <span class="comment">#提取form表单中所有的input标签，以字典的形式来保存name：value</span></span><br><span class="line">    <span class="keyword">for</span> inp <span class="keyword">in</span> soup.form.find_all(<span class="string">'input'</span>):</span><br><span class="line">        <span class="keyword">if</span> inp.get(<span class="string">'name'</span>) != <span class="keyword">None</span>:</span><br><span class="line">            tt[inp.get(<span class="string">'name'</span>)] =inp.get(<span class="string">'value'</span>)</span><br><span class="line">    <span class="keyword">return</span> tt</span><br><span class="line">    </span><br><span class="line"><span class="comment">#这行代码，是用来维持cookie的，你后续的操作都不用担心cookie，他会自动带上相应的cookie</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"><span class="comment">#我们需要带表单的参数,这里面有个参数lt,登录操作的流水号，我们需要从html页面中进行提取</span></span><br><span class="line">payload =&#123;<span class="string">'username'</span>:<span class="string">'jackroyal'</span>,<span class="string">'password'</span>:<span class="string">'123456'</span>,<span class="string">'lt'</span>:soup[<span class="string">"lt"</span>],<span class="string">'execution'</span>:<span class="string">'e1s1'</span>,<span class="string">'_eventId'</span>:<span class="string">'submit'</span>&#125;</span><br><span class="line">r = s.post(<span class="string">"http://passport.csdn.net/account/login"</span>,data=payload,headers=header)</span><br><span class="line"><span class="keyword">print</span> r.text</span><br></pre></td></tr></table></figure></p>
<p>ok，至此，登录就成功了</p>
<h2 id="5_优化">5 优化</h2><p>当你登录成功后，你会问，我怎么知道登录成功了呢？当你试图去抓取<code>http://write.blog.csdn.net/postlist</code>的内容的时候，你会发现一个403的错误，这是为啥呢？<br>很简单，<code>user agent</code>没有修改，我们用的是默认的<code>user agent</code>，这可不是一个正常的用户，所以被网站拒绝了。我们加上他就好了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header = &#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0'</span>&#125;</span><br><span class="line">r = s.post(<span class="string">"http://passport.csdn.net/account/login"</span>,data=payload,headers=header)</span><br><span class="line"><span class="keyword">print</span> r.text</span><br></pre></td></tr></table></figure></p>
<h1 id="后话">后话</h1><p>上面的代码还是太简单，我们都知道cookie是有有效期的，我在做调试的时候，没修改一次，就要模拟登录一次，这样不好，我们要保存cookie，这样下次就不需要重新发送登录请求了<br>分享出完整的代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">from</span> cookielib <span class="keyword">import</span> LWPCookieJar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toJson</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="string">'''</span><br><span class="line">    提取lt流水号，将数据化为一个字典</span><br><span class="line">    '''</span></span><br><span class="line">    soup = bs(str)</span><br><span class="line">    tt = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> inp <span class="keyword">in</span> soup.form.find_all(<span class="string">'input'</span>):</span><br><span class="line">        <span class="keyword">if</span> inp.get(<span class="string">'name'</span>) != <span class="keyword">None</span>:</span><br><span class="line">            tt[inp.get(<span class="string">'name'</span>)] =inp.get(<span class="string">'value'</span>)</span><br><span class="line">    <span class="keyword">return</span> tt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#cookie setting</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">s.cookies = LWPCookieJar(<span class="string">'cookiejar'</span>)</span><br><span class="line">header = &#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0'</span>&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'cookiejar'</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"there is no cookie,setting"</span></span><br><span class="line">    r = s.get(<span class="string">"http://passport.csdn.net/account/login"</span>)</span><br><span class="line">    soup = toJson(r.text)</span><br><span class="line">    payload =&#123;<span class="string">'username'</span>:<span class="string">'jackroyal'</span>,<span class="string">'password'</span>:<span class="string">'123456'</span>,<span class="string">'lt'</span>:soup[<span class="string">"lt"</span>],<span class="string">'execution'</span>:<span class="string">'e1s1'</span>,<span class="string">'_eventId'</span>:<span class="string">'submit'</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> payload</span><br><span class="line">    r = s.post(<span class="string">"http://passport.csdn.net/account/login"</span>,data=payload,headers=header)</span><br><span class="line">    s.cookies.save(ignore_discard=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> r.text</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"cookie exists,restore"</span></span><br><span class="line">    s.cookies.load(ignore_discard=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#r = s.get("https://passport.csdn.net/content/loginbox/loginapi.js")</span></span><br><span class="line">r = s.get(<span class="string">"http://write.blog.csdn.net/postlist"</span>,headers=header)</span><br><span class="line"><span class="keyword">print</span> r.text</span><br></pre></td></tr></table></figure></p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://requests-docs-cn.readthedocs.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="external">requests官方文档快速上手——中文版</a><br>2 <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html" target="_blank" rel="external">beautifuisoup官方文档</a><br>3 <a href="http://stackoverflow.com/questions/13030095/how-to-save-requests-python-cookies-to-a-file" target="_blank" rel="external">python的requests如何保存cookie到文件</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>还是继续我的python学习。以前写的爬虫用的urllib2来实现，也用过scrapy的爬虫框架，这次试试requests，刚开始用，用起来确实比urllib2好，封装的更好一些，使用起来简单方便很多。<br>]]>
    
    </summary>
    
      <category term="csdn" scheme="http://jackroyal.github.io/tags/csdn/"/>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="requests" scheme="http://jackroyal.github.io/tags/requests/"/>
    
      <category term="模拟登录" scheme="http://jackroyal.github.io/tags/%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95/"/>
    
      <category term="python学习笔记" scheme="http://jackroyal.github.io/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[html5在ie中遇到的那些坑]]></title>
    <link href="http://jackroyal.github.io/2015/05/15/holes-in-ie6-about-html5/"/>
    <id>http://jackroyal.github.io/2015/05/15/holes-in-ie6-about-html5/</id>
    <published>2015-05-15T15:19:43.000Z</published>
    <updated>2015-05-15T17:23:02.804Z</updated>
    <content type="html"><![CDATA[<p>这段时间,笨笨找了个活儿,做一个页面,能够适配所有的主流浏览器,包括pc,平板和手机等终端(这和当年某刘提的要求一样啊).<br>我第一个想到的是bootstrap,可惜这货太大了,我只是几个简单的页面,没必要用这么大体量的东西.<br>搜索一番以后,我找到了我的解决方案,media query,支付宝也是这么解决的.<br><a id="more"></a></p>
<h1 id="前提条件">前提条件</h1><p>以下所给出的例子,都是html5的页面,不合适html4.0的页面,也就是说你的头部必须是<br><code>&lt;!DOCTYPE html&gt;</code>才行,如果是<code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</code>,是不行的,要仔细看清楚哈.<br>下面就来罗列一下,这次经过的那些坑:</p>
<h1 id="1_自动适配终端屏幕宽度">1  自动适配终端屏幕宽度</h1><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="variable">name=</span><span class="string">"viewport"</span> <span class="variable">content=</span><span class="string">"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span><br></pre></td></tr></table></figure>
<p>content属性值 :<br>     width:可视区域的宽度，值可为数字或关键词device-width<br>     height:同width<br>     intial-scale:页面首次被显示是可视区域的缩放级别，取值1.0则页面按实际尺寸显示，无任何缩放<br>     maximum-scale=1.0, minimum-scale=1.0;可视区域的缩放级别，<br>              maximum-scale用户可将页面放大的程序，1.0将禁止用户放大到实际尺寸之上。<br>     user-scalable:是否可对页面进行缩放，no 禁止缩放</p>
<h1 id="2_使ie6-8支持html5的元素">2  使ie6-8支持html5的元素</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML5 shim, for IE6-8 support of HTML5 elements --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span><br><span class="line">&lt;script src="http://html5shim.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure>
<p>以上代码,顾名思义,当ie的版本是9一下的时候,加载html5.js这个文件(建议最好下载下来在本地调用),他是用来帮助ie6-8支持html元素的.</p>
<h1 id="3_ie10以下的版本不支持placeholder(不完美解决)">3  ie10以下的版本不支持placeholder(不完美解决)</h1><p>placeholder是html5里面才有的东东,ie8不支持就算了,ie9都不支持,伤不起.这个没办法,只能用js去写,网上有很多类似的东西,不过不是很好用,我找到的都不完美.<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">(<span class="keyword">function</span><span class="list">($)</span> <span class="collection">&#123;</span><br><span class="line">  /**</span><br><span class="line">   * 没有开花的树</span><br><span class="line">   * http://blog.csdn.net/mycwq/</span><br><span class="line">   * <span class="number">2012</span>/<span class="number">11</span>/<span class="number">28</span> <span class="number">15</span>:<span class="number">12</span></span><br><span class="line">   */</span><br><span class="line"></span><br><span class="line">  var placeholderfriend = <span class="collection">&#123;</span><br><span class="line">    focus: function<span class="list">(<span class="keyword">s</span>)</span> <span class="collection">&#123;</span><br><span class="line">      s = $<span class="list">(<span class="keyword">s</span>)</span>.hide<span class="list">()</span>.prev<span class="list">()</span>.show<span class="list">()</span>.focus<span class="list">()</span><span class="comment">;</span></span><br><span class="line">      var idValue = s.attr<span class="list">(<span class="string">"id"</span>)</span><span class="comment">;</span></span><br><span class="line">      if <span class="list">(<span class="keyword">idValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">        s.attr<span class="list">(<span class="string">"id"</span>, idValue.replace<span class="list">(<span class="string">"placeholderfriend"</span>, <span class="string">""</span>)</span>)</span><span class="comment">;</span></span><br><span class="line">      &#125;</span></span><br><span class="line">      var clsValue = s.attr<span class="list">(<span class="string">"class"</span>)</span><span class="comment">;</span></span><br><span class="line">      if <span class="list">(<span class="keyword">clsValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">        s.attr<span class="list">(<span class="string">"class"</span>, clsValue.replace<span class="list">(<span class="string">"placeholderfriend"</span>, <span class="string">""</span>)</span>)</span><span class="comment">;</span></span><br><span class="line">      &#125;</span></span><br><span class="line">    &#125;</span></span><br><span class="line">  &#125;</span></span><br><span class="line"></span><br><span class="line">  //判断是否支持placeholder</span><br><span class="line">  function isPlaceholer<span class="list">()</span> <span class="collection">&#123;</span><br><span class="line">    var input = document.createElement<span class="list">(<span class="keyword">'input'</span>)</span><span class="comment">;</span></span><br><span class="line">    return <span class="string">"placeholder"</span> in input;</span><br><span class="line">  &#125;</span></span><br><span class="line">  //不支持的代码</span><br><span class="line">  if <span class="list">(<span class="keyword">!isPlaceholer</span><span class="list">()</span>)</span> <span class="collection">&#123;</span><br><span class="line">    $<span class="list">(<span class="keyword">function</span><span class="list">()</span> <span class="collection">&#123;</span><br><span class="line"></span><br><span class="line">      var form = $<span class="list">(<span class="keyword">this</span>)</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">      //遍历所有文本框，添加placeholder模拟事件</span><br><span class="line">      var elements = form.find<span class="list">(<span class="string">"input[type='text'][placeholder]"</span>)</span><span class="comment">;</span></span><br><span class="line">      elements.each<span class="list">(<span class="keyword">function</span><span class="list">()</span> <span class="collection">&#123;</span><br><span class="line">        var s = $<span class="list">(<span class="keyword">this</span>)</span><span class="comment">;</span></span><br><span class="line">        var pValue = s.attr<span class="list">(<span class="string">"placeholder"</span>)</span><span class="comment">;</span></span><br><span class="line">        var sValue = s.val<span class="list">()</span><span class="comment">;</span></span><br><span class="line">        if <span class="list">(<span class="keyword">pValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">          if <span class="list">(<span class="keyword">sValue</span> == '')</span> <span class="collection">&#123;</span><br><span class="line">            s.val<span class="list">(<span class="keyword">pValue</span>)</span><span class="comment">;</span></span><br><span class="line">          &#125;</span></span><br><span class="line">        &#125;</span></span><br><span class="line">      &#125;</span>)</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">      elements.focus<span class="list">(<span class="keyword">function</span><span class="list">()</span> <span class="collection">&#123;</span><br><span class="line">        var s = $<span class="list">(<span class="keyword">this</span>)</span><span class="comment">;</span></span><br><span class="line">        var pValue = s.attr<span class="list">(<span class="string">"placeholder"</span>)</span><span class="comment">;</span></span><br><span class="line">        var sValue = s.val<span class="list">()</span><span class="comment">;</span></span><br><span class="line">        if <span class="list">(<span class="keyword">sValue</span> &amp;&amp; pValue)</span> <span class="collection">&#123;</span><br><span class="line">          if <span class="list">(<span class="keyword">sValue</span> == pValue)</span> <span class="collection">&#123;</span><br><span class="line">            s.val<span class="list">(<span class="keyword">''</span>)</span><span class="comment">;</span></span><br><span class="line">          &#125;</span></span><br><span class="line">        &#125;</span></span><br><span class="line">      &#125;</span>)</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">      elements.blur<span class="list">(<span class="keyword">function</span><span class="list">()</span> <span class="collection">&#123;</span><br><span class="line">        var s = $<span class="list">(<span class="keyword">this</span>)</span><span class="comment">;</span></span><br><span class="line">        var pValue = s.attr<span class="list">(<span class="string">"placeholder"</span>)</span><span class="comment">;</span></span><br><span class="line">        var sValue = s.val<span class="list">()</span><span class="comment">;</span></span><br><span class="line">        if <span class="list">(<span class="keyword">!sValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">          s.val<span class="list">(<span class="keyword">pValue</span>)</span><span class="comment">;</span></span><br><span class="line">        &#125;</span></span><br><span class="line">      &#125;</span>)</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">      //遍历所有密码框，添加placeholder模拟事件</span><br><span class="line">      var elementsPass = form.find<span class="list">(<span class="string">"input[type='password'][placeholder]"</span>)</span><span class="comment">;</span></span><br><span class="line">      elementsPass.each<span class="list">(<span class="keyword">function</span><span class="list">(<span class="keyword">i</span>)</span> <span class="collection">&#123;</span><br><span class="line">        var s = $<span class="list">(<span class="keyword">this</span>)</span><span class="comment">;</span></span><br><span class="line">        var pValue = s.attr<span class="list">(<span class="string">"placeholder"</span>)</span><span class="comment">;</span></span><br><span class="line">        var sValue = s.val<span class="list">()</span><span class="comment">;</span></span><br><span class="line">        if <span class="list">(<span class="keyword">pValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">          if <span class="list">(<span class="keyword">sValue</span> == '')</span> <span class="collection">&#123;</span><br><span class="line">            //DOM不支持type的修改，需要复制密码框属性，生成新的DOM</span><br><span class="line">            var html = this.outerHTML || <span class="string">""</span><span class="comment">;</span></span><br><span class="line">            html = html.replace<span class="list">(/\s*type=<span class="list">(<span class="collection">['<span class="string">"])?password\1/gi, "</span> type=text placeholderfriend<span class="string">")</span><br><span class="line">              .replace(/\s*(?:value|on[a-z]+|name)(=(['"</span>]</span>)</span>?\S*\<span class="number">1</span>)</span>?/gi, <span class="string">" "</span>)</span><br><span class="line">              .replace<span class="list">(/\s*placeholderfriend/, <span class="string">" placeholderfriend value='"</span> + pValue</span><br><span class="line">              + <span class="string">"' "</span> + <span class="string">"onfocus='placeholderfriendfocus(this);' "</span>)</span><span class="comment">;</span></span><br><span class="line">            var idValue = s.attr<span class="list">(<span class="string">"id"</span>)</span><span class="comment">;</span></span><br><span class="line">            if <span class="list">(<span class="keyword">idValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">              s.attr<span class="list">(<span class="string">"id"</span>, idValue + <span class="string">"placeholderfriend"</span>)</span><span class="comment">;</span></span><br><span class="line">            &#125;</span></span><br><span class="line">            var clsValue = s.attr<span class="list">(<span class="string">"class"</span>)</span><span class="comment">;</span></span><br><span class="line">            if <span class="list">(<span class="keyword">clsValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">              s.attr<span class="list">(<span class="string">"class"</span>, clsValue + <span class="string">"placeholderfriend"</span>)</span><span class="comment">;</span></span><br><span class="line">            &#125;</span></span><br><span class="line">            s.hide<span class="list">()</span><span class="comment">;</span></span><br><span class="line">            s.after<span class="list">(<span class="keyword">html</span>)</span><span class="comment">;</span></span><br><span class="line">          &#125;</span></span><br><span class="line">        &#125;</span></span><br><span class="line">      &#125;</span>)</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">      elementsPass.blur<span class="list">(<span class="keyword">function</span><span class="list">()</span> <span class="collection">&#123;</span><br><span class="line">        var s = $<span class="list">(<span class="keyword">this</span>)</span><span class="comment">;</span></span><br><span class="line">        var sValue = s.val<span class="list">()</span><span class="comment">;</span></span><br><span class="line">        if <span class="list">(<span class="keyword">sValue</span> == '')</span> <span class="collection">&#123;</span><br><span class="line">          var idValue = s.attr<span class="list">(<span class="string">"id"</span>)</span><span class="comment">;</span></span><br><span class="line">          if <span class="list">(<span class="keyword">idValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">            s.attr<span class="list">(<span class="string">"id"</span>, idValue + <span class="string">"placeholderfriend"</span>)</span><span class="comment">;</span></span><br><span class="line">          &#125;</span></span><br><span class="line">          var clsValue = s.attr<span class="list">(<span class="string">"class"</span>)</span><span class="comment">;</span></span><br><span class="line">          if <span class="list">(<span class="keyword">clsValue</span>)</span> <span class="collection">&#123;</span><br><span class="line">            s.attr<span class="list">(<span class="string">"class"</span>, clsValue + <span class="string">"placeholderfriend"</span>)</span><span class="comment">;</span></span><br><span class="line">          &#125;</span></span><br><span class="line">          s.hide<span class="list">()</span>.next<span class="list">()</span>.show<span class="list">()</span><span class="comment">;</span></span><br><span class="line">        &#125;</span></span><br><span class="line">      &#125;</span>)</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span>)</span><span class="comment">;</span></span><br><span class="line">  &#125;</span></span><br><span class="line">  window.placeholderfriendfocus = placeholderfriend.focus;</span><br><span class="line">&#125;</span>)</span><span class="list">(<span class="keyword">jQuery</span>)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>我最终选择这段代码,他能够在ie的各版本中正常运行,支持<code>text</code>和<code>password</code>标签.<br>唯一的不足是,你直接点提交,你的text里面会有内容,内容就是placeholder中设置的提示内容.</p>
<h1 id="4_background-size在ie9一下不支持">4  background-size在ie9一下不支持</h1><p>background-size属性是用来让背景图片平铺的.不过ie9一下并不支持这个属性,我们使用滤镜来实现平铺的效果,示例代码如下.<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">background-size</span>:<span class="value"> cover</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">filter</span>:<span class="value">progid:DXImageTransform.Microsoft.<span class="function">AlphaImageLoader</span>(src=<span class="string">'./assets/images/01.png'</span>, sizingMethod=<span class="string">'scale'</span>)\<span class="number">9</span></span></span>;</span><br></pre></td></tr></table></figure></p>
<p>需要注意的是,这里的图片路径是相对于html文件的,不是css的路径,如果设置了没效果,先检查下你的路径.</p>
<h1 id="5_input输入框_光标不居中">5  input输入框 光标不居中</h1><p>这个问题来自于魅族手机,还有老大难的ie6-8的测试中.<br>解决方法是设置<code>height</code>和<code>line-height</code>等高,没那么简单,这里有技巧的<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">line-height</span>:<span class="value"> normal</span></span>;<span class="comment">/*这行代码解决了魅族手机中的不居中问题*/</span></span><br><span class="line"><span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">42px</span>\<span class="number">9</span></span></span>;<span class="comment">/*这行css代码的含义是ie9以下设置line-height为42px*/</span></span><br></pre></td></tr></table></figure></p>
<h1 id="6_opacity的继承问题">6  opacity的继承问题</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id='a' style=""&gt;</span><br><span class="line">    &lt;div id='b'&gt;</span><br><span class="line">    hello moto</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>如果我们给父div设置了一个<code>opacity</code>为0.1,即使我们给子div设置<code>opacity</code>为1,也是不管用的,如图<br><img src="http://ww1.sinaimg.cn/large/692869a3gw1es5fm0jafhj20iv0ecq46.jpg" alt="未设置父div的opacity之前"><br>设置父div的<code>opacity</code>之后<br><img src="http://ww4.sinaimg.cn/large/692869a3gw1es5fnsk3pvj20hy0fdwfm.jpg" alt="设置父div的opacity之后"><br>我们可以清楚看到子div受到了影响.<br>解决办法:解除父子关系,把子div从父div中挪出来</p>
<h1 id="7_border-radius在ie9以下不支持">7  border-radius在ie9以下不支持</h1><p>输入框等其他地方用到圆角的话,在老版本ie中果断是没有支持的.<br>我们需要用hack的方式<a href="http://css3pie.com/" target="_blank" rel="external">pie</a>,去实现border-radius和box-shadow等功能.加入pie以后的css代码如下:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">-moz-border-radius</span>:<span class="value"> <span class="number">6px</span></span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">-webkit-border-radius</span>:<span class="value"> <span class="number">6px</span></span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">6px</span></span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">behavior</span>:<span class="value"> <span class="function">url</span>(assets/css/pie.htc)</span></span>;<span class="comment">/*这一行是核心*/</span></span><br></pre></td></tr></table></figure></p>
<p>缺点:设置的border-radius四角的设置值都是相同的</p>
<h1 id="8_css递进关系">8 css递进关系</h1><p>挖坑,以后填</p>
<p>ps:晚安,亲爱的</p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://www.cnblogs.com/yuzhongwusan/p/4184923.html" target="_blank" rel="external">meta name=”viewport” content=”width=device-width,initial-scale=1.0” 解释</a><br>2 <a href="http://css3pie.com/" target="_blank" rel="external">pie用hack方式在ie中实现border-radius</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这段时间,笨笨找了个活儿,做一个页面,能够适配所有的主流浏览器,包括pc,平板和手机等终端(这和当年某刘提的要求一样啊).<br>我第一个想到的是bootstrap,可惜这货太大了,我只是几个简单的页面,没必要用这么大体量的东西.<br>搜索一番以后,我找到了我的解决方案,media query,支付宝也是这么解决的.<br>]]>
    
    </summary>
    
      <category term="css" scheme="http://jackroyal.github.io/tags/css/"/>
    
      <category term="html5" scheme="http://jackroyal.github.io/tags/html5/"/>
    
      <category term="ie" scheme="http://jackroyal.github.io/tags/ie/"/>
    
      <category term="兼容性" scheme="http://jackroyal.github.io/tags/%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    
      <category term="前端" scheme="http://jackroyal.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="前端" scheme="http://jackroyal.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[win8中使用vs2010配置opencv]]></title>
    <link href="http://jackroyal.github.io/2015/05/15/opencv-and-vs2010-in-win8/"/>
    <id>http://jackroyal.github.io/2015/05/15/opencv-and-vs2010-in-win8/</id>
    <published>2015-05-15T11:56:06.000Z</published>
    <updated>2015-05-15T15:16:43.525Z</updated>
    <content type="html"><![CDATA[<p>今天在师兄的帮助下,总算配置好了opencv.</p>
<h1 id="1_系统环境和软件版本">1 系统环境和软件版本</h1><p>操作系统:win8 64位<br>vs版本:vs2010 32位<br>opencv版本:opencv 2.4.10<br><a id="more"></a></p>
<h1 id="2_配置opencv">2 配置opencv</h1><p>安装vs比较简单,这里不再赘述.<br>现在说下配置opencv.<br>网上有很多相关的配置,都是设置环境变量,然后添加库目录,包含目录,blablabla.<br>这样做的坏处是,每次我新建一个项目,都要重复以上操作,这样岂不是很蛋疼.<br>如果你移植你的程序给别人,别人也还要去配置这些东西才能够运行,是不是很不方便?<br>所以,师兄教给我简单粗暴的办法,直接把相关文件手动复制到vs的目录下,这样就没这么多事了.<br><strong>缺点:每次都需要手动设置你所需要调用的lib文件</strong></p>
<h2 id="解压opencv到某个目录">解压opencv到某个目录</h2><p>这个很简单,双击那个exe,选择一个目录,就会把opencv的文件解压到你设定的那个目录.<br>我将它解压到<code>D:/opencv</code>下.</p>
<h2 id="复制include文件夹">复制include文件夹</h2><p>复制<code>D:\opencv\build\include</code>目录下的<code>opencv</code>和<code>opencv2</code><br>到<code>C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\include</code>.<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1es5atg7oimj20kw081ta4.jpg" alt="opencv解压后的include目录"><br><img src="http://ww2.sinaimg.cn/large/692869a3gw1es5az6qsa7j20jc099jtf.jpg" alt="复制以后的效果截图"></p>
<h2 id="复制lib文件夹">复制lib文件夹</h2><p>同理,复制lib文件夹<br>从<code>D:\opencv\build\x86\vc10\lib</code>复制到<code>C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\lib</code><br>如果你的程序是win32就选择x86,如果你写的程序是64位的,就复制x64的程序</p>
<h2 id="复制bin文件夹">复制bin文件夹</h2><p>复制bin目录下的东西,我们只需要系统找得到就行,所以我们这里采用环境变量的搞法</p>
<p>我们修改path变量,在后面添加<code>;d:\opencv\build\x86\vc10\bin</code>,效果如图所示<br><br><img src="http://ww2.sinaimg.cn/large/692869a3gw1es5bew5vcjj20e10g4go8.jpg" alt="修改path变量,添加opencv的bin目录路径"></p>
<h1 id="3_写代码调试">3 写代码调试</h1><p>代码如下:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#include &#60;opencv2/opencv.hpp&#62;&#10;#include &#60;iostream&#62;&#10;#include &#60;string&#62;&#10;#ifdef _DEBUG&#10;#pragma comment(lib,&#34;opencv_core2410d.lib&#34;)&#10;#pragma comment(lib,&#34;opencv_highgui2410d.lib&#34;)&#10;#else&#10;#pragma comment(lib,&#34;opencv_core2410.lib&#34;)&#10;#pragma comment(lib,&#34;opencv_highgui2410.lib&#34;)&#10;#endif&#10;using namespace cv;&#10;using namespace std;&#10;int main()&#10;&#123;&#10;    Mat img = imread(&#34;ie8-2.png&#34;);&#10;    if(img.empty())&#10;    &#123;&#10;        cout&#60;&#60;&#34;error&#34;;&#10;        return -1;&#10;   &#125;&#10;   imshow(&#34;xx&#30340;&#38739;&#29031;&#34;,img);&#10;   waitKey();&#10;&#125;</span><br></pre></td></tr></table></figure></p>
<p>注意一下这段宏设置<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#ifdef</span> _DEBUG</span><br><span class="line"><span class="id">#pragma</span> <span class="function"><span class="title">comment</span><span class="params">(lib,<span class="string">"opencv_core2410d.lib"</span>)</span></span></span><br><span class="line"><span class="id">#pragma</span> <span class="function"><span class="title">comment</span><span class="params">(lib,<span class="string">"opencv_highgui2410d.lib"</span>)</span></span></span><br><span class="line"><span class="id">#else</span></span><br><span class="line"><span class="id">#pragma</span> <span class="function"><span class="title">comment</span><span class="params">(lib,<span class="string">"opencv_core2410.lib"</span>)</span></span></span><br><span class="line"><span class="id">#pragma</span> <span class="function"><span class="title">comment</span><span class="params">(lib,<span class="string">"opencv_highgui2410.lib"</span>)</span></span></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure></p>
<p>debug和release,分别调用对应的lib<br>如果你当前是debug模式<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#pragma</span> <span class="function"><span class="title">comment</span><span class="params">(lib,<span class="string">"opencv_core2410d.lib"</span>)</span></span></span><br><span class="line"><span class="id">#pragma</span> <span class="function"><span class="title">comment</span><span class="params">(lib,<span class="string">"opencv_highgui2410d.lib"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>这段代码是必须要的,以后调用相应的lib文件,我们都要手动在头部加入这句话才行<br>否则,你会看到下面这堆东西<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>&gt;  test.cpp</span><br><span class="line"><span class="number">1</span>&gt;ManifestResourceCompile:</span><br><span class="line"><span class="number">1</span>&gt;  所有输出均为最新。</span><br><span class="line"><span class="number">1</span>&gt;test.obj : <span class="keyword">error</span> LNK2019: 无法解析的外部符号 <span class="string">"int __cdecl cv::waitKey(int)"</span> (?waitKey<span class="variable">@cv</span><span class="variable">@@</span>YAHH<span class="variable">@Z</span>)，该符号在函数 _main 中被引用</span><br><span class="line"><span class="number">1</span>&gt;test.obj : <span class="keyword">error</span> LNK2019: 无法解析的外部符号 <span class="string">"void __cdecl cv::imshow(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class cv::_InputArray const &amp;)"</span> (?imshow<span class="variable">@cv</span><span class="variable">@@</span>YAXABV?<span class="variable">$basic_string</span><span class="variable">@DU</span>?<span class="variable">$char_traits</span><span class="variable">@D</span><span class="variable">@std</span><span class="variable">@@</span>V?<span class="variable">$allocator</span><span class="variable">@D</span><span class="variable">@2</span><span class="variable">@@</span>std<span class="variable">@@</span>ABV_InputArray<span class="variable">@1</span><span class="variable">@@</span>Z)，该符号在函数 _main 中被引用</span><br><span class="line"><span class="number">1</span>&gt;test.obj : <span class="keyword">error</span> LNK2019: 无法解析的外部符号 <span class="string">"public: __thiscall cv::_InputArray::_InputArray(class cv::Mat const &amp;)"</span> (??<span class="number">0</span>_InputArray<span class="variable">@cv</span><span class="variable">@@</span>QAE<span class="variable">@ABVMat</span><span class="variable">@1</span><span class="variable">@@</span>Z)，该符号在函数 _main 中被引用</span><br><span class="line"><span class="number">1</span>&gt;test.obj : <span class="keyword">error</span> LNK2019: 无法解析的外部符号 <span class="string">"class cv::Mat __cdecl cv::imread(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,int)"</span> (?imread<span class="variable">@cv</span><span class="variable">@@</span>YA?AVMat<span class="variable">@1</span><span class="variable">@ABV</span>?<span class="variable">$basic_string</span><span class="variable">@DU</span>?<span class="variable">$char_traits</span><span class="variable">@D</span><span class="variable">@std</span><span class="variable">@@</span>V?<span class="variable">$allocator</span><span class="variable">@D</span><span class="variable">@2</span><span class="variable">@@</span>std<span class="variable">@@</span>H<span class="variable">@Z</span>)，该符号在函数 _main 中被引用</span><br><span class="line"><span class="number">1</span>&gt;test.obj : <span class="keyword">error</span> LNK2019: 无法解析的外部符号 <span class="string">"void __cdecl cv::fastFree(void *)"</span> (?fastFree<span class="variable">@cv</span><span class="variable">@@</span>YAXPAX<span class="variable">@Z</span>)，该符号在函数 <span class="string">"public: __thiscall cv::Mat::~Mat(void)"</span> (??<span class="number">1</span>Mat<span class="variable">@cv</span><span class="variable">@@</span>QAE<span class="variable">@XZ</span>) 中被引用</span><br><span class="line"><span class="number">1</span>&gt;test.obj : <span class="keyword">error</span> LNK2019: 无法解析的外部符号 <span class="string">"public: void __thiscall cv::Mat::deallocate(void)"</span> (?deallocate<span class="variable">@Mat</span><span class="variable">@cv</span><span class="variable">@@</span>QAEXXZ)，该符号在函数 <span class="string">"public: void __thiscall cv::Mat::release(void)"</span> (?release<span class="variable">@Mat</span><span class="variable">@cv</span><span class="variable">@@</span>QAEXXZ) 中被引用</span><br><span class="line"><span class="number">1</span>&gt;test.obj : <span class="keyword">error</span> LNK2019: 无法解析的外部符号 <span class="string">"int __cdecl cv::_interlockedExchangeAdd(int *,int)"</span> (?_interlockedExchangeAdd<span class="variable">@cv</span><span class="variable">@@</span>YAHPAHH<span class="variable">@Z</span>)，该符号在函数 <span class="string">"public: void __thiscall cv::Mat::release(void)"</span> (?release<span class="variable">@Mat</span><span class="variable">@cv</span><span class="variable">@@</span>QAEXXZ) 中被引用</span><br><span class="line"><span class="number">1</span>&gt;C:\Users\chenhao\documents\visual studio <span class="number">2010</span>\Projects\b\Debug\b.exe : fatal <span class="keyword">error</span> LNK1120: <span class="number">7</span> 个无法解析的外部命令</span><br><span class="line"><span class="number">1</span>&gt;</span><br><span class="line"><span class="number">1</span>&gt;生成失败。</span><br><span class="line"><span class="number">1</span>&gt;</span><br><span class="line"><span class="number">1</span>&gt;已用时间 <span class="number">00</span>:<span class="number">00</span>:<span class="number">03.71</span></span><br><span class="line">========== 生成: 成功 <span class="number">0</span> 个，失败 <span class="number">1</span> 个，最新 <span class="number">0</span> 个，跳过 <span class="number">0</span> 个 ==========</span><br></pre></td></tr></table></figure></p>
<p>ok,打完收工!</p>
<p>ps:上述操作完,应该就好了.我还遇到一个奇葩问题<br>编译和生成解决方案没有问题，但是开始执行就出现应用程序无法正常启动 0xc000007b错误窗口<br>最后,原来是权限问题,使用管理员权限打开vs就解决了,win7下找兼容性设置,以管理员权限运行<br>我的win8没有找到兼容性设置,如图所示操作,每次都能以管理员权限打开vs<br><img src="http://ww4.sinaimg.cn/large/692869a3gw1es5bpz7mkqj20mm0giq7k.jpg" alt="win8使用管理员权限运行vs2010"></p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://www.cnblogs.com/freedomshe/archive/2012/04/25/2470540.html" target="_blank" rel="external">VS2010+Opencv-2.4.0的配置攻略</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天在师兄的帮助下,总算配置好了opencv.</p>
<h1 id="1_系统环境和软件版本">1 系统环境和软件版本</h1><p>操作系统:win8 64位<br>vs版本:vs2010 32位<br>opencv版本:opencv 2.4.10<br>]]>
    
    </summary>
    
      <category term="opencv" scheme="http://jackroyal.github.io/tags/opencv/"/>
    
      <category term="vs2010" scheme="http://jackroyal.github.io/tags/vs2010/"/>
    
      <category term="win8" scheme="http://jackroyal.github.io/tags/win8/"/>
    
      <category term="软件安装与技巧" scheme="http://jackroyal.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E6%8A%80%E5%B7%A7/"/>
    
      <category term="软件安装与技巧" scheme="http://jackroyal.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[opencv中LBPH的人脸识别代码分析]]></title>
    <link href="http://jackroyal.github.io/2015/05/06/opencv-lbph-source-code-analysis/"/>
    <id>http://jackroyal.github.io/2015/05/06/opencv-lbph-source-code-analysis/</id>
    <published>2015-05-06T14:32:42.000Z</published>
    <updated>2015-05-06T14:45:31.308Z</updated>
    <content type="html"><![CDATA[<p>我开始用opencv的时候，用的是opencv最新的3.0版本。不过我死活找不到LBPH的代码，网上的教程也都是opencv 2.4的，so  我也去下一份2.4的源码来读读。<br>opencv目前支持一下三种方法来实现人脸识别：</p>
<ul>
<li><strong>Eigenfaces特征脸createEigenFaceRecognizer()</strong></li>
<li><strong>Fisherfaces createFisherFaceRecognizer()</strong></li>
<li><strong>Local Binary Patterns Histograms局部二值直方图 createLBPHFaceRecognizer()</strong></li>
</ul>
<p>我今天读了一下LBPH的代码。<br>自动人脸识别就是如何从一幅图像中提取有意义的特征，把它们放入一种有用的表示方式，然后对他们进行一些分类。<br>特征脸方法描述了一个全面的方法来识别人脸：面部图像是一个点，这个点是从高维图像空间找到它在低维空间的表示，这样分类变得很简单。低维子空间低维是使用主元分析(Principal Component Analysis,PCA)找到的，它可以找拥有最大方差的那个轴。虽然这样的转换是从最佳重建角度考虑的，但是他没有把标签问题考虑进去。想象一个情况，如果变化是基于外部来源，比如光照。轴的最大方差不一定包含任何有鉴别性的信息，因此此时的分类是不可能的。因此，一个使用线性鉴别(Linear Discriminant Analysis,LDA)的特定类投影方法被提出来解决人脸识别问题。其中一个基本的想法就是，使类内方差最小的同时，使类外方差最大。<br>近年来，各种局部特征提取方法出现。为了避免输入的图像的高维数据，仅仅使用的局部特征描述图像的方法被提出，提取的特征(很有希望的)对于局部遮挡、光照变化、小样本等情况更强健。有关局部特征提取的方法有盖伯小波(Gabor Waelets)，离散傅立叶变换(Discrete Cosinus Transform,DCT)，局部二值模式(Local Binary Patterns,LBP)。使用什么方法来提取时域空间的局部特征依旧是一个开放性的研究问题，因为空间信息是潜在有用的信息。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我开始用opencv的时候，用的是opencv最新的3.0版本。不过我死活找不到LBPH的代码，网上的教程也都是opencv 2.4的，so  我也去下一份2.4的源码来读读。<br>opencv目前支持一下三种方法来实现人脸识别：</p>
<ul>
<li><strong]]>
    </summary>
    
      <category term="lbph" scheme="http://jackroyal.github.io/tags/lbph/"/>
    
      <category term="opencv" scheme="http://jackroyal.github.io/tags/opencv/"/>
    
      <category term="图像处理" scheme="http://jackroyal.github.io/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="图像处理" scheme="http://jackroyal.github.io/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu 14.04 安装denyhosts]]></title>
    <link href="http://jackroyal.github.io/2015/04/28/ubuntu-denyhosts/"/>
    <id>http://jackroyal.github.io/2015/04/28/ubuntu-denyhosts/</id>
    <published>2015-04-28T12:19:23.000Z</published>
    <updated>2015-05-06T14:25:45.683Z</updated>
    <content type="html"><![CDATA[<h1 id="起因">起因</h1><p>因为之前服务器两次被黑，妈蛋。今天在上google+的时候，无意中看到一个维护vps的帖子，就顺手把我的服务器维护下。<br>之前被黑经历也很简单，因为方便管理的缘故，我给root用户设置了密码，没错，是弱口令，一扫不要一分钟就可以出来的那种。<br>我在那篇帖子中看到denyhosts这货。东西很简单，分析你的日志，如果有人连续登陆几次密码都错误，那么把他的ip添加到denyhost当中，禁止它继续扫描。这货还很多功能，可以设置禁止时间以后，自动解禁；可以配置自动解禁的次数;还可以配置用户密码尝试的次数，给管理员发邮件等。<br><a id="more"></a></p>
<h1 id="安装">安装</h1><h2 id="1、下载源码包,解压源码包">1、下载源码包,解压源码包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://sourceforge.net/projects/denyhosts/files/denyhosts/<span class="number">2.6</span>/DenyHosts-<span class="number">2.6</span>.tar.gz</span><br><span class="line">tar zxvf DenyHosts-<span class="number">2.6</span>.tar.gz</span><br><span class="line">cd DenyHosts-<span class="number">2.6</span></span><br></pre></td></tr></table></figure>
<h2 id="2、安装部署">2、安装部署</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python setup.py install</span><br><span class="line">cd /usr/share/denyhosts/</span><br><span class="line">cp denyhosts.cfg-dist denyhosts.cfg</span><br><span class="line">cp daemon-control-dist daemon-control</span><br></pre></td></tr></table></figure>
<h2 id="3、编辑配置文件denyhosts-cfg">3、编辑配置文件denyhosts.cfg</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi denyhosts.cfg</span><br></pre></td></tr></table></figure>
<p>几个常见的参数如下所示：<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PURGE_DENY：当一个<span class="literal">IP</span>被阻止以后，过多长时间被自动解禁。可选如3m（三分钟）、<span class="number">5h</span>（<span class="number">5</span>小时）、<span class="number">2d</span>（两天）、8w（<span class="number">8</span>周）、<span class="number">1y</span>（一年）；</span><br><span class="line">PURGE_THRESHOLD：定义了某一<span class="literal">IP</span>最多被解封多少次。即某一<span class="literal">IP</span>由于暴力破解SSH密码被阻止/解封达到了PURGE_THRESHOLD次，则会被永久禁止；</span><br><span class="line">BLOCK_SERVICE：需要阻止的服务名；</span><br><span class="line">DENY_THRESHOLD_INVALID：某一无效用户名（不存在的用户）尝试多少次登录后被阻止；</span><br><span class="line">DENY_THRESHOLD_VALID：某一有效用户名尝试多少次登陆后被阻止（比如账号正确但密码错误），root除外；</span><br><span class="line">DENY_THRESHOLD_ROOT：root用户尝试登录多少次后被阻止；</span><br><span class="line">HOSTNAME_LOOKUP：是否尝试解析源<span class="literal">IP</span>的域名；</span><br></pre></td></tr></table></figure></p>
<p>一般我们就用默认就好，我们只需要改两个地方：</p>
<h3 id="第一个，我们注释掉第12行，启用第15行，修改以后结果如下(原因是ubuntu中的log不在/var/log/secure中，而是在/var/log/auth-log中)">第一个，我们注释掉第12行，启用第15行，修改以后结果如下(原因是ubuntu中的log不在/var/log/secure中，而是在/var/log/auth.log中)</h3><p><img src="http://ww3.sinaimg.cn/large/692869a3gw1erll3zp3xpj20id0b5q63.jpg" alt="修改后的denyhosts.cfg"></p>
<h3 id="第二个，我们启用第64行，也就是设置，ip被禁止后，禁止5天，这个时间你可以自行设置">第二个，我们启用第64行，也就是设置，ip被禁止后，禁止5天，这个时间你可以自行设置</h3><p>去掉前面的<code>#</code>,就行了，修改后结果如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">63</span> <span class="comment"># purge entries older than 5 days</span></span><br><span class="line"><span class="number">64</span> PURGE_DENY = <span class="number">5</span>d</span><br><span class="line"><span class="number">65</span> <span class="comment">#######################################################################</span></span><br><span class="line"><span class="number">66</span></span><br></pre></td></tr></table></figure></p>
<h2 id="4、编辑配置文件daemon-control">4、编辑配置文件daemon-control</h2><p>因为在ubuntu系统中，有些文件不在预设的位置，所以我们需要编辑这个文件<br>我们只需要改第14行就好了，修改<code>/usr/bin/denyhosts.py</code>为<code>/usr/local/bin/denyhosts.py</code>，修改后结果如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">13</span> </span><br><span class="line"><span class="number">14</span> DENYHOSTS_BIN   = <span class="string">"/usr/local/bin/denyhosts.py"</span></span><br><span class="line"><span class="number">15</span> DENYHOSTS_LOCK  = <span class="string">"/var/lock/subsys/denyhosts"</span></span><br><span class="line"><span class="number">16</span> DENYHOSTS_CFG   = <span class="string">"/usr/share/denyhosts/denyhosts.cfg"</span></span><br><span class="line"><span class="number">17</span> </span><br><span class="line"><span class="number">18</span> PYTHON_BIN      = <span class="string">"/usr/bin/env python"</span></span><br><span class="line"><span class="number">19</span></span><br></pre></td></tr></table></figure></p>
<h2 id="5、运行">5、运行</h2><p>运行，额，错误一堆啊，我们执行<code>sudo ./daemon-control start</code>,然后得到如下错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">starting DenyHosts:    /usr/bin/env python /usr/<span class="built_in">local</span>/bin/denyhosts.py --daemon --config=/usr/share/denyhosts/denyhosts.cfg</span><br><span class="line">DenyHosts could not obtain lock (pid: )</span><br><span class="line">[Errno <span class="number">2</span>] No such file or directory: <span class="string">'/var/lock/subsys/denyhosts'</span></span><br></pre></td></tr></table></figure></p>
<p>我们可以去<code>/var/lock</code>下面的确看不到subsys这个文件夹，那我们就手动创建他<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/lock/subsys</span><br></pre></td></tr></table></figure></p>
<p>继续执行<code>sudo ./daemon-control start</code>，应该就会成功<br>ps：如果还不成功，他缺什么文件我们就用<code>touch</code>新建这个文件，如果说<code>file exists</code>,我们就删除那个文件</p>
<h2 id="6、添加到开机启动">6、添加到开机启动</h2><p>第一种是将DenyHosts作为类似apache、mysql一样的服务，这种方法可以通过 /etc/init.d/denyhosts 命令来控制其状态。方法如下：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /etc/init.<span class="literal">d</span></span><br><span class="line">ln -s /usr/share/denyhosts/daemon-control denyhosts</span><br><span class="line">#上面的操作就把他变成了一个服务 我们可以使用service denyhosts start来启动服务</span><br><span class="line">#下面把他添加到开机自启动，我们这里需要安装一个软件来实现</span><br><span class="line">#ubuntu中没有chkconfig命令，网上的教程是用的chkconfig，具体操作查看后面的参考文献1，ubuntu中对应的是<span class="keyword">update</span>-rc.<span class="keyword">d</span>，但是不好用，所以我用sysv-rc-<span class="keyword">conf</span> </span><br><span class="line">sudo apt-get install sysv-rc-<span class="keyword">conf</span></span><br><span class="line">sudo sysv-rc-<span class="keyword">conf</span></span><br></pre></td></tr></table></figure></p>
<p>我们设置运行级别2345，编辑以后如下所示<br><img src="http://ww2.sinaimg.cn/large/692869a3gw1erlmrt5ht5j20j80m40zg.jpg" alt="设置denyhosts开机自启动"><br>按<code>q</code>，退出并保存</p>
<p>第二种是将Denyhosts直接加入rc.local中自动启动（类似于Windows中的“启动文件夹”）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'/usr/share/denyhosts/daemon-control start'</span> &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure></p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://www.bootf.com/571.html" target="_blank" rel="external">通过DenyHosts阻止SSH暴力攻击教程</a></p>
<p>2 <a href="http://askubuntu.com/questions/534324/var-log-secure-not-present-in-14-04-is-there-any-alternative" target="_blank" rel="external">/var/log/secure not present in 14.04 ,is there any alternative?</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="起因">起因</h1><p>因为之前服务器两次被黑，妈蛋。今天在上google+的时候，无意中看到一个维护vps的帖子，就顺手把我的服务器维护下。<br>之前被黑经历也很简单，因为方便管理的缘故，我给root用户设置了密码，没错，是弱口令，一扫不要一分钟就可以出来的那种。<br>我在那篇帖子中看到denyhosts这货。东西很简单，分析你的日志，如果有人连续登陆几次密码都错误，那么把他的ip添加到denyhost当中，禁止它继续扫描。这货还很多功能，可以设置禁止时间以后，自动解禁；可以配置自动解禁的次数;还可以配置用户密码尝试的次数，给管理员发邮件等。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://jackroyal.github.io/tags/Linux/"/>
    
      <category term="ubuntu" scheme="http://jackroyal.github.io/tags/ubuntu/"/>
    
      <category term="Linux" scheme="http://jackroyal.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu下使用scrapy抓取cnblogs]]></title>
    <link href="http://jackroyal.github.io/2015/04/26/ubuntu-scrapy-stackoverflow/"/>
    <id>http://jackroyal.github.io/2015/04/26/ubuntu-scrapy-stackoverflow/</id>
    <published>2015-04-26T08:52:28.000Z</published>
    <updated>2015-05-06T14:25:45.699Z</updated>
    <content type="html"><![CDATA[<p>今天在伯乐在线上看到一篇翻译的博客，讲的是使用scrapy来抓取stackoverflow上的问题，刚好好久没用这个，于是一并捡起来玩一下。<br><a id="more"></a></p>
<h1 id="软件安装">软件安装</h1><p>我的环境是：ubuntu 14.04 lts<br>需要安装相关软件</p>
<h2 id="scrapy">scrapy</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> Scrapy</span><br></pre></td></tr></table></figure>
<h2 id="PyMongo">PyMongo</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> pymongo</span><br></pre></td></tr></table></figure>
<h2 id="Mongodb">Mongodb</h2><p>上面安装的是python使用Mongodb的接口，很显然，我们要安装Mongodb才能使用<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="operator"><span class="keyword">install</span> mongodb-<span class="keyword">server</span></span></span><br></pre></td></tr></table></figure></p>
<p>至此，要使用的软件都已经安装完毕</p>
<h1 id="使用scrapy新建工程">使用scrapy新建工程</h1><p>使用scrapy新建工程很简单，如下所示，我们新建一个stack的项目，他会在你的当前目录新建一个stack文件夹<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject <span class="built_in">stack</span></span><br></pre></td></tr></table></figure></p>
<p>并且会建成如下所示的目录树结构<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chen@chen-P31:~$ tree stack</span><br><span class="line">stack</span><br><span class="line">├── stack</span><br><span class="line">│   ├── __init__<span class="class">.py</span></span><br><span class="line">│   ├── items<span class="class">.py</span></span><br><span class="line">│   ├── pipelines<span class="class">.py</span></span><br><span class="line">│   ├── settings<span class="class">.py</span></span><br><span class="line">│   └── spiders</span><br><span class="line">│       └── __init__<span class="class">.py</span></span><br><span class="line">└── scrapy.cfg</span><br></pre></td></tr></table></figure></p>
<p>接下来，我们修改items.py的内容，这个文件用于定义存储“容器”，用来存储将要抓取的数据。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.item <span class="keyword">import</span> Item,Field</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StackItem</span><span class="params">(Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    title = Field()<span class="comment">#我们添加两个字段，我们等会儿会抓取一个标题和url两个字段</span></span><br><span class="line">    url = Field()</span><br></pre></td></tr></table></figure></p>
<p>接着，还有一个很重要的东西，对，就是我们的蜘蛛，我们在spider目录下，新建一个stack_spider.py文件。顾名思义，这就是我们的蜘蛛。我们需要定义我们爬虫的起点，爬虫的规则等等<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Spider</span><br><span class="line"><span class="keyword">from</span> stack.items <span class="keyword">import</span> StackItem  <span class="comment">#导入我们上面定义的容器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StackSpider</span><span class="params">(Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'stack'</span>   <span class="comment">#定义我们爬虫的名字</span></span><br><span class="line">    allowed_domains = [<span class="string">"cnblogs.com"</span>]   <span class="comment">#规定爬虫爬取的域名</span></span><br><span class="line">    start_urls = [<span class="string">'http://www.cnblogs.com/geqianst/p/'</span>,]   <span class="comment">#爬虫工作的起点</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span><span class="comment">#爬虫用来做数据解析的</span></span><br><span class="line">        questions = response.xpath(<span class="string">'//div[@id="myposts"]//a[@id]'</span>)</span><br><span class="line">        <span class="comment">#xpath选择器，这里的含义是取所有id为myposts的div，在它下面找所有带id的超链接a</span></span><br><span class="line">        <span class="comment">#实际结果是这样的</span></span><br><span class="line">        <span class="comment">#[&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_0" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_1" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_2" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_3" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_4" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_5" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_6" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_7" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_8" hr'&gt;,</span></span><br><span class="line">        <span class="comment">#&lt;Selector xpath='//div[@id="myposts"]//a[@id]' data=u'&lt;a id="PostsList1_rpPosts_TitleUrl_9" hr'&gt;]</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> question <span class="keyword">in</span> questions:</span><br><span class="line">            item = StackItem()</span><br><span class="line">            item[<span class="string">'title'</span>] = question.xpath(</span><br><span class="line">                <span class="string">'text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">'url'</span>] = question.xpath(</span><br><span class="line">                <span class="string">'@href'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">print</span> item</span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure></p>
<h1 id="测试">测试</h1><p>ok，上述工作基本完成，我们来测试一下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl stack</span><br></pre></td></tr></table></figure></p>
<p>还可以这样测试一下，使用shell命令<br><img src="http://ww4.sinaimg.cn/large/692869a3gw1erjvd7qeqdj213z0j9h2h.jpg" alt="用shell测试xpath"><br>妈蛋，我的竟然出错了，输出如下<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">chen@chen-P31:~/<span class="keyword">stack</span>$ scrapy crawl <span class="keyword">stack</span></span><br><span class="line">2015-04-26 16:49:11+0800 [scrapy] INFO: Scrapy 0.24.6 started (bot: <span class="keyword">stack</span>)</span><br><span class="line">2015-04-26 16:49:11+0800 [scrapy] INFO: Optional features available: ssl, http11</span><br><span class="line">2015-04-26 16:49:11+0800 [scrapy] INFO: Overridden settings: &#123;'NEWSPIDER_MODULE': '<span class="keyword">stack</span>.spiders', 'SPIDER_MODULES': ['<span class="keyword">stack</span>.spiders'], 'BOT_NAME': '<span class="keyword">stack</span>'&#125;</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/bin/scrapy"</span>, <span class="keyword">line</span> 11, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    sys.<span class="keyword">exit</span>(execute())</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/cmdline.py"</span>, <span class="keyword">line</span> 143, <span class="keyword">in</span> execute</span><br><span class="line">    _run_print_help(parser, _run_command, cmd, <span class="keyword">args</span>, opts)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/cmdline.py"</span>, <span class="keyword">line</span> 89, <span class="keyword">in</span> _run_print_help</span><br><span class="line">    func(*a, **kw)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/cmdline.py"</span>, <span class="keyword">line</span> 150, <span class="keyword">in</span> _run_command</span><br><span class="line">    cmd.<span class="keyword">run</span>(<span class="keyword">args</span>, opts)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/commands/crawl.py"</span>, <span class="keyword">line</span> 60, <span class="keyword">in</span> <span class="keyword">run</span></span><br><span class="line">    self.crawler_process.start()</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, <span class="keyword">line</span> 92, <span class="keyword">in</span> start</span><br><span class="line">    <span class="keyword">if</span> self.start_crawling():</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, <span class="keyword">line</span> 124, <span class="keyword">in</span> start_crawling</span><br><span class="line">    <span class="keyword">return</span> self._start_crawler() is not None</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, <span class="keyword">line</span> 139, <span class="keyword">in</span> _start_crawler</span><br><span class="line">    crawler.configure()</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, <span class="keyword">line</span> 46, <span class="keyword">in</span> configure</span><br><span class="line">    self.extensions = ExtensionManager.from_crawler(self)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/middleware.py"</span>, <span class="keyword">line</span> 50, <span class="keyword">in</span> from_crawler</span><br><span class="line">    <span class="keyword">return</span> cls.from_settings(crawler.settings, crawler)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/middleware.py"</span>, <span class="keyword">line</span> 29, <span class="keyword">in</span> from_settings</span><br><span class="line">    mwcls = load_object(clspath)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/utils/misc.py"</span>, <span class="keyword">line</span> 42, <span class="keyword">in</span> load_object</span><br><span class="line">    raise ImportError(<span class="string">"Error loading object '%s': %s"</span> % (path, <span class="keyword">e</span>))</span><br><span class="line">ImportError: <span class="keyword">Error</span> loading object 'scrapy.telnet.TelnetConsole': <span class="keyword">No</span> module named conch</span><br></pre></td></tr></table></figure></p>
<p>这是什么gui？<br>还好我有stackoverflow，google一番，找到解决办法（其实这不是最后的解决办法，请往后看）<br>网上说是twisted的问题，重新安装一下就好了，ok，走起<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">chen<span class="annotation">@chen</span>-<span class="string">P31:</span>~/stack$ sudo apt-get install twisted</span><br><span class="line">Reading <span class="keyword">package</span> lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line"><span class="string">E:</span> Unable to locate <span class="keyword">package</span> twisted</span><br><span class="line">chen<span class="annotation">@chen</span>-<span class="string">P31:</span>~/stack$ sudo apt-get install twisted.conch</span><br><span class="line">Reading <span class="keyword">package</span> lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">Note, selecting <span class="string">'python-twisted-conch'</span> <span class="keyword">for</span> regex <span class="string">'twisted.conch'</span></span><br><span class="line">Note, selecting <span class="string">'python2.7-twisted-conch'</span> <span class="keyword">for</span> regex <span class="string">'twisted.conch'</span></span><br><span class="line">Note, selecting <span class="string">'python-twisted-conch'</span> instead of <span class="string">'python2.7-twisted-conch'</span></span><br><span class="line">The following packages were automatically installed and are no longer <span class="string">required:</span></span><br><span class="line">  cli-common dockmanager freepats gstreamer1.0-plugins-bad-faad</span><br><span class="line">  gstreamer1.0-plugins-bad-videoparsers libbotan-<span class="number">1.10</span>-<span class="number">0</span>:i386 libcdaudio1</span><br><span class="line">  libdbus-glib2.0-cil libdbus2.0-cil libdbusmenu-<span class="string">glib4:</span>i386</span><br><span class="line">  libdbusmenu-<span class="string">gtk4:</span>i386 libegl1-<span class="string">mesa:</span>i386 libegl1-mesa-<span class="string">drivers:</span>i386 libflite1</span><br><span class="line">  libfluidsynth1 <span class="string">libgbm1:</span>i386 libgconf2.0-cil libgdiplus libgif4</span><br><span class="line">  libgles2-<span class="string">mesa:</span>i386 libglib2.0-cil libgme0 <span class="string">libgmp10:</span>i386</span><br><span class="line">  libgnome-desktop-<span class="number">2</span>-<span class="number">17</span> libgnome-keyring1.0-cil libgnomedesktop2.20-cil</span><br><span class="line">  libgstreamer-plugins-bad0.10-<span class="number">0</span> libgstreamer-plugins-bad1.0-<span class="number">0</span> libgtk2.0-cil</span><br><span class="line"><span class="label">  libicu52:</span>i386 libmimic0 libmms0 libmono-addins0.2-cil libmono-cairo4.0-cil</span><br><span class="line">  libmono-corlib4.0-cil libmono-corlib4.5-cil libmono-data-tds4.0-cil</span><br><span class="line">  libmono-i18n-west4.0-cil libmono-i18n4.0-cil libmono-posix4.0-cil</span><br><span class="line">  libmono-security4.0-cil libmono-sharpzip4.84-cil libmono-sqlite4.0-cil</span><br><span class="line">  libmono-system-configuration4.0-cil libmono-system-core4.0-cil</span><br><span class="line">  libmono-system-data4.0-cil libmono-system-drawing4.0-cil</span><br><span class="line">  libmono-system-enterpriseservices4.0-cil</span><br><span class="line">  libmono-system-runtime-serialization-formatters-soap4.0-cil</span><br><span class="line">  libmono-system-security4.0-cil libmono-system-transactions4.0-cil</span><br><span class="line">  libmono-system-web-applicationservices4.0-cil</span><br><span class="line">  libmono-system-web-services4.0-cil libmono-system-web4.0-cil</span><br><span class="line">  libmono-system-xml-linq4.0-cil libmono-system-xml4.0-cil</span><br><span class="line">  libmono-system4.0-cil libmono-web4.0-cil libmpg123-<span class="number">0</span> libnotify0.4-cil</span><br><span class="line">  libofa0 libopenal-data libopenal1 libopenvg1-<span class="string">mesa:</span>i386 <span class="string">libqrencode3:</span>i386</span><br><span class="line"><span class="label">  libqt5core5a:</span>i386 <span class="string">libqt5dbus5:</span>i386 <span class="string">libqt5gui5:</span>i386 <span class="string">libqt5network5:</span>i386</span><br><span class="line"><span class="label">  libqt5widgets5:</span>i386 <span class="string">libqtshadowsocks:</span>i386 librsvg2-<span class="number">2.18</span>-cil libslv2-<span class="number">9</span></span><br><span class="line">  libsoundtouch0 libspandsp2 libsrtp0 libssl1.0.0:i386 libv4l-<span class="number">0</span>:i386</span><br><span class="line"><span class="label">  libv4lconvert0:</span>i386 libvo-aacenc0 libvo-amrwbenc0 libwayland-<span class="string">client0:</span>i386</span><br><span class="line">  libwayland-egl1-<span class="string">mesa:</span>i386 libwayland-<span class="string">server0:</span>i386 libwildmidi-config</span><br><span class="line">  libwildmidi1 libwnck2.20-cil libxcb-<span class="string">icccm4:</span>i386 libxcb-<span class="string">image0:</span>i386</span><br><span class="line">  libxcb-<span class="string">keysyms1:</span>i386 libxcb-<span class="string">randr0:</span>i386 libxcb-render-<span class="string">util0:</span>i386</span><br><span class="line">  libxcb-<span class="string">shape0:</span>i386 libxcb-<span class="string">util0:</span>i386 libxcb-<span class="string">xfixes0:</span>i386 libxcb-<span class="string">xkb1:</span>i386</span><br><span class="line">  libxkbcommon-x11-<span class="number">0</span>:i386 <span class="string">libxkbcommon0:</span>i386 <span class="string">libzbar0:</span>i386 mono-<span class="number">4.0</span>-gac</span><br><span class="line">  mono-gac mono-runtime mono-runtime-common mono-runtime-sgen python-mpd</span><br><span class="line">  python-mutagen python-twisted-names</span><br><span class="line">Use <span class="string">'apt-get autoremove'</span> to remove them.</span><br><span class="line">The following extra packages will be <span class="string">installed:</span></span><br><span class="line">  python-pyasn1</span><br><span class="line">The following NEW packages will be <span class="string">installed:</span></span><br><span class="line">  python-pyasn1 python-twisted-conch</span><br><span class="line"><span class="number">0</span> upgraded, <span class="number">2</span> newly installed, <span class="number">0</span> to remove and <span class="number">6</span> not upgraded.</span><br><span class="line">Need to get <span class="number">286</span> kB of archives.</span><br><span class="line">After <span class="keyword">this</span> operation, <span class="number">1</span>,<span class="number">793</span> kB of additional disk space will be used.</span><br><span class="line">Do you want to <span class="keyword">continue</span>? [Y/n] </span><br><span class="line">Get:<span class="number">1</span> <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/ubuntu/ trusty/main python-pyasn1 all 0.1.7-1ubuntu2 [44.2 kB]</span></span><br><span class="line"><span class="string">Get:</span><span class="number">2</span> <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/ubuntu/ trusty/main python-twisted-conch all 1:13.2.0-1ubuntu1 [242 kB]</span></span><br><span class="line">Fetched <span class="number">286</span> kB <span class="keyword">in</span> <span class="number">0</span>s (<span class="number">1</span>,<span class="number">595</span> kB/s)         </span><br><span class="line">Selecting previously unselected <span class="keyword">package</span> python-pyasn1.</span><br><span class="line">(Reading database ... <span class="number">359746</span> files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../python-pyasn1_0.1.7-<span class="number">1</span>ubuntu2_all.deb ...</span><br><span class="line">Unpacking python-pyasn1 (<span class="number">0.1</span>.7-<span class="number">1</span>ubuntu2) ...</span><br><span class="line">Selecting previously unselected <span class="keyword">package</span> python-twisted-conch.</span><br><span class="line">Preparing to unpack .../python-twisted-conch_1%<span class="number">3</span>a13.2.0-<span class="number">1</span>ubuntu1_all.deb ...</span><br><span class="line">Unpacking python-twisted-conch (<span class="number">1</span>:<span class="number">13.2</span>.0-<span class="number">1</span>ubuntu1) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> doc-base (<span class="number">0.10</span>.5) ...</span><br><span class="line">Processing <span class="number">1</span> added doc-base file...</span><br><span class="line">Processing triggers <span class="keyword">for</span> man-db (<span class="number">2.6</span>.7.1-<span class="number">1</span>ubuntu1) ...</span><br><span class="line">Setting up python-pyasn1 (<span class="number">0.1</span>.7-<span class="number">1</span>ubuntu2) ...</span><br><span class="line">Setting up python-twisted-conch (<span class="number">1</span>:<span class="number">13.2</span>.0-<span class="number">1</span>ubuntu1) ...</span><br></pre></td></tr></table></figure></p>
<p>安装总算完成，再试一次，妈蛋，又来一个新错误，这是什么gui？？？<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">chen@chen-P31:~/stack$ scrapy crawl stack</span><br><span class="line"><span class="number">2015</span>-<span class="number">04</span>-<span class="number">26</span> <span class="number">16</span>:<span class="number">50</span>:<span class="number">44</span>+<span class="number">0800</span> [scrapy] INFO: Scrapy <span class="number">0.24</span>.<span class="number">6</span> started (bot: stack)</span><br><span class="line"><span class="number">2015</span>-<span class="number">04</span>-<span class="number">26</span> <span class="number">16</span>:<span class="number">50</span>:<span class="number">44</span>+<span class="number">0800</span> [scrapy] INFO: Optional features available: ssl, http11</span><br><span class="line"><span class="number">2015</span>-<span class="number">04</span>-<span class="number">26</span> <span class="number">16</span>:<span class="number">50</span>:<span class="number">44</span>+<span class="number">0800</span> [scrapy] INFO: Overridden settings: &#123;<span class="string">'NEWSPIDER_MODULE'</span>: <span class="string">'stack.spiders'</span>, <span class="string">'SPIDER_MODULES'</span>: [<span class="string">'stack.spiders'</span>], <span class="string">'BOT_NAME'</span>: <span class="string">'stack'</span>&#125;</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/local/bin/scrapy"</span>, line <span class="number">11</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    sys.exit(execute())</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/cmdline.py"</span>, line <span class="number">143</span>, <span class="keyword">in</span> execute</span><br><span class="line">    _run_<span class="built_in">print</span>_<span class="built_in">help</span>(parser, _run_<span class="built_in">command</span>, cmd, args, opts)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/cmdline.py"</span>, line <span class="number">89</span>, <span class="keyword">in</span> _run_<span class="built_in">print</span>_<span class="built_in">help</span></span><br><span class="line">    func(*a, **kw)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/cmdline.py"</span>, line <span class="number">150</span>, <span class="keyword">in</span> _run_<span class="built_in">command</span></span><br><span class="line">    cmd.run(args, opts)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/commands/crawl.py"</span>, line <span class="number">60</span>, <span class="keyword">in</span> run</span><br><span class="line">    self.crawler_process.start()</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, line <span class="number">92</span>, <span class="keyword">in</span> start</span><br><span class="line">    <span class="keyword">if</span> self.start_crawling():</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, line <span class="number">124</span>, <span class="keyword">in</span> start_crawling</span><br><span class="line">    <span class="built_in">return</span> self._start_crawler() is not None</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, line <span class="number">139</span>, <span class="keyword">in</span> _start_crawler</span><br><span class="line">    crawler.configure()</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/crawler.py"</span>, line <span class="number">46</span>, <span class="keyword">in</span> configure</span><br><span class="line">    self.extensions = ExtensionManager.from_crawler(self)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/middleware.py"</span>, line <span class="number">50</span>, <span class="keyword">in</span> from_crawler</span><br><span class="line">    <span class="built_in">return</span> cls.from_settings(crawler.settings, crawler)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/middleware.py"</span>, line <span class="number">29</span>, <span class="keyword">in</span> from_settings</span><br><span class="line">    mwcls = load_object(clspath)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/scrapy/utils/misc.py"</span>, line <span class="number">42</span>, <span class="keyword">in</span> load_object</span><br><span class="line">    raise ImportError(<span class="string">"Error loading object '%s': %s"</span> % (path, e))</span><br><span class="line">ImportError: Error loading object <span class="string">'scrapy.contrib.memusage.MemoryUsage'</span>: No module named mail.smtp</span><br></pre></td></tr></table></figure></p>
<p>最后的最后，我在我们万能的github上找到<a href="https://github.com/scrapy/scrapy/issues/958" target="_blank" rel="external">答案</a>，原来是我们没有安装python-twisted，安装一下，世界都美好了<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install <span class="keyword">python</span>-twisted</span><br></pre></td></tr></table></figure></p>
<h2 id="输出到文件">输出到文件</h2><p>为了更直观的看到结果，我们将结果输出到一个json文件<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl stack -o items<span class="class">.json</span> -t json</span><br></pre></td></tr></table></figure></p>
<p>噢耶，第一个爬虫成功</p>
<h1 id="存储到mongodb">存储到mongodb</h1><p>接下来，我们做最后一件事，我们将结果存储到mongodb的数据库中<br>在这里，我遇到一个大坑，无论是伯乐在线翻译的博客<br>还是网上搜索到的一般教程，都是使用pymongo.Connection来连接数据库，可是妈蛋，你使用<code>pip install pymongo</code>安装的版本都是最新版本3.0.1，那个Connection的写法已经不支持，被丢弃了，擦。<br>我们来看一下版本，我学到一个新命令<code>pip show pymongo</code>，用来查看某一个包的版本的。<br><img src="http://ww4.sinaimg.cn/large/692869a3gw1erjct36jnrj20df038dgf.jpg" alt="查看pymongo版本"><br>在pymongo 3.0的版本中，已经不再支持pymongo.Connection，而是使用pymongo.MongoClient来替代。</p>
<h2 id="第一步">第一步</h2><p>创建一个用来保存我们抓取数据的数据库。打开<code>settings.py</code>,指定管道，然后加入数据库的相关设置<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">'stack'</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">'stack.spiders'</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">'stack.spiders'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line"><span class="comment">#USER_AGENT = 'stack (+http://www.yourdomain.com)'</span></span><br><span class="line"></span><br><span class="line">ITEM_PIPELINES = [<span class="string">'stack.pipelines.MongoDBPipeline'</span>, ]</span><br><span class="line"><span class="comment">#关于mongodb的相关设置，包括服务器的ip，端口号，数据库名，表名，</span></span><br><span class="line"><span class="comment">#我也是第一次使用mongodb竟然不需要用户验证信息，而且这表名确实奇怪，叫做MONGODB_COLLECTION</span></span><br><span class="line">MONGODB_SERVER = <span class="string">"localhost"</span></span><br><span class="line">MONGODB_PORT = <span class="number">27017</span></span><br><span class="line">MONGODB_DB = <span class="string">"stackoverflow"</span></span><br><span class="line">MONGODB_COLLECTION = <span class="string">"questions"</span></span><br><span class="line"></span><br><span class="line">DOWNLOAD_DELAY = <span class="number">5</span>  <span class="comment">#抓取的延迟</span></span><br></pre></td></tr></table></figure></p>
<h2 id="第二步">第二步</h2><p>我们已经能够爬取和解析html数据了，而且已经配置了数据库，接下来，我们通过<code>pipelines.py</code>中建立一个管道去连接这两个部分。<br>我们首先来完成数据库的连接部分<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> scrapy.exceptions <span class="keyword">import</span> DropItem</span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MongoDBPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        connection = pymongo.MongoClient(</span><br><span class="line">            settings[<span class="string">'MONGODB_SERVER'</span>],</span><br><span class="line">            settings[<span class="string">'MONGODB_PORT'</span>]</span><br><span class="line">        )</span><br><span class="line">        db = connection[settings[<span class="string">'MONGODB_DB'</span>]]</span><br><span class="line">        self.collection = db[settings[<span class="string">'MONGODB_COLLECTION'</span>]]</span><br></pre></td></tr></table></figure></p>
<p>接下来定义一个处理函数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> item:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">raise</span> DropItem(<span class="string">"Missing data!"</span>)</span><br><span class="line">    self.collection.update(&#123;<span class="string">'url'</span>: item[<span class="string">'url'</span>]&#125;, dict(item), upsert=<span class="keyword">True</span>)</span><br><span class="line">    log.msg(<span class="string">"Question added to MongoDB database!"</span>,</span><br><span class="line">            level=log.DEBUG, spider=spider)</span><br><span class="line">    <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure></p>
<p>ok,搞定，我们再测试一把<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl stack</span><br></pre></td></tr></table></figure></p>
<h2 id="执行效果如下">执行效果如下</h2><p><img src="http://ww1.sinaimg.cn/large/692869a3gw1erjv5to5w3j20w70g8wio.jpg" alt="mongodb数据库管理"></p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="https://github.com/scrapy/scrapy/issues/958" target="_blank" rel="external">ImportError: Error loading object ‘scrapy.contrib.memusage.MemoryUsage’: No module named mail.smtp</a><br>2 <a href="http://stackoverflow.com/questions/8671071/error-to-execute-python-scrappy-module" target="_blank" rel="external">http://stackoverflow.com/questions/8671071/error-to-execute-python-scrappy-module</a><br>3 <a href="http://python.jobbole.com/81320/" target="_blank" rel="external">Python下用Scrapy和MongoDB构建爬虫系统（1）</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天在伯乐在线上看到一篇翻译的博客，讲的是使用scrapy来抓取stackoverflow上的问题，刚好好久没用这个，于是一并捡起来玩一下。<br>]]>
    
    </summary>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="scrapy" scheme="http://jackroyal.github.io/tags/scrapy/"/>
    
      <category term="爬虫" scheme="http://jackroyal.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="python学习笔记" scheme="http://jackroyal.github.io/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用opencv实现人脸检测]]></title>
    <link href="http://jackroyal.github.io/2015/04/26/face-detection/"/>
    <id>http://jackroyal.github.io/2015/04/26/face-detection/</id>
    <published>2015-04-26T04:54:24.000Z</published>
    <updated>2015-05-06T14:25:45.637Z</updated>
    <content type="html"><![CDATA[<p>这两个星期，都在搞这个，就把代码都分享一下，太烂，就不分享到github了。<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8-*-</span></span><br><span class="line">__author__ = <span class="string">'chen'</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> ImageDraw</span><br><span class="line"><span class="keyword">import</span> sys,os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detectFaces</span><span class="params">(image_name)</span>:</span></span><br><span class="line">    img = cv2.imread(image_name)</span><br><span class="line">    face_cascade = cv2.CascadeClassifier(<span class="string">'../data2/haarcascades/haarcascade_frontalface_alt.xml'</span>)<span class="comment">#加载级联分类器，这里使用的是intel训练出来的人脸识别分类器</span></span><br><span class="line">    <span class="keyword">if</span> img.ndim == <span class="number">3</span>:<span class="comment">#判断图片是否是灰度图像，如果img.ndim==3那就表示不是灰度图像</span></span><br><span class="line">        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)<span class="comment">#将图片转化为灰度图像</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        gray = img</span><br><span class="line"></span><br><span class="line">    faces = face_cascade.detectMultiScale(gray, scaleFactor=<span class="number">1.2</span>, minNeighbors=<span class="number">4</span>, minSize=(<span class="number">30</span>, <span class="number">30</span>), flags = cv2.CASCADE_SCALE_IMAGE)<span class="comment">#核心操作，返回图片中所有的人脸的坐标和宽高度</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> (x, y, width, height) <span class="keyword">in</span> faces:</span><br><span class="line">        <span class="keyword">print</span> (x, y, width, height)</span><br><span class="line">        result.append((x, y, x+width, y+height))<span class="comment">#将原始数据，转化为人脸的四个点的坐标</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawFaces</span><span class="params">(image_name)</span>:</span></span><br><span class="line">    faces = detectFaces(image_name)<span class="comment">#此处的返回值是一个元组，(x, y, width, height)，每一个元组都包括人脸的（x,y）坐标，还有人脸的宽度和高度，有这些数据，我们就可以把人脸标记出来，比如画一个矩形框出来</span></span><br><span class="line">    <span class="keyword">print</span> faces</span><br><span class="line">    <span class="keyword">if</span> faces:</span><br><span class="line">        imga = cv2.imread(image_name)<span class="comment">#读取图片</span></span><br><span class="line">        draw_rects(imga, faces, (<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>))<span class="comment">#画矩形标记</span></span><br><span class="line">        cv2.imshow(<span class="string">'img'</span>, imga)<span class="comment">#显示修改后的矩形</span></span><br><span class="line">        cv2.waitKey(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">draw_rects</span><span class="params">(img, rects, color)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x1, y1, x2, y2 <span class="keyword">in</span> rects:</span><br><span class="line">        cv2.rectangle(img, (x1, y1), (x2, y2), color, <span class="number">2</span>)<span class="comment">#调用cv2的矩形函数，画矩形</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveFaces</span><span class="params">(image_name)</span>:</span><span class="comment">#将人脸截取并保存成图片</span></span><br><span class="line">    faces = detectFaces(image_name)</span><br><span class="line">    <span class="keyword">if</span> faces:</span><br><span class="line">        save_dir = image_name.split(<span class="string">'.'</span>)[<span class="number">0</span>] + <span class="string">"_faces_"</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(save_dir):<span class="comment">#检测目录是否存在，如果不存在那就创建目录</span></span><br><span class="line">            os.mkdir(save_dir)</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> (x1, y1, x2, y2) <span class="keyword">in</span> faces:</span><br><span class="line">            imga = cv2.imread(image_name)</span><br><span class="line">            file_name = os.path.join(save_dir,str(count)+<span class="string">".jpg"</span>)</span><br><span class="line">            roi = imga[y1:y2,x1:x2]<span class="comment">#这一步是重点，他就像取一个数组一样，把人脸的部分保存出来</span></span><br><span class="line">            cv2.imwrite(file_name,cv2.cvtColor(cv2.resize(roi,(<span class="number">92</span>,<span class="number">112</span>)), cv2.COLOR_BGR2GRAY))<span class="comment">#把图片的size重新设定维（92,112），并将图片转换为灰度图像</span></span><br><span class="line">            <span class="comment"># cv2.imshow('aaa',imga)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">drawFaces(<span class="string">'../at/chen.jpg'</span>)</span><br><span class="line">saveFaces(<span class="string">'../at/chen.jpg'</span>)</span><br></pre></td></tr></table></figure></p>
<p>这里面的截取人脸并保存的saveFaces函数，我觉得还不错。网上找到的代码，调用了Image库，我的代码全部都是用cv2搞定的，没有用Image库。画矩形也是，我也都是用cv2自带的东西完成的。<br>我用以上代码生成的数据，去进行人脸识别，惨不忍睹。</p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://blog.csdn.net/u012162613/article/details/43523507" target="_blank" rel="external">Python-OpenCV人脸检测(代码)</a><br>2 <a href="http://wangwei007.blog.51cto.com/68019/1104940" target="_blank" rel="external">python os.path模块常用方法详解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这两个星期，都在搞这个，就把代码都分享一下，太烂，就不分享到github了。<br>]]>
    
    </summary>
    
      <category term="opencv" scheme="http://jackroyal.github.io/tags/opencv/"/>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="图像处理" scheme="http://jackroyal.github.io/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="图像处理" scheme="http://jackroyal.github.io/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用opencv实现人脸识别]]></title>
    <link href="http://jackroyal.github.io/2015/04/26/face-recognizer/"/>
    <id>http://jackroyal.github.io/2015/04/26/face-recognizer/</id>
    <published>2015-04-26T02:50:00.000Z</published>
    <updated>2015-05-06T14:25:45.652Z</updated>
    <content type="html"><![CDATA[<p>最近搞了两个星期的opencv，人脸识别方向，感觉没有什么前途，看不到论文在哪里啊。<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">z = &#123;&#125; <span class="comment">#存储关于每张图片对应的lable</span></span><br><span class="line">for_pre = []  <span class="comment">#存储用来进行测试的图片，规则是每个人10张图，5张用来训练，5张用来测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">normalize</span><span class="params">(X, low, high, dtype=None)</span>:</span></span><br><span class="line">    <span class="string">"""对数据进行正常化处理，让其处于最高和最低值之间."""</span></span><br><span class="line">    X = np.asarray(X)</span><br><span class="line">    minX, maxX = np.min(X), np.max(X)</span><br><span class="line">    <span class="comment"># normalize to [0...1].</span></span><br><span class="line">    X = X - float(minX)</span><br><span class="line">    X = X / float((maxX - minX))</span><br><span class="line">    <span class="comment"># scale to [low...high].</span></span><br><span class="line">    X = X * (high-low)</span><br><span class="line">    X = X + low</span><br><span class="line">    <span class="keyword">if</span> dtype <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">return</span> np.asarray(X)</span><br><span class="line">    <span class="keyword">return</span> np.asarray(X, dtype=dtype)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_images</span><span class="params">(path, sz=None)</span>:</span></span><br><span class="line">    <span class="string">"""从文件夹中读取图像，并且将其大小限制在一定范围之内</span><br><span class="line"></span><br><span class="line">    参数:</span><br><span class="line">        path: 图片的路径</span><br><span class="line">        sz: 设定图像的大小以元组的形式，例如(92,112)</span><br><span class="line"></span><br><span class="line">    返回值:</span><br><span class="line">        返回一个list的数据[X,y]</span><br><span class="line"></span><br><span class="line">            X: 一个numpy的数组，里面存储的是所有的图片的矩阵.</span><br><span class="line">            y:一个list存储的，都是与X中图片对应的lable</span><br><span class="line">    """</span></span><br><span class="line">    c = <span class="number">0</span></span><br><span class="line">    X,y = [], []</span><br><span class="line">    <span class="keyword">for</span> dirname, dirnames, filenames <span class="keyword">in</span> os.walk(path):</span><br><span class="line">        <span class="keyword">for</span> subdirname <span class="keyword">in</span> dirnames:</span><br><span class="line">            subject_path = os.path.join(dirname, subdirname)</span><br><span class="line">            <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(subject_path):</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    im = cv2.imread(os.path.join(subject_path, filename), cv2.IMREAD_GRAYSCALE)</span><br><span class="line">                    <span class="comment"># resize to given size (if given)</span></span><br><span class="line">                    <span class="keyword">if</span> (sz <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>):</span><br><span class="line">                        im = cv2.resize(im, sz)</span><br><span class="line">                    <span class="keyword">if</span> y.count(c) &gt; <span class="number">4</span>:</span><br><span class="line">                        for_pre.append(&#123;<span class="string">'no'</span>:c,<span class="string">'src'</span>:np.asarray(im, dtype=np.uint8)&#125;)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        X.append(np.asarray(im, dtype=np.uint8))</span><br><span class="line">                        y.append(c)</span><br><span class="line">                    <span class="keyword">global</span> z</span><br><span class="line">                    z[os.path.join(subject_path, filename)] = c</span><br><span class="line">                <span class="keyword">except</span> IOError, (errno, strerror):</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"I/O error(&#123;0&#125;): &#123;1&#125;"</span>.format(errno, strerror)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"Unexpected error:"</span>, sys.exc_info()[<span class="number">0</span>]</span><br><span class="line">                    <span class="keyword">raise</span></span><br><span class="line">            c = c+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> [X,y]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prediction</span><span class="params">(model)</span>:</span></span><br><span class="line">    <span class="string">"""图像预测</span><br><span class="line"></span><br><span class="line">    参数:</span><br><span class="line">        model: 就是图片训练的那个model</span><br><span class="line"></span><br><span class="line">    数据集中每个人存储了10张图片，我把其中的5张存储到for_pre，作为训练数据。用已知的lable和预测的lable作比较，得出图片识别正确的概率</span><br><span class="line">    """</span></span><br><span class="line">    tn = <span class="number">0</span> <span class="comment">#识别正确的图片数</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> for_pre:</span><br><span class="line">        [p_label, p_confidence] = model.predict(cv2.resize(item[<span class="string">'src'</span>],(<span class="number">92</span>,<span class="number">112</span>)))</span><br><span class="line">        <span class="keyword">if</span> p_label == item[<span class="string">'no'</span>]:</span><br><span class="line">            tn = tn+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'the answer is %d,'</span> % item[<span class="string">'no'</span>],</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Predicted label = %d (confidence=%.2f)"</span> % (p_label, p_confidence)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"总共有%d次预测，其中正确次数为%d"</span> %(len(for_pre),tn)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># This is where we write the images, if an output_dir is given</span></span><br><span class="line">    <span class="comment"># in command line:</span></span><br><span class="line">    out_dir = <span class="keyword">None</span></span><br><span class="line">    <span class="comment"># You'll need at least a path to your image data, please see</span></span><br><span class="line">    <span class="comment"># the tutorial coming with this source code on how to prepare</span></span><br><span class="line">    <span class="comment"># your image data:</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"USAGE: face_rec.py &lt;/path/to/images&gt; [&lt;/path/to/store/images/at&gt;]"</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="comment"># Now read in the image data. This must be a valid path!</span></span><br><span class="line">    [X,y] = read_images(sys.argv[<span class="number">1</span>], (<span class="number">92</span>, <span class="number">112</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Convert labels to 32bit integers. This is a workaround for 64bit machines,</span></span><br><span class="line">    <span class="comment"># because the labels will truncated else. This will be fixed in code as</span></span><br><span class="line">    <span class="comment"># soon as possible, so Python users don't need to know about this.</span></span><br><span class="line">    <span class="comment"># Thanks to Leo Dirac for reporting:</span></span><br><span class="line">    y = np.asarray(y, dtype=np.int32)</span><br><span class="line">    <span class="comment"># If a out_dir is given, set it:</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">3</span>:</span><br><span class="line">        out_dir = sys.argv[<span class="number">2</span>]</span><br><span class="line">    <span class="comment"># Create the Eigenfaces model. We are going to use the default</span></span><br><span class="line">    <span class="comment"># parameters for this simple example, please read the documentation</span></span><br><span class="line">    <span class="comment"># for thresholding:</span></span><br><span class="line">    model = cv2.createEigenFaceRecognizer()</span><br><span class="line">    <span class="comment"># Read</span></span><br><span class="line">    <span class="comment"># Learn the model. Remember our function returns Python lists,</span></span><br><span class="line">    <span class="comment"># so we use np.asarray to turn them into NumPy lists to make</span></span><br><span class="line">    <span class="comment"># the OpenCV wrapper happy:</span></span><br><span class="line">    model.train(np.asarray(X), np.asarray(y))</span><br><span class="line">    prediction(model) <span class="comment">#图片预测</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># You can see the available parameters with getParams():</span></span><br><span class="line">    <span class="keyword">print</span> model.getParams()</span><br><span class="line">    <span class="comment"># Now let's get some data:</span></span><br><span class="line">    mean = model.getMat(<span class="string">"mean"</span>)</span><br><span class="line">    <span class="keyword">print</span> out_dir + <span class="string">'/out.xml'</span></span><br><span class="line">    f = open(out_dir + <span class="string">'/out.xml'</span>,<span class="string">'w'</span>)</span><br><span class="line">    model.save(out_dir + <span class="string">'/out.xml'</span>)</span><br><span class="line">    eigenvectors = model.getMat(<span class="string">"eigenvectors"</span>)</span><br><span class="line">    <span class="comment"># We'll save the mean, by first normalizing it:</span></span><br><span class="line">    mean_norm = normalize(mean, <span class="number">0</span>, <span class="number">255</span>, dtype=np.uint8)</span><br><span class="line">    mean_resized = mean_norm.reshape(X[<span class="number">0</span>].shape)</span><br><span class="line">    <span class="keyword">if</span> out_dir <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        cv2.imshow(<span class="string">"mean"</span>, mean_resized)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cv2.imwrite(<span class="string">"%s/mean.png"</span> % (out_dir), mean_resized)</span><br><span class="line">    <span class="comment"># Turn the first (at most) 16 eigenvectors into grayscale</span></span><br><span class="line">    <span class="comment"># images. You could also use cv::normalize here, but sticking</span></span><br><span class="line">    <span class="comment"># to NumPy is much easier for now.</span></span><br><span class="line">    <span class="comment"># <span class="doctag">Note</span>: eigenvectors are stored by column:</span></span><br><span class="line">    <span class="comment"># for i in xrange(min(len(X), 16)):</span></span><br><span class="line">    <span class="comment">#     eigenvector_i = eigenvectors[:,i].reshape(X[0].shape)</span></span><br><span class="line">    <span class="comment">#     eigenvector_i_norm = normalize(eigenvector_i, 0, 255, dtype=np.uint8)</span></span><br><span class="line">    <span class="comment">#     # Show or save the images:</span></span><br><span class="line">    <span class="comment">#     if out_dir is None:</span></span><br><span class="line">    <span class="comment">#         cv2.imshow("%s/eigenface_%d" % (out_dir,i), eigenvector_i_norm)</span></span><br><span class="line">    <span class="comment">#     else:</span></span><br><span class="line">    <span class="comment">#         cv2.imwrite("%s/eigenface_%d.png" % (out_dir,i), eigenvector_i_norm)</span></span><br><span class="line">    <span class="comment"># Show the images:</span></span><br><span class="line">    <span class="keyword">print</span> z</span><br><span class="line">    <span class="keyword">if</span> out_dir <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure></p>
<p>代码执行效果如下<br><img src="http://ww1.sinaimg.cn/large/692869a3gw1eriuc3wsckj20nr08qn2q.jpg" alt="人脸识别执行效果"><br>我在这里输出的是那些预测错误的。<code>总共有200次预测，其中正确次数为186。</code>这预测率有点低啊，我用的数据都是来自于<a href="http://www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html" target="_blank" rel="external"> AT&amp;T Facedatabase</a>。一共40个人，每个人10张图，图片宽高是92*112像素，全部是灰度图像。<br>至于如何提高图片识别的效率，我也不知道。</p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://docs.opencv.org/modules/contrib/doc/facerec/facerec_tutorial.html" target="_blank" rel="external">http://docs.opencv.org/modules/contrib/doc/facerec/facerec_tutorial.html</a><br>2 <a href="https://code.google.com/p/pythonxy/source/browse/src/python/OpenCV/DOC/samples/python2/facerec_demo.py?repo=xy-27&amp;r=a2e41c7a3cb6db536b948747872cab71c696b44e" target="_blank" rel="external">python调用opencv实现人脸识别</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近搞了两个星期的opencv，人脸识别方向，感觉没有什么前途，看不到论文在哪里啊。<br>]]>
    
    </summary>
    
      <category term="opencv" scheme="http://jackroyal.github.io/tags/opencv/"/>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="图像处理" scheme="http://jackroyal.github.io/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
      <category term="图像处理" scheme="http://jackroyal.github.io/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[blog2markdown程序打包,csdn爬虫]]></title>
    <link href="http://jackroyal.github.io/2015/03/29/blog2markdown-csdn-windows/"/>
    <id>http://jackroyal.github.io/2015/03/29/blog2markdown-csdn-windows/</id>
    <published>2015-03-29T14:08:22.000Z</published>
    <updated>2015-05-06T14:25:45.621Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>项目地址<a href="https://github.com/Jackroyal/blog2markdown.git" target="_blank" rel="external">https://github.com/Jackroyal/blog2markdown.git</a></p>
</blockquote>
<p>用来实现普通blog到markdown的搬家，自动将blog的html转换成HEXO可用的Markdown格式<br>暂时只做了CSDN</p>
<h3 id="UPDATE:">UPDATE:</h3><p>2015-03-29 添加了打包成exe的程序,修复cmd下乱码,win和ubuntu完美运行<br>2015-03-29 连夜修复了在win下乱码的问题,删除了冗余代码<br>2015-03-28 将某些参数改为从配置文件中读取,加入更多异常判断<br>2014-12-15 优化标签解析功能,添加了标题,tag和category<br>2014-12-13 实现解析功能,基本完成解析功能<br>2014-12-10 实现CSDN的抓取，正在实现parse解析过程<br><a id="more"></a></p>
<h3 id="BUG">BUG</h3><p>如果代码中有#和*会被转义成<code>\#</code>和<code>\*</code><br>对table的支持不好</p>
<h3 id="依赖库">依赖库</h3><p>爬虫使用了<code>beautifulsoup  4.3.2</code><br><a href="http://www.crummy.com/software/BeautifulSoup/" target="_blank" rel="external">点我点我</a><br>你必须安装这个才可以正常使用<br>PS:我打包了exe<a href="http://pan.baidu.com/s/1dDERlOP" target="_blank" rel="external">点此下载</a>,可以什么不装,改完配置文件,直接运行</p>
<h1 id="使用:">使用:</h1><h2 id="首先,编辑配置文件spider-conf">首先,编辑配置文件<code>spider.conf</code></h2><p>格式如下:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[blog]</span><br><span class="line"><span class="preprocessor">#此处url不需要单引号或者双引号,不然类型识别错误,网址最后不要/</span></span><br><span class="line">url=http:<span class="comment">//blog.csdn.net/jackroyal</span></span><br><span class="line">[setting]</span><br><span class="line"><span class="keyword">wait_t</span>ime=<span class="number">5</span></span><br></pre></td></tr></table></figure></p>
<p>这里的<code>url</code>地址注意不要加引号,下面的<code>wait_time</code>是指两次抓取的间隔时间,这是为了安全起见,如果高频访问,可能会被封,我设置的<code>5</code>秒,你可以根据自己需要去设置</p>
<h2 id="打包">打包</h2><p>我打包了一个<a href="http://pan.baidu.com/s/1dDERlOP" target="_blank" rel="external">exe程序</a>,放在github项目的dist目录下,在windows系统中,<code>直接下载</code>,<code>运行</code></p>
<p>PS:由于pyInstaller的问题,导致无法在中文路径下正常运行</p>
<p>比如你放在C:/users/张三/spider.exe<br>这样是无法正常运行的<br>所以应该放在全英文的目录下<br>C:/software/spider.exe<br>运行结果如图<br><img src="http://ww2.sinaimg.cn/large/692869a3gw1eqmymt6bhrj20ip0cata6.jpg" alt="spider运行截图"><br><img src="http://ww1.sinaimg.cn/large/692869a3gw1eqmyur9uihj20mb0gqmzf.jpg" alt="运行结果截图"></p>
<h1 id="源码执行">源码执行</h1><p>如果你对我的exe不放心,可以自己执行python源码</p>
<h3 id="执行">执行</h3><p>在linux下,首先要给予执行权限<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x spider<span class="class">.py</span> ParseBlog<span class="class">.py</span></span><br><span class="line">python spider.py</span><br></pre></td></tr></table></figure></p>
<p>然后就可以了,输出文件在output文件夹</p>
<p>在win下,经过修复也可以正常运行了,在idle(在win中你安装了python2.7的话就会有这个编辑器)中是可以完全正常的显示中文<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#19981;&#36807;&#25235;&#21462;&#26159;&#27809;&#26377;&#38382;&#39064;&#30340;,&#27492;&#22788;&#23601;&#19981;&#32416;&#32467;&#20102;&#21704;,&#33021;&#29992;&#23601;&#22909;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在win下,没有权限的问题,直接执行就好了</span></span><br><span class="line"><span class="title">python</span> spider.py</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>项目地址<a href="https://github.com/Jackroyal/blog2markdown.git">https://github.com/Jackroyal/blog2markdown.git</a></p>
</blockquote>
<p>用来实现普通blog到markdown的搬家，自动将blog的html转换成HEXO可用的Markdown格式<br>暂时只做了CSDN</p>
<h3 id="UPDATE:">UPDATE:</h3><p>2015-03-29 添加了打包成exe的程序,修复cmd下乱码,win和ubuntu完美运行<br>2015-03-29 连夜修复了在win下乱码的问题,删除了冗余代码<br>2015-03-28 将某些参数改为从配置文件中读取,加入更多异常判断<br>2014-12-15 优化标签解析功能,添加了标题,tag和category<br>2014-12-13 实现解析功能,基本完成解析功能<br>2014-12-10 实现CSDN的抓取，正在实现parse解析过程<br>]]>
    
    </summary>
    
      <category term="github" scheme="http://jackroyal.github.io/tags/github/"/>
    
      <category term="hexo" scheme="http://jackroyal.github.io/tags/hexo/"/>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="windows" scheme="http://jackroyal.github.io/tags/windows/"/>
    
      <category term="python学习笔记" scheme="http://jackroyal.github.io/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo发布失败]]></title>
    <link href="http://jackroyal.github.io/2015/03/29/hexo-deploy-error/"/>
    <id>http://jackroyal.github.io/2015/03/29/hexo-deploy-error/</id>
    <published>2015-03-29T10:09:28.000Z</published>
    <updated>2015-05-06T14:51:50.726Z</updated>
    <content type="html"><![CDATA[<p>可能受到上次ddos的问题,这两天国内访问github,总是感觉不顺畅.<br>今天下午写了一篇博客,可是却发布不成功,一直卡在这一步:<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1eqmrrf20j1j20g006676y.jpg" alt="hexo发布的时候卡住"></p>
<p>然后我继续等,得到如下错误:<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="variable">Failed</span> to <span class="keyword">receive</span> <span class="variable">SOCKS4</span> connect request ack.</span><br></pre></td></tr></table></figure></p>
<p>我执行了<code>hexo clean</code>命令,手动删掉了<code>.deploy</code>文件夹,可是还是不行<br>最后报错<br>无法连接<code>https://github.com/Jackroyal/Jackroyal.github.io.git</code></p>
<p><em>(ps:此处已经无法重现了,抽风啊)</em></p>
<p>最后我换了下这条链接<br>我修改了博客目录下的<code>_config.yml</code>,改了deploy参数<br>原参数设置<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: github</span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/Jackroyal/Jackroyal.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p>
<p>修改以后:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: github</span><br><span class="line">  <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:Jackroyal/Jackroyal.github.io.git</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p>
<p>然后就deploy成功了.</p>
<p><em>PPPS:千万注意,上面的参数设置repo:后面有一个空格,没有空格会报错</em></p>
<h1 id="update:">update:</h1><p>repo的两种方式分别为ssh和https<br>昨天没搞清楚,专门去查了一下,ssh和https两种提交的区别<br>官方推荐用https,因为这回要求你输入用户名和密码,这样更安全<br>用ssh的话,只要你的ssh-key(可以设置一道类似密码的东西,和你的key一起加密,这样使用的时候会要求输入这段密码)对,那么就都可以提交,没有了更多的验证过程(可以设置一个para加密,提交会要求输入这段para)</p>
<p>2015-05-06<br>最近又发现，使用ssh提交的话，github不会计算到你的conribute里面去，也就是你今天提交了，但是github的contribute不会变化，所以还是改成https吧，不然怎么装B呢？</p>
<h3 id="友情链接">友情链接</h3><p><a href="http://rolight.cn/blog/?p=34" target="_blank" rel="external">ubuntu  shadowsocks 全局 代理</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>可能受到上次ddos的问题,这两天国内访问github,总是感觉不顺畅.<br>今天下午写了一篇博客,可是却发布不成功,一直卡在这一步:<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1eqmrrf20j1j20g00]]>
    </summary>
    
      <category term="hexo" scheme="http://jackroyal.github.io/tags/hexo/"/>
    
      <category term="hexo" scheme="http://jackroyal.github.io/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python学习笔记--python和beautifulsoup遇到的编码问题]]></title>
    <link href="http://jackroyal.github.io/2015/03/29/python-blog-spider/"/>
    <id>http://jackroyal.github.io/2015/03/29/python-blog-spider/</id>
    <published>2015-03-29T06:43:45.000Z</published>
    <updated>2015-05-06T14:25:45.668Z</updated>
    <content type="html"><![CDATA[<p>在刚开始使用github pages的时候,我用python写了一个爬虫,计划是从csdn和cnblogs等博客网站上,把自己之前写的博客爬取下来,然后再转换成hexo用的markdown格式,样就可以直接添加到我的github pages.</p>
<blockquote>
<p>项目主页: <a href="https://github.com/Jackroyal/blog2markdown" target="_blank" rel="external">https://github.com/Jackroyal/blog2markdown</a></p>
</blockquote>
<p>最近刚好在学习python,刚好就把它给优化了一下,顺便做了个跨平台(哈哈,win和ubuntu都可以跑哈),昨天遇到很蛋疼的问题,一它给了我很多思路帮助我定位问题,.直搞到凌晨两点才弄好.<br>非常非常感谢<a href="http://www.crifan.com/summary_python_2_x_common_string_encode_decode_error_reason_and_solution/" target="_blank" rel="external">【总结】Python 2.x中常见字符编码和解码方面的错误及其解决办法</a><br>作者做了一个很好的总结,帮助我们定位问题.<br><a id="more"></a></p>
<h1 id="1_编码类型">1 编码类型</h1><p>首先确定好你的编码类型,比如一般推荐用utf-8.当确定编码类型后,就要保持统一,不要又弄些GBK的编码在里面.</p>
<ul>
<li>1.1  编辑器编码<ul>
<li>我们有时候会犯一个错误,我在py文件的头部声明当前文件是按照utf-8来编码.但是文件实际保存的编却不是utf-8,这样也会导致乱码.建议使用可以查看当前文件编码的编辑器,比如sublime text或者notepad++ 或者pycharm.<br>在sublime下如图所示<br><img src="http://ww2.sinaimg.cn/large/692869a3gw1eqmn535qb7j208u028t8k.jpg" alt="sublime显示当前文件编码"></li>
<li>文件编码声明,我们要在py文件的头部添加一行<code># -*- coding: utf-8 -*-</code>,表明我接下来要使用utf-8编码</li>
</ul>
</li>
<li>1.2  python解释器<ul>
<li>如果是Python的IDLE，如果你没修改defaultencoding，那么就使用默认的字符编码可以通过sys.getdefaultencoding()而获得，比如此处获得是：ascii<br><img src="http://ww4.sinaimg.cn/large/692869a3gw1eqmnd8fgrjj20b205kabi.jpg" alt="win中python解释器编码"><br><img src="http://ww3.sinaimg.cn/large/692869a3gw1eqmnfd29u7j20k5047wfv.jpg" alt="ubuntu终端解释器的编码"></li>
</ul>
</li>
<li>1.3  执行python代码<ul>
<li>其中，很常见的几种动作是：<ul>
<li>打印print对应的所获得的字符<ul>
<li>对于字符串打印,Python的逻辑:<ul>
<li>如果是Unicode字符串,则可以,自动地,编码为对应的终端所用编码,然后正确的显示出来</li>
<li>比如unicode的字符串,输出到windows的默认编码为GBK的cmd中,则Python可以自动将Unicode编码为GBK,然后输出到cmd中</li>
<li>个别特殊情况,也会出错:<ul>
<li>当此unicode字符串中包含某特殊字符,而目标终端的编码集合中,没有此字符,则很明显也是无法实现将Unicode编码为对应的特定编码的字符串,无法正确显示的</li>
</ul>
</li>
<li>如果是某种编码类型的str,则需要该str的编码类型,和目标终端编码匹配<ul>
<li>比如GBK的字符串,输出到windows的默认编码为GBK的cmd,则是可以正常输出的</li>
<li>此处后来经过代码测试，就发现一个有趣或者说诡异的问题，虽然我们python文件声明的UTF-8编码，但是实际上实际上是用GBK编码，而此时，文件中的字符串，很明显是用GBK存储的，所以，将此GBK字符，输出到GBK的cmd中，是可以正常输出的。即，此处字符串的类型，很明显只和文件所用的实际编码有关，而和文件所声明的代码无关。</li>
</ul>
</li>
<li>如果是UTF-8的字符串,输出到windows的默认编码为GBK的cmd,就会出错<ul>
<li>对相应的字符，进行编码（为某种特定类型的字符str），或解码（为对应的unicode类型的字符）</li>
<li>比如将当前的某种编码的字符串，解码为Unicode字符串<ul>
<li>很明显，也是要保证，你字符串本身的编码和所指定的编码，两者之间要一致的</li>
<li>比如：decodedUnicode = someUtf8Str.decode(“UTF-8”)</li>
<li>而如果用这样的：decodedUnicode = someGbkStr.decode(“UTF-8”)，那就会出现错误</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="2_常用方法">2 常用方法</h1><h3 id="2-1_encode和decode">2.1 encode和decode</h3><p>encode()  unicode编码-&gt;其他编码</p>
<p>decode()  其他编码-&gt;unicode编码</p>
<p>使用这两个方法的前提是,你要知道当前是什么编码.然后用对应的编码去进行解码<br>比如对于s字符串可以用<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s.<span class="function"><span class="title">encode</span><span class="params">(<span class="string">'utf-8'</span>)</span></span> #将s由unicode转码成utf-<span class="number">8</span></span><br><span class="line">s.<span class="function"><span class="title">decode</span><span class="params">(<span class="string">'GBK'</span>)</span></span> #s是GBK编码,将s转换成unicode</span><br></pre></td></tr></table></figure></p>
<h3 id="2-2_isinstance()">2.2 isinstance()</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">isinstance</span><span class="params">(s , unicode)</span></span> #检测s是否是unicode编码</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">isinstance</span><span class="params">(s , str)</span></span> #检测s是否是str格式</span><br></pre></td></tr></table></figure>
<h1 id="3_beautifulsoup编码问题">3 beautifulsoup编码问题</h1><h3 id="Beautiful_Soup_会按顺序尝试不同的编码将你的文档转换为Unicode：">Beautiful Soup 会按顺序尝试不同的编码将你的文档转换为Unicode：</h3><ul>
<li>可以通过from_encoding参数传递编码类型给soup的构造器</li>
<li>通过文档本身找到编码类型：例如XML的声明或者HTML文档http-equiv的META标签。 </li>
<li>如果Beautiful Soup在文档中发现编码类型，它试着使用找到的类型转换文档。 +</li>
<li>但是，如果你明显的指定一个编码类型， </li>
<li>并且成功使用了编码：这时它会忽略任何它在文档中发现的编码类型。</li>
<li>通过嗅探文件开头的一下数据，判断编码。如果编码类型可以被检测到，</li>
<li>它将是这些中的一个：UTF-*编码，EBCDIC或者ASCII。</li>
<li>通过chardet库,嗅探编码，如果你安装了这个库。</li>
<li>UTF-8</li>
<li>Windows-1252</li>
</ul>
<p>一般来说,bs的自动识别,是不会有问题的,但是在我这里除了问题,具体原因不太清楚<br>我的网页上已经声明了是<code>utf-8</code>编码<br>原来代码如下<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#这是原来的编码,在win下面乱码</span><br><span class="line">self<span class="class">.soup</span> = <span class="function"><span class="title">bs</span><span class="params">((response.read()</span></span>))</span><br><span class="line">print self<span class="class">.soup</span><span class="class">.originalEncoding</span>   #此处结果竟然返回Windows-<span class="number">1252</span></span><br></pre></td></tr></table></figure></p>
<p>修改后代码如下<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#win下乱码的关键在这里,beautifulsoup解析的编码不对,我们这里直接指定编码</span><br><span class="line">self<span class="class">.soup</span> = <span class="function"><span class="title">bs</span><span class="params">((response.read()</span></span>), from_encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">print self<span class="class">.soup</span><span class="class">.originalEncoding</span>   #修正后代码正确返回<span class="string">'utf-8'</span></span><br></pre></td></tr></table></figure></p>
<p>看来beautifulsoup的自动识别编码不能全部依赖.<br>好不容易才定位到这里的问题,折腾了一天啊<br>这里用了一个方法来检测编码.就是soup.iriginalEncoding属性<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print self<span class="class">.soup</span><span class="class">.originalEncoding</span>   #修正后代码正确返回<span class="string">'utf-8'</span></span><br></pre></td></tr></table></figure></p>
<p>这篇博客好水,毕竟不是很懂,所以说不出来</p>
<p>update:2015-03-30</p>
<h1 id="4_新技能get">4 新技能get</h1><p>之前都没好好理解原作者的博客,觉得没办法一个程序在win和ubuntu中不更改正常运行,现在发现,如果把编码改为unicode格式输出,那么系统会自动转换,这样就不存在utf-8编码在windows下cmd乱码了.</p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://www.crifan.com/summary_python_2_x_common_string_encode_decode_error_reason_and_solution/" target="_blank" rel="external">【总结】Python 2.x中常见字符编码和解码方面的错误及其解决办法</a><br>2 <a href="http://www.crifan.com/resolved_python_garbled_chinese_characters_gb2312_gbk_gb18030-related_issues/" target="_blank" rel="external">【已解决】python中文字符乱码（GB2312，GBK，GB18030相关的问题）</a><br>参考资料太多,贴不过来啊,主要都是cifan的博客,里面资料很多,一步一步都有过程,非常好用,谢谢cifan作者</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在刚开始使用github pages的时候,我用python写了一个爬虫,计划是从csdn和cnblogs等博客网站上,把自己之前写的博客爬取下来,然后再转换成hexo用的markdown格式,样就可以直接添加到我的github pages.</p>
<blockquote>
<p>项目主页: <a href="https://github.com/Jackroyal/blog2markdown">https://github.com/Jackroyal/blog2markdown</a></p>
</blockquote>
<p>最近刚好在学习python,刚好就把它给优化了一下,顺便做了个跨平台(哈哈,win和ubuntu都可以跑哈),昨天遇到很蛋疼的问题,一它给了我很多思路帮助我定位问题,.直搞到凌晨两点才弄好.<br>非常非常感谢<a href="http://www.crifan.com/summary_python_2_x_common_string_encode_decode_error_reason_and_solution/">【总结】Python 2.x中常见字符编码和解码方面的错误及其解决办法</a><br>作者做了一个很好的总结,帮助我们定位问题.<br>]]>
    
    </summary>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="爬虫" scheme="http://jackroyal.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="python学习笔记" scheme="http://jackroyal.github.io/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python学习笔记--一个简单聊天室的实现]]></title>
    <link href="http://jackroyal.github.io/2015/03/26/python-im/"/>
    <id>http://jackroyal.github.io/2015/03/26/python-im/</id>
    <published>2015-03-26T13:33:35.000Z</published>
    <updated>2015-05-06T14:25:45.668Z</updated>
    <content type="html"><![CDATA[<p>最近项目真多,一个接一个的失之交臂,全部都错过了.最近状态有些不好,容易胡思乱想.<br>这是来自书上的一个python聊天程序,我照着敲了一遍,然后给扩展了一下,加了多个房间和创建选择房间的功能,写了好久好久,感觉都拖了一个星期了.<br>下一步是做一个gui,恩,那将是我的第一个gui程序.<br><a id="more"></a></p>
<h1 id="先贴一下代码_server5-py">先贴一下代码 server5.py</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8-*-</span></span><br><span class="line">__author__ = <span class="string">'chen'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> asyncore <span class="keyword">import</span>  dispatcher</span><br><span class="line"><span class="keyword">from</span>  asynchat <span class="keyword">import</span> async_chat</span><br><span class="line"><span class="keyword">import</span> socket,asyncore</span><br><span class="line"></span><br><span class="line">PORT = <span class="number">5005</span>  <span class="comment">#设定程序的端口号</span></span><br><span class="line">NAME = <span class="string">'testchat'</span>  <span class="comment">#给服务器一个名称</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EndSession</span><span class="params">(Exception)</span>:</span><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommandHandler</span>:</span></span><br><span class="line">    <span class="string">"""</span><br><span class="line">    类似标准库中cmd.Cmd的简单命令处理程序</span><br><span class="line">    """</span></span><br><span class="line">    <span class="comment">#如果输入的命令,那么就返回unknown命令</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">unknown</span><span class="params">(self, session, cmd)</span>:</span></span><br><span class="line">        session.push(<span class="string">'Unknown command: %s \r\n'</span> % cmd)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> line.strip():</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        parts = line.split(<span class="string">' '</span>, <span class="number">1</span>)</span><br><span class="line">        cmd = parts[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            line = parts[<span class="number">1</span>].strip()</span><br><span class="line">        <span class="keyword">except</span> IndexError:line = <span class="string">''</span></span><br><span class="line">        meth = getattr(self, <span class="string">'do_'</span> + cmd, <span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            meth(session, line)</span><br><span class="line">        <span class="keyword">except</span> TypeError:</span><br><span class="line">            self.unknown(session, cmd)</span><br><span class="line"><span class="comment">#这个类是聊天房间的类,继承上面的类是为了继承执行命令的功能</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatRoom</span><span class="params">(CommandHandler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, server)</span>:</span></span><br><span class="line">        self.server = server</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sessions = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, session)</span>:</span></span><br><span class="line">        self.broadcast(session.name + <span class="string">' has entered the room %s\r\n'</span> % self.name)</span><br><span class="line">        session.push(<span class="string">'you can type "h" for help\r\n'</span>)</span><br><span class="line">        <span class="comment">##因为后面要将用户挪动房间,所以必须保存每个用户的session,这样才能挪动和删除</span></span><br><span class="line">        self.server.users[session.name] = session</span><br><span class="line">        self.sessions.append(session)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, session)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.sessions.remove(session)</span><br><span class="line">        <span class="keyword">except</span>: <span class="keyword">pass</span> <span class="comment">#如果此处的sessions为空或者已经不存在,会出错,此处不上报</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">broadcast</span><span class="params">(self, line)</span>:</span></span><br><span class="line">        <span class="comment">#广播,只广播到当前房间</span></span><br><span class="line">        <span class="keyword">for</span> session <span class="keyword">in</span> self.sessions:</span><br><span class="line">            session.push(line)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_say</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        <span class="comment">#说话</span></span><br><span class="line">        self.broadcast(session.name + <span class="string">":"</span> + line + <span class="string">'\r\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_login</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        <span class="comment">#login,其实是实现改名字的功能,懒得去改函数名了</span></span><br><span class="line">        name = line.strip()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            session.push(<span class="string">'please enter a name\r\n'</span>)</span><br><span class="line">        <span class="keyword">elif</span> name <span class="keyword">in</span> self.server.users.keys():</span><br><span class="line">            session.push(<span class="string">'The name %s is taken\r\n'</span> % name)</span><br><span class="line">            session.push(<span class="string">'please try again\r\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            session.server.users[name] = session.server.users.pop(session.name)</span><br><span class="line">            session.name = name</span><br><span class="line">            session.enter(self)</span><br><span class="line">            self.do_list(session, <span class="string">''</span>)</span><br><span class="line">            session.push(<span class="string">'type "select name" to choose one room\r\n'</span>)</span><br><span class="line">    <span class="comment">#查看当前房间有哪些人</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_look</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        session.push(<span class="string">'the following are in this room:\r\n'</span>)</span><br><span class="line">        <span class="keyword">for</span> other <span class="keyword">in</span> self.sessions:</span><br><span class="line">            session.push(other.name + <span class="string">"\r\n"</span>)</span><br><span class="line">    <span class="comment">#查看当前在线的用户,所有房间的用户</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_who</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        session.push(<span class="string">'the following are logged in:\r\n'</span>)</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> self.server.users:</span><br><span class="line">            session.push(name + <span class="string">'\r\n'</span>)</span><br><span class="line">    <span class="comment">#查看当前所有的房间</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_list</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        session.push(<span class="string">'the room list is below\r\n'</span>)</span><br><span class="line">        session.push(<span class="string">'   '</span>.join(self.server.rooms) + <span class="string">'\r\n'</span>)</span><br><span class="line">    <span class="comment">#选择房间</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_select</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        name = line.strip()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            session.push(<span class="string">'please enter a room name\r\n'</span>)</span><br><span class="line">        <span class="keyword">elif</span> name <span class="keyword">in</span> self.server.rooms.keys():</span><br><span class="line">            session.enter(self.server.rooms[name])</span><br><span class="line">            self.broadcast(<span class="string">' %s ,welcome to join %s\r\n'</span>% (session.name, name))</span><br><span class="line">    <span class="comment">#输出帮助</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_h</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        session.push(<span class="string">'you can use this commands:\r\n1,who to see who is on this server(online and offline)\r\n2,'</span></span><br><span class="line">        <span class="string">'list to see how many room are avaliable\r\n3,look to see who are in this room\r\n4,login to login online and '</span></span><br><span class="line">        <span class="string">'change a name\r\n5,create to create a new room'</span>)</span><br><span class="line">    <span class="comment">#创建新房间</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_create</span><span class="params">(self, session, line)</span>:</span></span><br><span class="line">        name = line.strip()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            session.push(<span class="string">'please enter a name\r\n'</span>)</span><br><span class="line">        <span class="keyword">elif</span> name <span class="keyword">in</span> self.server.rooms.keys():</span><br><span class="line">            session.push(<span class="string">'The room name %s is taken\r\n'</span> % name)</span><br><span class="line">            session.push(<span class="string">'please try again\r\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ChatRoom(name, self.server)</span><br><span class="line">            session.server.rooms[name] = ChatRoom(name, self.server)</span><br><span class="line">            session.push(<span class="string">"the room %s create successful\r\n"</span> % name)</span><br><span class="line">            session.enter(session.server.rooms[name])</span><br><span class="line"><span class="comment">#每个用户回话,这个是重点类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatSession</span><span class="params">(async_chat)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, server, sock)</span>:</span></span><br><span class="line">        async_chat.__init__(self, sock)</span><br><span class="line">        self.server = server</span><br><span class="line">        self.set_terminator(<span class="string">'\r\n'</span>)</span><br><span class="line">        self.data = []</span><br><span class="line">        self.name = <span class="string">'visitor'</span> + str(len(server.users))<span class="comment">#初始化用户名,用visitor1之类来表示</span></span><br><span class="line">        self.room = self.server.main_room</span><br><span class="line">        self.enter(self.server.main_room)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">enter</span><span class="params">(self, room)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cur = self.room</span><br><span class="line">        <span class="keyword">except</span> AttributeError: <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>: cur.remove(self)</span><br><span class="line">        self.room = room</span><br><span class="line">        room.add(self)</span><br><span class="line">    <span class="comment">#当用户有输入的时候</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">collect_incoming_data</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.data.append(data)</span><br><span class="line">    <span class="comment">#当用户输入终止符的时候</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">found_terminator</span><span class="params">(self)</span>:</span></span><br><span class="line">        line = <span class="string">''</span>.join(self.data)</span><br><span class="line">        self.data = []</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.room.handle(self, line)</span><br><span class="line">        <span class="keyword">except</span> EndSession:</span><br><span class="line">            self.handle_close()</span><br><span class="line">    <span class="comment">#关闭用户回话</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_close</span><span class="params">(self)</span>:</span></span><br><span class="line">        async_chat.handle_close(self)</span><br><span class="line">        <span class="comment">#self.enter()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#服务器类,这个也是重点类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatServer</span><span class="params">(dispatcher)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, port, name)</span>:</span></span><br><span class="line">        dispatcher.__init__(self)</span><br><span class="line">        self.create_socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        <span class="comment">#端口复用</span></span><br><span class="line">        self.set_reuse_addr()</span><br><span class="line">        self.bind((<span class="string">''</span>, port))</span><br><span class="line">        self.listen(<span class="number">5</span>)</span><br><span class="line">        self.sessions = &#123;&#125;</span><br><span class="line">        self.name = name</span><br><span class="line">        self.users = &#123;&#125;</span><br><span class="line">        self.rooms = &#123;&#125;</span><br><span class="line">        <span class="comment">#新建一个房间hall,因为每个初始登陆的用户没有房间,但是操作是依赖与ChatRoom类的,所以给一个初始默认的房间</span></span><br><span class="line">        self.main_room = ChatRoom(<span class="string">'hall'</span>, self)</span><br><span class="line">        self.rooms[self.main_room.name] = self.main_room</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_accept</span><span class="params">(self)</span>:</span></span><br><span class="line">        conn,addr = self.accept()</span><br><span class="line">        ChatSession(self, conn)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'connection attempt from '</span>, addr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'server start'</span></span><br><span class="line">    s = ChatServer(PORT, NAME)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        asyncore.loop()</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt: <span class="keyword">print</span></span><br></pre></td></tr></table></figure>
<p>效果如图所示<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1eqjhaekoz0j20ii0h5q62.jpg" alt="运行效果"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近项目真多,一个接一个的失之交臂,全部都错过了.最近状态有些不好,容易胡思乱想.<br>这是来自书上的一个python聊天程序,我照着敲了一遍,然后给扩展了一下,加了多个房间和创建选择房间的功能,写了好久好久,感觉都拖了一个星期了.<br>下一步是做一个gui,恩,那将是我的第一个gui程序.<br>]]>
    
    </summary>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="socket" scheme="http://jackroyal.github.io/tags/socket/"/>
    
      <category term="python学习笔记" scheme="http://jackroyal.github.io/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python学习笔记--socket编程端口复用]]></title>
    <link href="http://jackroyal.github.io/2015/03/18/python-socket-port-reuse/"/>
    <id>http://jackroyal.github.io/2015/03/18/python-socket-port-reuse/</id>
    <published>2015-03-18T00:47:02.000Z</published>
    <updated>2015-05-06T14:25:45.683Z</updated>
    <content type="html"><![CDATA[<p>最近在学习socket编程,遇到一个问题:<br>我先bind一个端口后,如果通过ctr+c关闭进程.接下来执行程序的时候,就会提示<code>socket.error: Address already in use</code>.<br><a id="more"></a><br>照例google一番,找到<a href="http://blog.csdn.net/xl_xunzhao/article/details/3130037" target="_blank" rel="external">这个</a>.博主说的情况和我的一样.<br>我还在stackoverflow上找到<a href="http://stackoverflow.com/questions/4465959/python-errno-98-address-already-in-use" target="_blank" rel="external">这个</a>.<br>修改后代码如下:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server_socket = socket.<span class="function"><span class="title">socket</span><span class="params">(socket.AF_INET, socket.SOCK_STREAM)</span></span></span><br><span class="line">#下面这行是关健</span><br><span class="line">server_socket.<span class="function"><span class="title">setsockopt</span><span class="params">(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span></span></span><br><span class="line"></span><br><span class="line">server_socket.<span class="function"><span class="title">bind</span><span class="params">((<span class="string">''</span>, PORT)</span></span>)</span><br><span class="line">server_socket.<span class="function"><span class="title">listen</span><span class="params">(<span class="number">5</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>然后就搞定了.</p>
<p>下面的代码是socket编程敲得两个小例子,基于socket的聊天小程序都是别人的东西,只是练习一下,源地址在本文最后.</p>
<h2 id="多线程版本服务器端程序server2-py">多线程版本服务器端程序server2.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8-*-</span></span><br><span class="line">__author__ = <span class="string">'chen'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket,sys</span><br><span class="line"><span class="keyword">from</span> thread <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">''</span></span><br><span class="line">PORT = <span class="number">8888</span></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'socket created'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s.bind((HOST, PORT))</span><br><span class="line"><span class="keyword">except</span> socket.error, msg:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'bind failed.Error code: |||%S Message: %s'</span> %(str(msg[<span class="number">0</span>]), msg[<span class="number">1</span>])</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'socket bind complete'</span></span><br><span class="line"></span><br><span class="line">s.listen(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'socket now listening'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clientthread</span><span class="params">(conn)</span>:</span></span><br><span class="line">    conn.send(<span class="string">'welcome to the server.Type something and hit enter\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        data = conn.recv(<span class="number">1024</span>)</span><br><span class="line">        reply = <span class="string">'ok...'</span> + data</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        conn.sendall(reply)</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    conn, addr = s.accept()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'connected with %s : %s'</span> %(addr[<span class="number">0</span>],str(addr[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">    start_new_thread(clientthread, (conn,))</span><br><span class="line"></span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<p>直接telnet连接socket,就可以调试<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">telnet</span> localhost <span class="number">8888</span></span><br></pre></td></tr></table></figure></p>
<h2 id="改良版,带广播的聊天室程序server3-py">改良版,带广播的聊天室程序server3.py</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8-*-</span></span><br><span class="line">__author_<span class="number">_</span> = <span class="string">'chen'</span></span><br><span class="line"></span><br><span class="line">import <span class="keyword">socket</span>, <span class="keyword">select</span></span><br><span class="line"></span><br><span class="line">def broadcast_data(sock, message):</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">socket</span> in CONNECTION_LIST:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">socket</span> != server_socket != sock:</span><br><span class="line">            try:</span><br><span class="line">                <span class="keyword">socket</span>.<span class="keyword">send</span>(message)</span><br><span class="line">            except msg:</span><br><span class="line">                <span class="keyword">socket</span>.<span class="keyword">close</span>()</span><br><span class="line">                CONNECTION_LIST.remove(<span class="keyword">socket</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">"__main__"</span>:</span><br><span class="line">    CONNECTION_LIST = []</span><br><span class="line">    RECV_BUFFER = <span class="number">4096</span></span><br><span class="line">    PORT = <span class="number">5000</span></span><br><span class="line">    server_socket = <span class="keyword">socket</span>.<span class="keyword">socket</span>(<span class="keyword">socket</span>.AF_INET, <span class="keyword">socket</span>.SOCK_STREAM)</span><br><span class="line">    server_socket.<span class="keyword">setsockopt</span>(<span class="keyword">socket</span>.SOL_SOCKET, <span class="keyword">socket</span>.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">    server_socket.<span class="keyword">bind</span>((<span class="string">''</span>, PORT))</span><br><span class="line">    server_socket.<span class="keyword">listen</span>(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    CONNECTION_LIST.append(server_socket)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"chat server started on port <span class="variable">%s</span>"</span> % str(PORT)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        read_sockets, write_sockets,error_sockets = <span class="keyword">select</span>.<span class="keyword">select</span>(CONNECTION_LIST, [], [])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> sock in read_sockets:</span><br><span class="line">            <span class="keyword">if</span> sock == server_socket:</span><br><span class="line">                sockfd,addr = server_socket.<span class="keyword">accept</span>()</span><br><span class="line">                CONNECTION_LIST.append(sockfd)</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"client (<span class="variable">%s</span>, <span class="variable">%s</span>) connected"</span> % addr</span><br><span class="line"></span><br><span class="line">                broadcast_data(sockfd, <span class="string">"[<span class="variable">%s</span>:<span class="variable">%s</span>] entered room\n"</span> % addr)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                try:</span><br><span class="line">                    data = sock.<span class="keyword">recv</span>(RECV_BUFFER)</span><br><span class="line">                    <span class="keyword">if</span> data:</span><br><span class="line">                        <span class="keyword">print</span>  <span class="string">"[<span class="variable">%s</span>:<span class="variable">%s</span>]"</span> % (str(sock.<span class="keyword">getpeername</span>()), data)</span><br><span class="line">                        broadcast_data(sock, <span class="string">"[<span class="variable">%s</span>:<span class="variable">%s</span>]"</span> % (str(sock.<span class="keyword">getpeername</span>()), data))</span><br><span class="line">                except msg:</span><br><span class="line">                    <span class="keyword">print</span> msg</span><br><span class="line">                    broadcast_data(sock, <span class="string">"client (<span class="variable">%s</span>, <span class="variable">%s</span>) is offline "</span>% addr)</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"client (<span class="variable">%s</span>,<span class="variable">%s</span>) is offline "</span> % addr</span><br><span class="line">                    sock.<span class="keyword">close</span>()</span><br><span class="line">                    CONNECTION_LIST.remove(sock)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">    server_socket.<span class="keyword">close</span>()</span><br></pre></td></tr></table></figure>
<h2 id="客户端程序client3-py">客户端程序client3.py</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8-*-</span></span><br><span class="line">__author_<span class="number">_</span> = <span class="string">'chen'</span></span><br><span class="line"></span><br><span class="line">import <span class="keyword">socket</span>,<span class="keyword">select</span>,string,sys</span><br><span class="line"></span><br><span class="line">def prompt():</span><br><span class="line">    sys.stdout.<span class="keyword">write</span>(<span class="string">'[you]'</span>)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name_<span class="number">_</span> == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">if</span>(len(sys.argv)&lt;<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'usage: python client3.py hostname port'</span></span><br><span class="line">        sys.<span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line">    host = sys.argv[<span class="number">1</span>]</span><br><span class="line">    port = <span class="keyword">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">s</span> = <span class="keyword">socket</span>.<span class="keyword">socket</span>(<span class="keyword">socket</span>.AF_INET, <span class="keyword">socket</span>.SOCK_STREAM)</span><br><span class="line">    <span class="keyword">s</span>.settimeout(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">s</span>.<span class="keyword">connect</span>((host, port))</span><br><span class="line">    except:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'unable to connect'</span></span><br><span class="line">        sys.<span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'connected to remote host. start sending messages'</span></span><br><span class="line">    prompt()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        rlist = [sys.stdin, <span class="keyword">s</span>]</span><br><span class="line"></span><br><span class="line">        read_list, write_list, error_list = <span class="keyword">select</span>.<span class="keyword">select</span>(rlist, [], [])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> sock in read_list:</span><br><span class="line">            <span class="keyword">if</span> sock == <span class="keyword">s</span>:</span><br><span class="line">                data = sock.<span class="keyword">recv</span>(<span class="number">4096</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">'\nDisconnected from chat server'</span></span><br><span class="line">                    sys.<span class="keyword">exit</span>()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sys.stdout.<span class="keyword">write</span>(data)</span><br><span class="line">                    prompt()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                msg = sys.stdin.<span class="keyword">readline</span>()</span><br><span class="line">                <span class="keyword">s</span>.<span class="keyword">send</span>(msg)</span><br><span class="line">                prompt()</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://www.cnblogs.com/hazir/p/python_socket_programming.html" target="_blank" rel="external">Python Socket 网络编程</a><br>2 <a href="http://www.cnblogs.com/hazir/p/python_chat_room.html" target="_blank" rel="external">Python Socket 编程——聊天室示例程序</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近在学习socket编程,遇到一个问题:<br>我先bind一个端口后,如果通过ctr+c关闭进程.接下来执行程序的时候,就会提示<code>socket.error: Address already in use</code>.<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://jackroyal.github.io/tags/Linux/"/>
    
      <category term="python" scheme="http://jackroyal.github.io/tags/python/"/>
    
      <category term="socket" scheme="http://jackroyal.github.io/tags/socket/"/>
    
      <category term="python学习笔记" scheme="http://jackroyal.github.io/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[shadowsocks的安装和配置--在ubuntu和ubuntu中]]></title>
    <link href="http://jackroyal.github.io/2015/03/09/use-ss/"/>
    <id>http://jackroyal.github.io/2015/03/09/use-ss/</id>
    <published>2015-03-09T14:26:21.000Z</published>
    <updated>2015-06-07T09:46:22.594Z</updated>
    <content type="html"><![CDATA[<p>最近我的vpn一直在抽风，几乎没法正常使用，而且我的chrome也是各种花屏，我快疯了，没办法，只能改用shadowsocks了。<br>搭建过程分为两部分:服务端和客户端(这里是主要是ubuntu的客户端)。<br><a id="more"></a></p>
<h1 id="1_系统环境">1 系统环境</h1><p><strong>服务器</strong>:DigitalOcean上的Ubuntu 14.04 LTS<br><strong>客户端</strong>:Ubuntu 14.04 LTS</p>
<h1 id="2_服务器端安装和配置">2 服务器端安装和配置</h1><p>这里主要是参考github的<a href="https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="external">官方说明</a><br>通过ssh登陆的服务器上去,这里不在赘述如何登陆.<br>以下主要针对linux服务器,windows服务器查看<a href="https://github.com/shadowsocks/shadowsocks/wiki/Install-Shadowsocks-Server-on-Windows" target="_blank" rel="external">这里</a></p>
<h2 id="安装">安装</h2><p>Linux不同的发行版本执行的命令如下<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Debian / Ubuntu:</span><br><span class="line"></span><br><span class="line">apt-get <span class="keyword">install</span> python-pip</span><br><span class="line">pip <span class="keyword">install</span> shadowsocks</span><br><span class="line"></span><br><span class="line">CentOS:</span><br><span class="line"></span><br><span class="line">yum <span class="keyword">install</span> python-setuptools &amp;&amp; easy_install pip</span><br><span class="line">pip <span class="keyword">install</span> shadowsocks</span><br></pre></td></tr></table></figure></p>
<h2 id="配置">配置</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>shadowsocks.json</span><br></pre></td></tr></table></figure>
<p>配置文件的内容大致如下:<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">server</span>":<span class="value"><span class="string">"你的服务器的ip"</span></span>,</span><br><span class="line">    "<span class="attribute">server_port</span>":<span class="value"><span class="number">8388</span></span>,</span><br><span class="line">    "<span class="attribute">local_address</span>": <span class="value"><span class="string">"127.0.0.1"</span></span>,</span><br><span class="line">    "<span class="attribute">local_port</span>":<span class="value"><span class="number">1080</span></span>,</span><br><span class="line">    "<span class="attribute">password</span>":<span class="value"><span class="string">"你设置的密码"</span></span>,</span><br><span class="line">    "<span class="attribute">timeout</span>":<span class="value"><span class="number">300</span></span>,</span><br><span class="line">    "<span class="attribute">method</span>":<span class="value"><span class="string">"aes-256-cfb"</span></span>,</span><br><span class="line">    "<span class="attribute">fast_open</span>": <span class="value"><span class="literal">false</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>参数名称       解释</strong><br>server         安装shadowsocks服务器ip<br>server_port    服务器端口号<br>local_address  本地服务器默认是127.0.0.1<br>local_port     本地监听的端口号<br>password       密码<br>timeout        超时时间,单位是秒<br>method         加密方法默认是: “aes-256-cfb”可以用其他加密方法<br>fast_open      是否使用TCP_FASTOPEN,默认为不使用<br>workers        number of workers, available on Unix/Linux</p>
<h2 id="运行">运行</h2><p>前台运行的命令<br><code>ssserver -c /etc/shadowsocks.json</code><br>后台运行<br><code>ssserver -c /etc/shadowsocks.json -d start</code><br><code>ssserver -c /etc/shadowsocks.json -d stop</code><br>ps:我上述两条命令都会出错,这两条命令来自官方的github,我用的是下面的<br><code>nohup ssserver -c /etc/shadowsocks.json &gt; aa.log</code></p>
<h2 id="开机自启">开机自启</h2><p>我们把它写入/etc/rc.local中就可以完成开机自启动了.<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/rc<span class="class">.local</span>  #打开rc.local文件</span><br><span class="line">#然后在exit前面加入下面这一行</span><br><span class="line"><span class="id">#nohup</span> /usr/local/bin/ssserver -c /etc/shadowsocks<span class="class">.json</span> &gt; aa.log</span><br></pre></td></tr></table></figure></p>
<p>ps:这里我之前犯了一个错误,没有写<code>ssserver</code>的绝对路径,导致开机无法自启动,但是手动执行的话,又是可以执行的</p>
<h1 id="3_客户端的安装和配置">3 客户端的安装和配置</h1><p>客户端按理说和服务器端类似,安装shadowsocks,但是我的就是这个出了问题.</p>
<h2 id="1)_安装相关软件">1) 安装相关软件</h2><p>shadowsocks有各种客户端版本,各个系统都有.在ubuntu下带图形化界面的有shadowsocks-qt5,还可以直接用命令行.</p>
<p><strong>图形化:</strong><br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="instruction"> add-apt-repository </span>ppa:hzwhuang/ss-qt5</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure></p>
<p><em>PS:</em>我的电脑安装这个以后,会自动卸载我的chrome<br><em>PPS:</em>我刚才又试了一次,我在安装了命令行模式的shadowsocks以后,现在不会卸载我的chrome,总算正常了<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">The following extra packages will be installed:</span><br><span class="line">  libbotan-<span class="number">1.10</span>-<span class="number">0</span> libqrencode3 libqtshadowsocks libzbar0</span><br><span class="line">The following packages will be REMOVED:</span><br><span class="line">  libbotan-<span class="number">1.10</span>-<span class="number">0</span>:i386 libqtshadowsocks:i386 libzbar0:i386</span><br><span class="line">The following <span class="keyword">NEW</span> packages will be installed:</span><br><span class="line">  libbotan-<span class="number">1.10</span>-<span class="number">0</span> libqrencode3 libqtshadowsocks libzbar0 shadowsocks-qt5</span><br><span class="line"><span class="number">0</span> upgraded, <span class="number">5</span> newly installed, <span class="number">3</span> <span class="keyword">to</span> <span class="keyword">remove</span> <span class="keyword">and</span> <span class="number">19</span> <span class="keyword">not</span> upgraded.</span><br><span class="line">Need <span class="keyword">to</span> get <span class="number">1</span>,<span class="number">280</span> kB <span class="keyword">of</span> archives.</span><br><span class="line">After this operation, <span class="number">662</span> kB <span class="keyword">of</span> additional disk space will be used.</span><br><span class="line"><span class="keyword">Do</span> you want <span class="keyword">to</span> <span class="keyword">continue</span>? [Y/n]</span><br></pre></td></tr></table></figure></p>
<p><strong>命令行模式:</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="operator"><span class="keyword">install</span> python-pip python-dev build-essential </span><br><span class="line">sudo pip <span class="keyword">install</span>  pip</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> python-m2crypto</span><br><span class="line">sudo pip <span class="keyword">install</span> shadowsocks</span></span><br></pre></td></tr></table></figure></p>
<p>我因为之前在环境中就安装过pip,所以我只需要执行倒数第三个和第四个命令.<br>但是我的倒数第四个命令<code>pip install shadowsocks</code>一直报错:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Exception: Traceback (most recent call last):</span><br><span class="line"><span class="keyword">File</span> <span class="string">"/usr/lib/python2.7/dist-packages/pip/basecommand.py"</span>, <span class="keyword">line</span> 122, <span class="keyword">in</span> main</span><br><span class="line">  status = self.<span class="keyword">run</span>(options, <span class="keyword">args</span>)</span><br><span class="line"><span class="keyword">File</span> <span class="string">"/usr/lib/python2.7/dist-packages/pip/commands/install.py"</span>, <span class="keyword">line</span> 278, <span class="keyword">in</span> <span class="keyword">run</span></span><br><span class="line">  requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle) </span><br><span class="line"><span class="keyword">File</span> <span class="string">"/usr/lib/python2.7/dist-packages/pip/req.py"</span>, <span class="keyword">line</span> 1177, <span class="keyword">in</span> prepare_files </span><br><span class="line">  url = finder.find_requirement(req_to_install, upgrade=self.upgrade) </span><br><span class="line"><span class="keyword">File</span> <span class="string">"/usr/lib/python2.7/dist-packages/pip/index.py"</span>, <span class="keyword">line</span> 256, <span class="keyword">in</span> find_requirement</span><br><span class="line">  page_versions.extend(self._package_versions(page.links, req.name.<span class="literal">lower</span>())) </span><br><span class="line"><span class="keyword">File</span> <span class="string">"/usr/lib/python2.7/dist-packages/pip/index.py"</span>, <span class="keyword">line</span> 432, <span class="keyword">in</span> _package_versions </span><br><span class="line">  <span class="keyword">for</span> link <span class="keyword">in</span> self._sort_links(links): </span><br><span class="line"><span class="keyword">File</span> <span class="string">"/usr/lib/python2.7/dist-packages/pip/index.py"</span>, <span class="keyword">line</span> 422, <span class="keyword">in</span> _sort_links </span><br><span class="line">  <span class="keyword">for</span> link <span class="keyword">in</span> links: </span><br><span class="line"><span class="keyword">File</span> <span class="string">"/usr/lib/python2.7/dist-packages/pip/index.py"</span>, <span class="keyword">line</span> 769, <span class="keyword">in</span> links </span><br><span class="line">  <span class="keyword">for</span> anchor <span class="keyword">in</span> self.parsed.findall(<span class="string">".//a"</span>):</span><br><span class="line">AttributeError: 'Document' object has <span class="keyword">no</span> attribute 'findall'</span><br><span class="line"></span><br><span class="line">Storing debug <span class="keyword">log</span> <span class="keyword">for</span> failure <span class="keyword">in</span> /root/.pip/pip.<span class="literal">log</span></span><br></pre></td></tr></table></figure></p>
<p>网上搜索一番,在<a href="https://github.com/pypa/pip/issues/1742" target="_blank" rel="external">这里</a>找到答案.<br>解决方法很简单,执行<code>easy_install pip</code>,就ok(貌似是把pip重新安装了一次).</p>
<h2 id="2)_客户端运行">2) 客户端运行</h2><p>shadowsocks图形化的比较简单,这里不表.<br>命令行模式,启动如下:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sslocal -s 服务器ip -<span class="tag">p</span> <span class="number">8388</span> -k 密码</span><br></pre></td></tr></table></figure></p>
<p>启动成功后会有如下输出:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2015<span class="tag">-03-10</span> 11<span class="pseudo">:12</span><span class="pseudo">:59</span> <span class="tag">INFO</span>     <span class="tag">loading</span> <span class="tag">libcrypto</span> <span class="tag">from</span> <span class="tag">libcrypto</span><span class="class">.so</span><span class="class">.1</span><span class="class">.0</span><span class="class">.0</span></span><br><span class="line">2015<span class="tag">-03-10</span> 11<span class="pseudo">:12</span><span class="pseudo">:59</span> <span class="tag">INFO</span>     <span class="tag">starting</span> <span class="tag">local</span> <span class="tag">at</span> 127<span class="class">.0</span><span class="class">.0</span><span class="class">.1</span><span class="pseudo">:1080</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3)_浏览器代理设置">3) 浏览器代理设置</h2><p>一般来说我们不希望shadowsocks做全局的翻墙,那样,访问国内的速度也会变慢,我们在chome浏览器中安装switchysharp,来管理代理.具体设置如下所示:<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1eq0k16t5ejj20ne0ihmzh.jpg" alt="swichysharp设置"></p>
<p>enjoy it!</p>
<h1 id="后记">后记</h1><p>安卓客户端安装,<a href="https://apps.evozi.com/apk-downloader/?id=com.github.shadowsocks" target="_blank" rel="external">点我点我</a></p>
<h1 id="参考文献">参考文献</h1><p>1 这是一篇好博客 <a href="http://mushapi.com/shadowsocks-install-config-using.html" target="_blank" rel="external">http://mushapi.com/shadowsocks-install-config-using.html</a><br>2 <a href="https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="external">shadowsocks使用说明</a><br>3 <a href="https://github.com/pypa/pip/issues/1742" target="_blank" rel="external">修复我pip问题的一个issue</a></p>
<h1 id="致谢">致谢</h1><p>这个网站可以下载google play的apk,对于我等天朝良民来说,可真是个好东西<br><a href="https://apps.evozi.com/apk-downloader/?id=com.github.shadowsocks" target="_blank" rel="external">https://apps.evozi.com/apk-downloader/?id=com.github.shadowsocks</a></p>
<p>我们家<a href="http://huirong.github.io" target="_blank" rel="external">笨笨的博客</a>弄好了,欢迎访问</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近我的vpn一直在抽风，几乎没法正常使用，而且我的chrome也是各种花屏，我快疯了，没办法，只能改用shadowsocks了。<br>搭建过程分为两部分:服务端和客户端(这里是主要是ubuntu的客户端)。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://jackroyal.github.io/tags/Linux/"/>
    
      <category term="shadowsocks" scheme="http://jackroyal.github.io/tags/shadowsocks/"/>
    
      <category term="ubuntu" scheme="http://jackroyal.github.io/tags/ubuntu/"/>
    
      <category term="Linux" scheme="http://jackroyal.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[kali安装后设置]]></title>
    <link href="http://jackroyal.github.io/2015/03/04/after-kali/"/>
    <id>http://jackroyal.github.io/2015/03/04/after-kali/</id>
    <published>2015-03-04T06:14:57.000Z</published>
    <updated>2015-05-06T14:25:45.621Z</updated>
    <content type="html"><![CDATA[<p>kali安装好了，还有几件事要做<br>我们用root的身份登进去系统<br><a id="more"></a></p>
<h1 id="1_更新软件源">1 更新软件源</h1><p>官方自带的软件源速度相对比较慢，资源也少一些，我们添加一些国内的源进去<br>vi /etc/apt/sources.list<br>（可自由选择，不一定要全部）：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#官方源</span><br><span class="line">deb <span class="string">http:</span><span class="comment">//http.kali.org/kali kali main non-free contrib</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//http.kali.org/kali kali main non-free contrib</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//security.kali.org/kali-security kali/updates main contrib non-free</span></span><br><span class="line"></span><br><span class="line">#激进源，新手不推荐使用这个软件源</span><br><span class="line">deb <span class="string">http:</span><span class="comment">//repo.kali.org/kali kali-bleeding-edge main</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//repo.kali.org/kali kali-bleeding-edge main</span></span><br><span class="line"></span><br><span class="line">#中科大kali源</span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/kali kali main non-free contrib</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/kali kali main non-free contrib</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.ustc.edu.cn/kali-security kali/updates main contrib non-free</span></span><br><span class="line"></span><br><span class="line">#阿里云kali源</span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/kali kali main non-free contrib</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/kali kali main non-free contrib</span></span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/kali-security kali/updates main contrib non-free</span></span><br></pre></td></tr></table></figure></p>
<p>保存之后运行：<br><code>apt-get update</code>     #刷新系统<br><code>apt-get dist-upgrade</code>        #安装更新</p>
<h1 id="2_安装中文输入法和字体">2 安装中文输入法和字体</h1><p>安装字体<br><code>apt-get install ttf-wqy-microhei ttf-wqy-zenhei</code><br> 执行以下命令<br> <code>apt-get install fcitx fcitx-googlepinyin</code></p>
<h1 id="3_安装vpn">3 安装vpn</h1><p>kali默认情况下vpn是无法使用的，需要安装相关组件<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get <span class="operator"><span class="keyword">install</span> network-manager-openvpn</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> network-manager-openvpn-gnome</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> network-manager-pptp</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> network-manager-pptp-gnome</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> network-manager-strongswan</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> network-manager-vpnc</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> network-manager-vpnc-gnome</span><br><span class="line">/etc/init.d/network-manager restart</span></span><br></pre></td></tr></table></figure></p>
<h1 id="4_网卡管理显示“device_not_managed”">4 网卡管理显示“device not managed”</h1><p><code>vi  /etc/NetworkManager/NetworkManager.conf</code><br>修改<code>managed=false</code>为<code>managed=true</code><br>然后重启网络管理<br><code>service network-manager restart</code></p>
<h1 id="5_安装chrome浏览器">5 安装chrome浏览器</h1><p><code>apt-get install google-chrome-unstable</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>kali安装好了，还有几件事要做<br>我们用root的身份登进去系统<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://jackroyal.github.io/tags/Linux/"/>
    
      <category term="kali" scheme="http://jackroyal.github.io/tags/kali/"/>
    
      <category term="Linux" scheme="http://jackroyal.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[kali和ubuntu双系统安装]]></title>
    <link href="http://jackroyal.github.io/2015/03/03/kali-and-ubuntu/"/>
    <id>http://jackroyal.github.io/2015/03/03/kali-and-ubuntu/</id>
    <published>2015-03-03T13:17:41.000Z</published>
    <updated>2015-05-06T14:25:45.652Z</updated>
    <content type="html"><![CDATA[<p>时间忽快忽慢，一转眼，年过完了，又回来学校了，又一个多月没有push了，重新回到github。今天我们家笨笨给我找了点kali的资料，索性就把kali捡起来，第一步安装kali的系统。<br>此处背景不再介绍，直奔主题。kali的安装过程和ubuntu的安装过程类似，应该说原理上是一模一样的，只是界面有些不同。我的电脑当前已经安装了win8和ubuntu，现在需要再加一个kali的系统，三系统共存。<br>大体分为如下几个步骤：</p>
<h3 id="1_下载kali镜像">1 下载kali镜像</h3><h3 id="2_刻录u盘">2 刻录u盘</h3><h3 id="3_安装kali">3 安装kali</h3><h2 id="<!-_more_->"><a id="more"></a></h2><h1 id="1_下载kali镜像-1">1 下载kali镜像</h1><p>这步很简单，我们去kali的官网下载<a href="https://www.kali.org/downloads/" target="_blank" rel="external">https://www.kali.org/downloads/</a>,下载对应的版本。我这里下载的是第一个64位版本（<a href="http://cdimage.kali.org/kali-1.1.0/kali-linux-1.1.0-amd64.iso" target="_blank" rel="external">http://cdimage.kali.org/kali-1.1.0/kali-linux-1.1.0-amd64.iso</a>）,因为是在ubuntu下，我们可以顺手校验一下文件的hash值，防止文件损坏。<br>在终端中输入<code>sha1sum /home/chen/kali-linux-1.1.0-amd64.iso</code><br>查看输出是否是<code>40a1fd1d4864e7fac70438a1bf2095c8c1a4e764</code>，若正确，则第一步完成。</p>
<h1 id="2_刻录u盘-1">2 刻录u盘</h1><p>如果采用硬盘安装的话，我们需要在win下面操作，使用easybcd来编辑grub引导，还需要解压文件，相对比较麻烦，我这里采用u盘安装，相对比较简单。<br>和安装ubuntu不同，我之前在win下用UltraISO来刻录,<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1epsvwgs1rqj20fa0c676e.jpg" alt="刻录ubuntu">如图所示，便捷启动是可以不修改的，直接默认，点击写入就行。我今天在刻录kali的时候，发现这样写的u盘无法启动，开机的时候会提示<code>failed to boot from USB disk with error: gfxboot.c32: not a COM32R Image boot:</code>的错误。<br>解决方法有两个<br>1 linux的用mkusb，windows的用Win32DiskImager 来制作U盘启动<br>具体用法：<br><a href="https://wiki.ubuntu.com/Win32DiskImager/iso2usb" target="_blank" rel="external">https://wiki.ubuntu.com/Win32DiskImager/iso2usb</a><br><a href="https://help.ubuntu.com/community/mkusb" target="_blank" rel="external">https://help.ubuntu.com/community/mkusb</a><br>2 在win下用UltraISO来刻录，记得更改便捷启动的设置，如图所示<br><img src="http://ww4.sinaimg.cn/large/692869a3gw1epsw409qr3j20go09rjtp.jpg" alt="更改便捷启动">，点击便捷启动-&gt;选择写入新的启动器引导扇区——&gt;syslinus——&gt;写入</p>
<p><em>我采用的是法一，我在ubuntu中用mkusb来刻录</em></p>
<h1 id="3_安装kali-1">3 安装kali</h1><p>下面开始安装kali（以下图片是我用virtualbox虚拟机中安装拍摄的）</p>
<h2 id="1_引导成功以后，开机画面如图所示">1 引导成功以后，开机画面如图所示</h2><p><img src="http://ww1.sinaimg.cn/large/692869a3gw1eptme5jxk5j20ne0hcjwf.jpg" alt="开机画面"><br>我们选择<code>Graphical install</code>,图形化安装，也可以选择<code>install</code>那是文字界面安装</p>
<h2 id="2_选择语言，地区">2 选择语言，地区</h2><p>语言： 选择 <code>chinese（simplified）简体中文</code><br>地区： 选择 <code>中国</code></p>
<h2 id="3_配置网络名称和domain">3 配置网络名称和domain</h2><p>这个代表你的电脑在网络上的名称，比如win默认的就是pc-2000123131，也就是别人在网上邻居中看到你的电脑的名称。我们就用默认的<code>localhost</code><br>domain我们留空不管他，下一步</p>
<h2 id="4_设置root密码">4 设置root密码</h2><p>我们设置两次一样的密码就行，不要忘记了<br><img src="http://ww2.sinaimg.cn/large/692869a3gw1eptmmnvzlnj20ne0hcdih.jpg" alt="设置root密码"></p>
<h2 id="5_磁盘分区">5 磁盘分区</h2><p>我们选择第三项<code>手动</code><br><img src="http://ww4.sinaimg.cn/large/692869a3gw1eptmp2uw4ij20ne0hc42t.jpg" alt="磁盘分区选项"><br><strong>分区</strong>，这里我们一共分<code>三个区</code>，一个300M的<code>/boot</code>分区，一个2048M的<code>swap</code>分区，其他的分为一个<code>/</code>（你也可以把/home单独分区出来），因为分区方法类似，所以我只讲一个<code>/boot</code>和<code>swap</code>分区的步骤<br><strong>boot分区</strong><br><strong>注意:</strong>选择<strong>可启动标志</strong>，我们只有/boot设置为<code>开</code>，其他分区的这个选项都是<code>关</code><br><img src="http://ww1.sinaimg.cn/large/692869a3gw1eptmu4nonsj20ne0hctbb.jpg" alt="boot分区设置"><br>设置完成后，选择<code>分区设定结束</code>，点击继续</p>
<p><strong>交换空间</strong><br><strong>注意:</strong>交换空间是一种<strong>文件类型</strong>，其他的分区是<strong>属于载点</strong><br><img src="http://ww1.sinaimg.cn/large/692869a3gw1eptn2gehkdj20ne0hc77a.jpg" alt="交换空间swap分区设置"><br>设置完成后，选择<code>分区设定结束</code>，点击继续</p>
<p>等分区完成，就选择<code>分区设定结束并将修改写入磁盘</code>，点击继续，就开始安装kali</p>
<h2 id="6_启动引导">6 启动引导</h2><p>当系统快安装完成的时候，会出现grub安装的选择,如图所示<br><img src="http://ww3.sinaimg.cn/large/692869a3gw1eptnhakprmj20ns0j7dij.jpg" alt="交换空间swap分区设置"></p>
<p>因为我的系统是<code>win8</code>和<code>ubuntu</code>和<code>kali</code>多系统共存，当前是由<code>win</code>来引导（当前系统由谁引导就看开机看到的第一个<code>系统选择</code>是谁的，如果是红色的ubuntu选项，那就说明由ubuntu引导）。<br>我这里选择否的话，那么我就需要去<code>win</code>里面手动添加<code>kali</code>的引导（使用easybcd来操作）。<br>如果你是<code>ubuntu</code>来引导系统的话，一样需要手动去添加<code>kali</code>的引导（这里我还不会）。<br>所以我选择<code>是</code>，这样装完三个系统都可以正常开机了。</p>
<p>到此所有的安装结束。</p>
<h1 id="参考文献">参考文献</h1><p>1 安装kali 系统 <a href="http://blog.sina.com.cn/s/blog_779dcd090102va9c.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_779dcd090102va9c.html</a><br>2 <a href="http://www.bkjia.com/Linuxjc/844530.html" target="_blank" rel="external">kali系统安装图文教程，kali系统安装图文</a></p>
<h1 id="致谢">致谢</h1><p>这里，要感谢我最亲爱的笨笨<a href="http://huirong.github.io" target="_blank" rel="external">http://huirong.github.io</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>时间忽快忽慢，一转眼，年过完了，又回来学校了，又一个多月没有push了，重新回到github。今天我们家笨笨给我找了点kali的资料，索性就把kali捡起来，第一步安装kali的系统。<br>此处背景不再介绍，直奔主题。kali的安装过程和ubuntu的安装过程类似，应该说原理上是一模一样的，只是界面有些不同。我的电脑当前已经安装了win8和ubuntu，现在需要再加一个kali的系统，三系统共存。<br>大体分为如下几个步骤：</p>
<h3 id="1_下载kali镜像">1 下载kali镜像</h3><h3 id="2_刻录u盘">2 刻录u盘</h3><h3 id="3_安装kali">3 安装kali</h3><h2 id="<!-_more_->">]]>
    
    </summary>
    
      <category term="Linux" scheme="http://jackroyal.github.io/tags/Linux/"/>
    
      <category term="kali" scheme="http://jackroyal.github.io/tags/kali/"/>
    
      <category term="Linux" scheme="http://jackroyal.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux下使用github]]></title>
    <link href="http://jackroyal.github.io/2015/01/19/linux%E4%B8%8B%E4%BD%BF%E7%94%A8github/"/>
    <id>http://jackroyal.github.io/2015/01/19/linux下使用github/</id>
    <published>2015-01-18T16:53:48.000Z</published>
    <updated>2015-05-06T14:25:45.668Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>我的惰性真是病入膏肓了，已经整整3周没有在github上提交东西了，今天看了《模拟游戏》，索性又捡起来了。下面来总结一下linux下github的使用，也算是给自己一个备份，因为我自己也是老忘记。</p>
</blockquote>
<p>使用环境：Ubuntu 14.04</p>
<h2 id="1_安装git相关软件">1 安装git相关软件</h2><p>我的Ubuntu里面没有自带git相关软件，所以我们首先需要安装它，很简单。<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install git</span><br></pre></td></tr></table></figure></p>
<h2 id="2_初始化git的设置">2 初始化git的设置</h2><p>接下来，进行初始化设置，也就是设置你的github账号和密码<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">global</span> user.name <span class="string">"zhangsan"</span><span class="comment">#其中的“zhangsan”输入的就是你注册时候的用户名，这步是设置你提交时候默认的用户名</span></span><br><span class="line"><span class="comment">#之后设置提交时候默认的邮箱，在命令行输入：</span></span><br><span class="line">git config --<span class="built_in">global</span> user.email <span class="string">"haha@qq.com"</span></span><br><span class="line"><span class="comment">#其中的“haha@qq.com”就是你注册时候用的邮箱，当然也可以用别的邮箱，用别的邮箱的时候你必须在github的主页上设置里面把用的邮箱添加进去</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3_开始使用github">3 开始使用github</h2><p>1 首先你的github上应该有一个库，如果没有的话，就去github网站上新建一个库，或者fork一个别人的项目，以下的操作都是建立在这个基础上，<code>假设存在一个库https://github.com/Jackroyal/test.git</code>.<br>如果你的github上已经有库了，可以忽略第1步直接进入第2步<br>2 我们在本地新建一个文件夹(命名随你便，我取名叫做test_git)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="built_in">test</span>_git</span><br></pre></td></tr></table></figure></p>
<p>3 将远程的库复制下来，我们使用git clone命令来完成<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#如果你的环境不在test_git目录</span></span><br><span class="line"><span class="preprocessor">#cd test_git</span></span><br><span class="line"><span class="preprocessor">#如果在test_git中</span></span><br><span class="line">git clone https:<span class="comment">//github.com/Jackroyal/test.git#他会在你的本地新建一个test文件夹</span></span><br><span class="line">cd test</span><br><span class="line"><span class="preprocessor">#接下来新建一个测试文件</span></span><br><span class="line">touch test.md</span><br><span class="line"><span class="preprocessor">#修改测试文件的内容</span></span><br><span class="line">vi test.md</span><br><span class="line"><span class="preprocessor">#提交刚才所做的更改</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"首次提交"</span></span><br></pre></td></tr></table></figure></p>
<p>3 push提交到github<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">add</span> origin http<span class="variable">s:</span>//github.<span class="keyword">com</span>/Jackroyal/test.git</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></p>
<p>之后会提示你输入用户名密码，你输入你github账号和密码就行了<br>打完收工，睡觉<br>后面会陆续介绍hexo在Linux下的使用</p>
<h1 id="参考文献">参考文献</h1><p>1 <a href="http://blog.chinaunix.net/uid-29040159-id-3799719.html" target="_blank" rel="external">ubuntu 下 github 简单的使用教程</a><br>2 <a href="http://blog.csdn.net/pony_maggie/article/details/23207847" target="_blank" rel="external">Github入门级使用攻略</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>我的惰性真是病入膏肓了，已经整整3周没有在github上提交东西了，今天看了《模拟游戏》，索性又捡起来了。下面来总结一下linux下github的使用，也算是给自己一个备份，因为我自己也是老忘记。</p>
</blockquote>
<p>使用环境]]>
    </summary>
    
      <category term="Linux" scheme="http://jackroyal.github.io/tags/Linux/"/>
    
      <category term="github" scheme="http://jackroyal.github.io/tags/github/"/>
    
      <category term="Linux" scheme="http://jackroyal.github.io/categories/Linux/"/>
    
  </entry>
  
</feed>